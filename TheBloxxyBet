local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HealthBarGUI"
screenGui.Parent = player:WaitForChild("PlayerGui")



EO = 0.5 -- EffectOtmization
-- Criação do objeto Sound
sound2 = Instance.new("Sound")
sound2.SoundId = "rbxassetid://9125898975" -- ID do áudio
sound2.Looped = true -- Define o loop
sound2.Volume = 2.5 -- Ajusta o volume (1 é o máximo)
sound2.Parent = game.Workspace -- Define o local onde o som será tocado


-- Criação do objeto Sound
local sound1 = Instance.new("Sound")
sound1.SoundId = "rbxassetid://979751563" -- ID do áudio
sound1.Looped = false -- Define o loop
sound1.Volume = 1 -- Ajusta o volume (1 é o máximo)
sound1.Parent = game.Workspace -- Define o local onde o som será tocado

-- Criação do objeto Sound
local sound3 = Instance.new("Sound")
sound3.SoundId = "rbxassetid://9116426079" -- ID do áudio
sound3.Looped = false -- Define o loop
sound3.Volume = 1 -- Ajusta o volume (1 é o máximo)
sound3.Parent = game.Workspace -- Define o local onde o som será tocado



-- Frame da Barra (Fundo Preto)
local barFrame = Instance.new("Frame")
barFrame.Name = "BarFrame"
barFrame.Parent = screenGui
barFrame.AnchorPoint = Vector2.new(0.5, 0.5)
barFrame.Position = UDim2.new(0.5, 0, 0.9, 0)
barFrame.Size = UDim2.new(0, 300, 0, 40)
barFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
barFrame.BackgroundTransparency = 0.32
barFrame.BorderSizePixel = 0

-- Cantos Arredondados (Barra Preta)
local barCorner = Instance.new("UICorner")
barCorner.CornerRadius = UDim.new(0, 15)
barCorner.Parent = barFrame

-- Barra de Vida (Inicialmente Verde)
local healthBar = Instance.new("Frame")
healthBar.Name = "HealthBar"
healthBar.Parent = barFrame
healthBar.Size = UDim2.new(0, 0, 1, -10) -- Começa vazia
healthBar.Position = UDim2.new(0, 5, 0, 5)
healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
healthBar.BorderSizePixel = 0

-- Cantos Arredondados (Barra Verde)
local healthCorner = Instance.new("UICorner")
healthCorner.CornerRadius = UDim.new(0, 10)
healthCorner.Parent = healthBar

-- Texto do Percentual
local percentText = Instance.new("TextButton")
percentText.Name = "PercentText"
percentText.Parent = barFrame
percentText.Size = UDim2.new(1, 0, 1, 0)
percentText.Position = UDim2.new(0, 0, 0, 0)
percentText.BackgroundTransparency = 1
percentText.Font = Enum.Font.GothamBold
percentText.Text = "0%"
percentText.TextColor3 = Color3.fromRGB(255, 255, 255)
percentText.TextScaled = true
percentText.TextSize = 22
percentText.TextStrokeTransparency = 0.9
percentText.Active = true

percentText.MouseButton1Click:Connect(function()
print(_G.Race)
    if _G.Race then
        print("Porcentagem clicada!!!!!!!!!") -- Aqui você coloca a ação desejada
        Reset = false
        progress = 100
        _G.ActiveRace = true
        _G.Race = false
        _G.ACT =  true
        X = -0.07



        -- Configurações gerais
        local TweenService = game:GetService("TweenService")
        local RunService = game:GetService("RunService")
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Camera = workspace.CurrentCamera
        local Player = game.Players.LocalPlayer
        local Character = Player.Character or Player.CharacterAdded:Wait()


        spawn(function()

        -- Função para tocar o som
        sound1:Play()
        wait(1)

        -- Função para tocar o som
        sound2:Play()


        end)
        wait(0.2)


_G.Agility = true

spawn(
                            function()
                                while _G.Agility do
                                    wait()
                                    pcall(
                                        function()
                                            local player = game.Players.LocalPlayer
                                            local character = player.Character
                                            if character then
                                                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                                                local humanoid = character:FindFirstChildOfClass("Humanoid")

                                                if humanoidRootPart and humanoid then
                                                    local moveDirection = humanoid.MoveDirection

                                                    if moveDirection.Magnitude > 0  then
                                                        local newVelocity =
                                                            Vector3.new(
                                                            moveDirection.X * 100,
                                                            humanoidRootPart.Velocity.Y,
                                                            moveDirection.Z * 100
                                                        )
                                                        humanoidRootPart.Velocity = newVelocity
                                                    end
                                                end
                                            end
                                        end
                                    )
                                end
                            end
                        )


                        -- Variável global que controla a altura do jogador
                        _G.HeightMultiplier = 4 -- Por exemplo, 1.5 aumenta 50% da altura original

                        -- Referência ao LocalPlayer
                        local player = game.Players.LocalPlayer

                        -- Aguarda o personagem carregar
                        player.CharacterAdded:Connect(function(character)
                            local humanoid = character:WaitForChild("Humanoid")

                            -- Ajusta a escala do corpo
                            local scale = humanoid:FindFirstChild("BodyHeightScale") or humanoid:WaitForChild("BodyHeightScale")
                            scale.Value = _G.HeightMultiplier
                        end)

                        -- Caso o personagem já exista (por exemplo, ao redefinir o script)
                        if player.Character then
                            local humanoid = player.Character:WaitForChild("Humanoid")
                            local scale = humanoid:FindFirstChild("BodyHeightScale") or humanoid:WaitForChild("BodyHeightScale")
                            scale.Value = _G.HeightMultiplier
                        end

        -- Funções auxiliares
        local function criarParticula(position, parent, duracao, cor, tamanhoInicial, tamanhoFinal)
            local part = Instance.new("Part")
            part.Size = Vector3.new(0.5, 0.5, 0.5)
            part.Shape = "Ball"
            part.Material = "Neon"
            part.Color = cor
            part.Anchored = true
            part.CanCollide = false
            part.CFrame = CFrame.new(position)
            part.Parent = parent

            local tweenInfo = TweenInfo.new(
                duracao,
                Enum.EasingStyle.Quad,
                Enum.EasingDirection.Out
            )

            local tween = TweenService:Create(part, tweenInfo, { Size = Vector3.new(tamanhoFinal, tamanhoFinal, tamanhoFinal), Transparency = 1 })
            tween:Play()
            tween.Completed:Connect(function()
                part:Destroy()
            end)
        end

        local function criarExplosao(position, quantidade, parent, cor)
            for i = 1, quantidade do
                local offset = Vector3.new(math.random(-16, 16), math.random(-16, 16), math.random(-16, 16))
                criarParticula(position + offset, parent, 1, cor, 0.5, math.random(3, 5))
            end
        end

        -- Ativação do poder
        local function ativarPoder()
            -- Flash inicial
            local flash = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
            flash.IgnoreGuiInset = true
            local frame = Instance.new("Frame", flash)
            frame.Size = UDim2.new(1, 0, 1, 0)
            frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            frame.BackgroundTransparency = 0.5

            local tweenFlash = TweenService:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundTransparency = 1 })
            tweenFlash:Play()
            tweenFlash.Completed:Connect(function()
                flash:Destroy()
            end)


        local function disableAuraEffect()
            local humanoidRootPart = Character:WaitForChild("HumanoidRootPart")

            -- Verifica e remove todos os ParticleEmitters da HumanoidRootPart
            for _, child in ipairs(humanoidRootPart:GetChildren()) do
                if child:IsA("ParticleEmitter") then
                    child:Destroy()
                end
            end
        end


        local Player = game.Players.LocalPlayer
        local Character = Player.Character or Player.CharacterAdded:Wait()

        local function createAuraEffect()
            local humanoidRootPart = Character:WaitForChild("HumanoidRootPart")

            -- Função auxiliar para criar partículas com propriedades específicas
            local function createParticle(properties)
                local particle = Instance.new("ParticleEmitter")
                for prop, value in pairs(properties) do
                    particle[prop] = value
                end
                particle.Parent = humanoidRootPart
                return particle
            end

            -- Partículas amarelo-vermelho vibrante
            createParticle({
                Color = ColorSequence.new{
                    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 0)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
                },
                LightEmission = 2,
                Rate = 5000,
                Speed = NumberRange.new(1, 2),
                Lifetime = NumberRange.new(0.5, 1.5),
                Size = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 1),
                    NumberSequenceKeypoint.new(1, 0)
                },
                Transparency = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 0),
                    NumberSequenceKeypoint.new(1, 1)
                }
            })

            -- Partículas azul-branco com brilho intenso
            createParticle({
                Color = ColorSequence.new{
                    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 170, 255)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
                },
                LightEmission = 3,
                Rate = 3000,
                Speed = NumberRange.new(2, 4),
                Lifetime = NumberRange.new(0.5, 1.5),
                Size = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 2),
                    NumberSequenceKeypoint.new(1, 0.5)
                },
                Transparency = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 0),
                    NumberSequenceKeypoint.new(1, 0.7)
                },
                Rotation = NumberRange.new(0, 360),
                RotSpeed = NumberRange.new(50, 100)
            })

            -- Partículas de faíscas multicoloridas com movimento randômico
            createParticle({
                Color = ColorSequence.new{
                    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 255)),
                    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 0))
                },
                LightEmission = 1,
                Rate = 6000,
                Speed = NumberRange.new(3, 5),
                Lifetime = NumberRange.new(0.5, 1.5),
                Size = NumberSequence.new(0.7),
                Transparency = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 0),
                    NumberSequenceKeypoint.new(1, 1)
                },
                VelocitySpread = 180
            })

            -- Partículas de anéis multicoloridos
            createParticle({
                Color = ColorSequence.new{
                    ColorSequenceKeypoint.new(0, Color3.fromRGB(128, 0, 255)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 215, 0))
                },
                LightEmission = 2,
                Rate = 1000,
                Speed = NumberRange.new(0, 1),
                Lifetime = NumberRange.new(0.5, 1.5),
                Size = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 5),
                    NumberSequenceKeypoint.new(1, 0)
                },
                Transparency = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 0.5),
                    NumberSequenceKeypoint.new(1, 1)
                },
                Rotation = NumberRange.new(0, 360),
                RotSpeed = NumberRange.new(-50, 50)
            })

            -- Partículas de anéis multicoloridos
            createParticle({
                Color = ColorSequence.new{
                    ColorSequenceKeypoint.new(0, Color3.fromRGB(128, 0, 255)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 215, 0))
                },
                LightEmission = 2,
                Rate = 1000,
                Speed = NumberRange.new(0, 1),
                Lifetime = NumberRange.new(0.5, 1.5),
                Size = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 5),
                    NumberSequenceKeypoint.new(1, 0)
                },
                Transparency = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 0.5),
                    NumberSequenceKeypoint.new(1, 1)
                },
                Rotation = NumberRange.new(0, 360),
                RotSpeed = NumberRange.new(-50, 50)
            })

            -- Partículas tipo poeira dourada
            createParticle({
                Color = ColorSequence.new(Color3.fromRGB(255, 223, 0)),
                LightEmission = 1.5,
                Rate = 8000,
                Speed = NumberRange.new(0.5, 1),
                Lifetime = NumberRange.new(0.5, 1.5),
                Size = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 0.3),
                    NumberSequenceKeypoint.new(1, 0.1)
                },
                Transparency = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 0),
                    NumberSequenceKeypoint.new(1, 1)
                },
                VelocitySpread = 360
            })

        end

        createAuraEffect()

        -- Variável global para controle do FOV
        _G.FOVSpeed = 75 -- Valor inicial, pode ser ajustado dinamicamente

        -- Configurações do FOV
        local minFOV = 70 -- Valor mínimo do FOV
        local maxFOV = 2000 -- Valor máximo do FOV
        local smoothness = 0.01 -- Suavidade das transições (quanto menor, mais suave)

        -- Referência à câmera
        local camera = workspace.CurrentCamera

        -- Atualização constante do FOV com base na variável global
        game:GetService("RunService").RenderStepped:Connect(function()
            -- Obtém o valor-alvo do FOV
            local targetFOV = math.clamp(_G.FOVSpeed, minFOV, maxFOV)

            -- Ajusta o FOV suavemente para o valor desejado
            camera.FieldOfView = camera.FieldOfView + (targetFOV - camera.FieldOfView) * smoothness
        end)

        _G.FOVSpeed = 100 -- Valor inicial, pode ser ajustado dinamicamente


        spawn(function()

            -- Configurações iniciais
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        -- Serviço de efeitos visuais
        local tweenService = game:GetService("TweenService")
        local debris = game:GetService("Debris")

        -- Função para criar partículas animadas
        local function criarParticulas2(parent, quantidade, cor, velocidade, tamanho)
            for i = 1, quantidade do
                local part = Instance.new("Part")
                part.Size = Vector3.new(tamanho, tamanho, tamanho)
                part.Shape = Enum.PartType.Ball
                part.Color = cor
                part.Material = Enum.Material.Neon
                part.CanCollide = false
                part.Anchored = true
                part.CFrame = humanoidRootPart.CFrame * CFrame.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10))

                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.Velocity = Vector3.new(math.random(-velocidade, velocidade), math.random(-velocidade, velocidade), math.random(-velocidade, velocidade))
                bodyVelocity.MaxForce = Vector3.new(1e6, 1e6, 1e6)
                bodyVelocity.Parent = part

                local tween = tweenService:Create(part, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1, Size = Vector3.new(0, 0, 0)})
                tween:Play()
                tween.Completed:Connect(function()
                    part:Destroy()
                end)

                part.Parent = parent
                debris:AddItem(part, 3) -- Remove a partícula após 3 segundos
            end
        end

        -- Função para criar formas geométricas animadas
        local function criarFormas(parent, quantidade, cor, velocidade, tamanho)
            for i = 1, quantidade do
                local part = Instance.new("Part")
                part.Size = Vector3.new(tamanho, tamanho, tamanho)
                part.Shape = Enum.PartType.Block
                part.Color = cor
                part.Material = Enum.Material.Neon
                part.CanCollide = false
                part.Anchored = true
                part.CFrame = humanoidRootPart.CFrame * CFrame.new(math.random(-15, 15), math.random(-15, 15), math.random(-15, 15)) * CFrame.Angles(math.random(), math.random(), math.random())

                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.Velocity = Vector3.new(math.random(-velocidade, velocidade), math.random(-velocidade, velocidade), math.random(-velocidade, velocidade))
                bodyVelocity.MaxForce = Vector3.new(1e6, 1e6, 1e6)
                bodyVelocity.Parent = part

                local tween = tweenService:Create(part, TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Transparency = 1, Size = Vector3.new(0, 0, 0)})
                tween:Play()
                tween.Completed:Connect(function()
                    part:Destroy()
                end)

                part.Parent = parent
                debris:AddItem(part, 5) -- Remove a forma após 5 segundos
            end
        end

        -- Função para criar brilho de tela
        local function criarBrilho()
            local bloom = Instance.new("BloomEffect")
            bloom.Intensity = 2
            bloom.Threshold = 2.5
            bloom.Size = 24
            bloom.Parent = game.Lighting
            return bloom
        end

        -- Função para criar um piscar de tela
        local function piscarTela(cor, duracao)
            local flash = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
            local frame = Instance.new("Frame")
            frame.Size = UDim2.new(1, 0, 1, 0)
            frame.BackgroundColor3 = cor
            frame.BorderSizePixel = 0
            frame.Parent = flash

            local tween = tweenService:Create(frame, TweenInfo.new(duracao, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1})
            tween:Play()
            tween.Completed:Connect(function()
                flash:Destroy()
            end)
        end

        -- Função de ativação
        local function ativarPoder()
            -- Piscar de tela inicial

            -- Brilho inicial
            local brilho = criarBrilho()

            -- Explosão inicial massiva
             criarParticulas2(workspace, 250, Color3.fromRGB(255, 0, 0), 40, 3)
            criarFormas(workspace, 70 * EO, Color3.fromRGB(255, 255, 255), 1, 4)
            criarFormas(workspace, 50 * EO, Color3.fromRGB(255, 50, 50), 1, 4)
            criarFormas(workspace, 20 * EO, Color3.fromRGB(50, 50, 255), 1, 4)

            -- Partículas contínuas ao redor do jogador
            local particulasLoop = true
            spawn(function()
                while particulasLoop do
                    criarParticulas2(workspace, 20 * EO, Color3.fromRGB(0, 255, 255), 10, 1)
                    criarFormas(workspace, 10 * EO, Color3.fromRGB(255, 0, 0), 15, 2)
                    criarFormas(workspace, 10 * EO, Color3.fromRGB(0, 0, 255), 15, 2)
                    wait(0.2)
                end
            end)

            -- Após 10 segundos, finalizar o poder
            while _G.ACT do wait()

            end

            particulasLoop = false
            brilho:Destroy()

            -- Explosão final
            criarParticulas2(workspace, 70 * EO, Color3.fromRGB(255, 0, 0), 75, 3)
            criarFormas(workspace, 70 * EO, Color3.fromRGB(255, 255, 255), 30, 4)
            criarFormas(workspace, 50 * EO, Color3.fromRGB(255, 50, 50), 30, 4)
            criarFormas(workspace, 20 * EO, Color3.fromRGB(50, 50, 255), 30, 4)
        end

        -- Ativar automaticamente ao carregar
        ativarPoder()


        end)

            -- Explosão inicial
            criarExplosao(LocalPlayer.Character.HumanoidRootPart.Position, 100, workspace, Color3.fromRGB(85, 255, 85))
            wait(0.01)
            criarExplosao(LocalPlayer.Character.HumanoidRootPart.Position, 100, workspace, Color3.fromRGB(255, 85, 85))
            wait(0.01)
            criarExplosao(LocalPlayer.Character.HumanoidRootPart.Position, 100, workspace, Color3.fromRGB(85, 85, 255))

            -- Modificações visuais
            local blurEffect = Instance.new("BlurEffect", Camera)
            blurEffect.Size = 1


            local particulasFolder = Instance.new("Folder", workspace)

            -- Partículas contínuas
            local conexao = RunService.RenderStepped:Connect(function()
                criarParticula(
                    LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10,10)),
                    particulasFolder,
                    1,
                    Color3.fromRGB(85, 170, 255),
                    0.2,
                    math.random(1, 2)
                )

                criarParticula(
                    LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10,10)),
                    particulasFolder,
                    1,
                    Color3.fromRGB(85, 255, 85),
                    0.2,
                    math.random(1, 2)
                )

                criarParticula(
                    LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10,10)),
                    particulasFolder,
                    1,
                    Color3.fromRGB(255, 85, 85),
                    0.2,
                    math.random(1, 2)
                )

                criarParticula(
                    LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10,10)),
                    particulasFolder,
                    1,
                    Color3.fromRGB(85, 85, 255),
                    0.2,
                    math.random(1, 2)
                )

                criarParticula(
                    LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10,10)),
                    particulasFolder,
                    1,
                    Color3.fromRGB(255, 255, 85),
                    0.2,
                    math.random(1, 2)
                )

                criarParticula(
                    LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10,10)),
                    particulasFolder,
                    1,
                    Color3.fromRGB(255, 85, 255),
                    0.2,
                    math.random(1, 2)
                )

                criarParticula(
                    LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10,10)),
                    particulasFolder,
                    1,
                    Color3.fromRGB(124, 50, 252),
                    0.2,
                    math.random(1, 2)
                )


            end)




        while _G.ACT do wait()

            end



        spawn(function()




        -- Função para tocar o som
        sound3:Play()
        wait(0.5)
        if sound2 and sound2.SoundId == "rbxassetid://9125898975" then
            sound2:Stop()
            sound2:Destroy() -- Remove o objeto de som para liberar recursos
        end

        end)
        wait(0.5)
            -- Flash final
            local flashFinal = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
            flashFinal.IgnoreGuiInset = true
            local frameFinal = Instance.new("Frame", flashFinal)
            frameFinal.Size = UDim2.new(1, 0, 1, 0)
            frameFinal.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
            frameFinal.BackgroundTransparency = 0.5

            local tweenFlashFinal = TweenService:Create(frameFinal, TweenInfo.new(0.7, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundTransparency = 1 })
            tweenFlashFinal:Play()
            tweenFlashFinal.Completed:Connect(function()
                flashFinal:Destroy()
            end)

            -- Explosão final
            criarExplosao(LocalPlayer.Character.HumanoidRootPart.Position, 90 * EO, workspace, Color3.fromRGB(85, 255, 85))
            wait(0.01)
            criarExplosao(LocalPlayer.Character.HumanoidRootPart.Position, 90 * EO, workspace, Color3.fromRGB(255, 85, 85))
            wait(0.01)
            criarExplosao(LocalPlayer.Character.HumanoidRootPart.Position, 90 * EO, workspace, Color3.fromRGB(85, 85, 255))
            wait(0.01)
            criarExplosao(LocalPlayer.Character.HumanoidRootPart.Position, 90 * EO, workspace, Color3.fromRGB(85, 255, 85))
            wait(0.01)
            criarExplosao(LocalPlayer.Character.HumanoidRootPart.Position, 90 * EO, workspace, Color3.fromRGB(255, 85, 85))
            wait(0.01)
            criarExplosao(LocalPlayer.Character.HumanoidRootPart.Position, 90 * EO, workspace, Color3.fromRGB(85, 85, 255))

            -- Remover efeitos
            particulasLoop = false
            blurEffect:Destroy()
            particulasFolder:Destroy()
            conexao:Disconnect()
            disableAuraEffect()
            _G.FOVSpeed = 70 -- Valor inicial, pode ser ajustado dinamicamente
            wait(1.5)
            bloomEffect:Destroy()

        end

        -- Ativação do poder
        ativarPoder()


    end
end)

-- Centralização do Texto
local textAlignment = Instance.new("UITextSizeConstraint")
textAlignment.MaxTextSize = 22
textAlignment.Parent = percentText

-- Variáveis de progresso
local progress = 0 -- Valor inicial (0%)
local maxProgress = 100
NoMax = true
X = 0.2
Reset = true
local resetDelay = 15 -- Tempo de espera para resetar a barra após atingir 100%

-- Função para calcular cor gradual com base no progresso
local function getBarColor(percentage)
    local r, g, b
    if percentage <= 50 then
        r = math.floor(255 * (percentage / 50)) -- Aumenta o vermelho até 50%
        g = 255
        b = 0
    else
        r = 255
        g = math.floor(255 * ((100 - percentage) / 50)) -- Diminui o verde após 50%
        b = math.floor(255 * ((percentage - 50) / 50)) -- Aumenta o azul após 50%
    end
    return Color3.fromRGB(r, g, b)
end

local function mudarCorLevemente(corAtual)
    -- Gerar um pequeno valor aleatório para ajustar a cor (entre -10 e 10)
    local r = math.clamp(corAtual.R + math.random(-10, 10) / 255, 0, 1)
    local g = math.clamp(corAtual.G + math.random(-10, 10) / 255, 0, 1)
    local b = math.clamp(corAtual.B + math.random(-10, 10) / 255, 0, 1)

    return Color3.fromRGB(r * 255, g * 255, b * 255)
end

-- Tremor da barra
local function shakeBar(intensity)
    local randomOffsetX = math.random(-intensity, intensity)
    local randomOffsetY = math.random(-intensity, intensity)
    barFrame.Position = UDim2.new(0.5, randomOffsetX, 0.9, randomOffsetY)
end

-- Reset automático
local function resetBar()
    if Reset then
    _G.ACT = false
        progress = 0
        percentText.Text = "0%"
        healthBar.Size = UDim2.new(0, 0, 1, -10) -- Reseta a barra ao tamanho inicial
        healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        barFrame.Position = UDim2.new(0.5, 0, 0.9, 0) -- Reseta a posição ao centro
        NoMax = true
        X = 0.1
        _G.Agility = false
    end
end

-- Atualização do progresso
game:GetService("RunService").RenderStepped:Connect(function()
    -- Incrementa o progresso de forma mais lenta
    progress = progress + X
    if progress > maxProgress then
        progress = maxProgress
    end

    -- Atualiza o tamanho da barra
    local progressPercent = math.clamp(progress / maxProgress, 0, 1)

    healthBar.Size = UDim2.new(math.max(progressPercent, 0.065), -10, 1, -10)
    healthBar.BackgroundColor3 = getBarColor(progress)

    -- Atualiza o texto
    if progress == maxProgress then
        percentText.Text = "Click para ativar!!!"
         _G.Race = true

        if NoMax then
            NoMax = false
            task.delay(resetDelay, resetBar) -- Aguarda 15 segundos e reseta
            
           
            

         end
    else
        percentText.Text = string.format("%.1f%%", progress) -- Exibe com precisão
    end
    
    if _G.ActiveRace and progress < 1 then
        _G.ActiveRace = false
        Reset = true
        resetBar()
        print(1)
    end
    
    -- Tremor da barra com base no progresso
    if progress >= 70 and not _G.ActiveRace then
        local intensity = 1 -- Tremor leve
        if progress >= 85 then
            intensity = 1.5 -- Tremor moderado
            if progress >= 99 then
             intensity = 1.8
            end
        end
        
        shakeBar(intensity)
    else
        barFrame.Position = UDim2.new(0.5, 0, 0.9, 0) -- Reseta o tremor se o progresso for menor que 75%
    end
end)
