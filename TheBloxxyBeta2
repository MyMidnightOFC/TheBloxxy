print("Script executed correctly in executor.")
local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/shlexware/Orion/main/source")))()
_G.OrionLib = OrionLib

        -- ========================== General System ===========================
        if 1 then
            local placeId = game.PlaceId
            SEA = ""
            if placeId == 2753915549 then
                SEA = "1"
            elseif placeId == 4442272183 then
                SEA = "2"
            elseif placeId == 7449423635 then
                SEA = "3"
            end

            if (SEA == "") then
                while true do
                    task.wait()
                end
            end

            function ReloadPlayersList()
                Playerslist = {}
                table.insert(Playerslist, "Nothing")
                for i, v in pairs(game:GetService("Players"):GetChildren()) do
                    table.insert(Playerslist, v.Name)
                end

                DropdownPlayers:Set(Playerslist, true)
            end

            function VT(tabela)
                local httpService = game:GetService("HttpService")
                local jsonStr = httpService:JSONEncode(tabela)
                return jsonStr
            end

            function FastAttackOn()
                ADM_Boost_0 = ADM_Boost_0 or false
                local Players = game:GetService("Players")
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local RunService = game:GetService("RunService")
                local Net = ReplicatedStorage.Modules.Net
                local RegisterAttack = Net:WaitForChild("RE/RegisterAttack")
                local RegisterHit = Net:WaitForChild("RE/RegisterHit")
                local LocalPlayer = Players.LocalPlayer
                if not ADM_Boost_0 then
                    COMBAT_CONFIG = {
                        enabled = true,
                        attacksPerTarget = 3,
                        maxTargets = 5,
                        baseRange = 100,
                        minDelay = 0.1, -- << Some shit to make sure anti cheat won't reach and ping won't grow
                        maxDelay = 0.15, -- << Some shit to make sure anti cheat won't reach and ping won't grow
                        hitDelay = 0.035, -- << Some shit to make sure anti cheat won't reach and ping won't grow
                        randomization = {
                            range = {min = -3, max = 3}, -- << Some shit to make sure anti cheat won't reach and ping won't grow
                            timing = {min = -0.1, max = 0.1} -- << Some shit to make sure anti cheat won't reach and ping won't grow
                        }
                    }
                else
                    COMBAT_CONFIG = {
                        enabled = true,
                        attacksPerTarget = 10,
                        maxTargets = 7,
                        baseRange = 100,
                        minDelay = 0, -- << Some shit to make sure anti cheat won't reach and ping won't grow
                        maxDelay = 0.002, -- << Some shit to make sure anti cheat won't reach and ping won't grow
                        hitDelay = 0, -- << Some shit to make sure anti cheat won't reach and ping won't grow
                        randomization = {
                            range = {min = -3, max = 3}, -- << Some shit to make sure anti cheat won't reach and ping won't grow
                            timing = {min = -0.02, max = 0.02} -- << Some shit to make sure anti cheat won't reach and ping won't grow
                        }
                    }
                end

                local function GetPrimaryPart(model)
                    return model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("PrimaryPart") or
                        model:FindFirstChild("Head")
                end

                local function IsValidTarget(target)
                    if not target then
                        return false
                    end

                    local humanoid = target:FindFirstChildOfClass("Humanoid")
                    if not humanoid or humanoid.Health <= 0 then
                        return false
                    end

                    local targetPlayer = Players:GetPlayerFromCharacter(target)
                    if
                        targetPlayer and
                            (targetPlayer.Team == LocalPlayer.Team and tostring(LocalPlayer.Team) == "Marines")
                     then
                        return false
                    end

                    return true
                end

                local function GetPlayerTargets()
                    local targets = {}
                    local character = LocalPlayer.Character
                    if not character or not character.PrimaryPart then
                        return targets
                    end

                    local charPos = character.PrimaryPart.Position

                    for _, player in ipairs(Players:GetPlayers()) do
                        if player ~= LocalPlayer then
                            local playerCharacter = player.Character
                            if playerCharacter and IsValidTarget(playerCharacter) then
                                local primaryPart = GetPrimaryPart(playerCharacter)
                                if primaryPart then
                                    local distance = (primaryPart.Position - charPos).Magnitude
                                    local range =
                                        COMBAT_CONFIG.baseRange +
                                        math.random(
                                            COMBAT_CONFIG.randomization.range.min,
                                            COMBAT_CONFIG.randomization.range.max
                                        )

                                    if distance <= range then
                                        table.insert(
                                            targets,
                                            {
                                                part = primaryPart,
                                                distance = distance
                                            }
                                        )
                                    end
                                end
                            end
                        end
                    end

                    return targets
                end

                local function GetNearbyTargets()
                    local character = LocalPlayer.Character
                    if not character or not character.PrimaryPart then
                        return {}
                    end

                    local charPos = character.PrimaryPart.Position
                    local targets = {}

                    -- Adiciona inimigos do jogo
                    for _, folder in ipairs({workspace.Enemies}) do
                        if folder then
                            for _, entity in ipairs(folder:GetChildren()) do
                                if entity ~= character and IsValidTarget(entity) then
                                    local primaryPart = GetPrimaryPart(entity)
                                    if primaryPart then
                                        local distance = (primaryPart.Position - charPos).Magnitude
                                        local range =
                                            COMBAT_CONFIG.baseRange +
                                            math.random(
                                                COMBAT_CONFIG.randomization.range.min,
                                                COMBAT_CONFIG.randomization.range.max
                                            )
                                        if distance <= range then
                                            table.insert(
                                                targets,
                                                {
                                                    part = primaryPart,
                                                    distance = distance
                                                }
                                            )
                                        end
                                    end
                                end
                            end
                        end
                    end

                    -- Adiciona jogadores detectados com certeza
                    for _, playerTarget in ipairs(GetPlayerTargets()) do
                        table.insert(targets, playerTarget)
                    end

                    -- Ordena por distÃ¢ncia
                    table.sort(
                        targets,
                        function(a, b)
                            return a.distance < b.distance
                        end
                    )
                    return targets
                end

                local function PerformAttackSequence(targets)
                    if #targets == 0 then
                        return
                    end
                    RegisterAttack:FireServer()
                    for i = 1, math.min(#targets, COMBAT_CONFIG.maxTargets) do
                        local target = targets[i]
                        for _ = 1, COMBAT_CONFIG.attacksPerTarget do
                            RegisterHit:FireServer(target.part)
                            task.wait(COMBAT_CONFIG.hitDelay + math.random() * COMBAT_CONFIG.randomization.timing.max)
                        end
                    end
                end

                local lastAttackTime = 0
                local function CombatLoop()
                    if not COMBAT_CONFIG.enabled then
                        return
                    end

                    local now = tick()
                    local baseDelay = math.random(COMBAT_CONFIG.minDelay * 100, COMBAT_CONFIG.maxDelay * 100) / 100

                    if now - lastAttackTime >= baseDelay then
                        local targets = GetNearbyTargets()
                        PerformAttackSequence(targets)
                        lastAttackTime = now
                    end
                end

                local combatConnection
                local characterConnection

                function Cleanup()
                    if combatConnection then
                        combatConnection:Disconnect()
                        combatConnection = nil
                    end
                    if characterConnection then
                        characterConnection:Disconnect()
                        characterConnection = nil
                    end
                end

                local function SetupCombat()
                    Cleanup()

                    combatConnection = RunService.Heartbeat:Connect(CombatLoop)
                end

                characterConnection =
                    LocalPlayer.CharacterAdded:Connect(
                    function()
                        task.wait(0.5)
                        SetupCombat()
                    end
                )

                SetupCombat()
            end

            function FastAttackOff()
                if Cleanup then
                    Cleanup()
                end
            end

            function round(num)
                return math.floor(tonumber(num) + 0.5)
            end

            function checkHeight()
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local rootPart = character:WaitForChild("HumanoidRootPart")

                local rayOrigin = rootPart.Position
                local rayDirection = Vector3.new(0, -1000, 0) -- DireÃ§Ã£o para baixo (linha imaginÃ¡ria)

                -- Configura o raio
                local raycastParams = RaycastParams.new()
                raycastParams.FilterDescendantsInstances = {character}
                raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

                local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

                if raycastResult then
                    local distance = (rayOrigin - raycastResult.Position).Magnitude
                    if distance > 10 then
                        return true
                    else
                        return false
                    end
                else
                    return false
                end
            end

            function UsesSkills(Name, Skill)
                if not game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then
                    return false
                end

                if (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name == Name) then
                    for i, v in next, game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[Name]:GetChildren() do
                        if v:IsA("Frame") and v.Name == Skill then
                            if
                                (v.Name ~= "Template" and v.Title.TextColor3 == Color3.new(1, 1, 1) and
                                    v.Cooldown.Size == UDim2.new(1, 0, 1, -1))
                             then
                                return true
                            end
                        end
                    end

                    return false
                end
            end

            _G.PowerPogress = 0
            _G.ACT = true
            EO = 0.2 -- EffectOtmization
            EO2 = 2 / EO -- EffectOtmization

            sound2 = Instance.new("Sound")
            sound2.SoundId = "rbxassetid://9125898975" -- ID do Ã¡udio
            sound2.Looped = true -- Define o loop
            sound2.Volume = 2 -- Ajusta o volume (1 Ã© o mÃ¡ximo)
            sound2.Parent = game.Workspace -- Define o local onde o som serÃ¡ tocado

            sound1 = Instance.new("Sound")
            sound1.SoundId = "rbxassetid://979751563" -- ID do Ã¡udio
            sound1.Looped = false -- Define o loop
            sound1.Volume = 1 -- Ajusta o volume (1 Ã© o mÃ¡ximo)
            sound1.Parent = game.Workspace -- Define o local onde o som serÃ¡ tocado

            sound3 = Instance.new("Sound")
            sound3.SoundId = "rbxassetid://9116426079" -- ID do Ã¡udio
            sound3.Looped = false -- Define o loop
            sound3.Volume = 1 -- Ajusta o volume (1 Ã© o mÃ¡ximo)
            sound3.Parent = game.Workspace -- Define o local onde o som serÃ¡ tocado

            sound4 = Instance.new("Sound")
            sound4.SoundId = "rbxassetid://6859643048" -- ID do Ã¡udio
            sound4.Looped = false -- Define o loop
            sound4.Volume = 1.5 -- Ajusta o volume (1 Ã© o mÃ¡ximo)
            sound4.Parent = game.Workspace -- Define o local onde o som serÃ¡ tocado

            sound5 = Instance.new("Sound")
            sound5.SoundId = "rbxassetid://2937835489" -- ID do Ã¡udio
            sound5.Looped = false -- Define o loop
            sound5.Volume = 1 -- Ajusta o volume (1 Ã© o mÃ¡ximo)
            sound5.Parent = game.Workspace -- Define o local onde o som serÃ¡ tocado

            sound6 = Instance.new("Sound")
            sound6.SoundId = "rbxassetid://4562690876" -- ID do Ã¡udio
            sound6.Looped = false -- Define o loop
            sound6.Volume = 4 -- Ajusta o volume (1 Ã© o mÃ¡ximo)
            sound6.Parent = game.Workspace -- Define o local onde o som serÃ¡ tocado

            function ActivePower()
                task.wait(0.2)
                -- ConfiguraÃ§Ãµes gerais
                local TweenService = game:GetService("TweenService")
                local RunService = game:GetService("RunService")
                local Players = game:GetService("Players")
                local LocalPlayer = Players.LocalPlayer
                local Camera = workspace.CurrentCamera
                local Player = game.Players.LocalPlayer
                local Character = Player.Character or Player.CharacterAdded:Wait()

                spawn(
                    function()
                        -- FunÃ§Ã£o para tocar o som
                        sound1:Play()
                        task.wait(1)

                        -- FunÃ§Ã£o para tocar o som
                        sound2:Play()
                    end
                )
                task.wait(0.2)

                _G.Agility = true

                spawn(
                    function()
                        function AgilityY()
                            task.wait()
                            pcall(
                                function()
                                    local player = game.Players.LocalPlayer
                                    local character = player.Character
                                    if character then
                                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                                        local humanoid = character:FindFirstChildOfClass("Humanoid")

                                        if humanoidRootPart and humanoid then
                                            local moveDirection = humanoid.MoveDirection

                                            if moveDirection.Magnitude > 0 and _G.ACT then
                                                local newVelocity =
                                                    Vector3.new(
                                                    moveDirection.X * 200,
                                                    humanoidRootPart.Velocity.Y,
                                                    moveDirection.Z * 200
                                                )
                                                humanoidRootPart.Velocity = newVelocity
                                            end
                                        end
                                    end
                                end
                            )
                        end
                        while _G.Agility do
                            task.wait()
                            AgilityY()
                        end
                    end
                )

                -- FunÃ§Ãµes auxiliares
                function criarParticula(position, parent, duracao, cor, tamanhoInicial, tamanhoFinal)
                    local part = Instance.new("Part")
                    part.Size = Vector3.new(0.5, 0.5, 0.5)
                    part.Shape = "Ball"
                    part.Material = "Neon"
                    part.Color = cor
                    part.Anchored = true
                    part.CanCollide = false
                    part.CFrame = CFrame.new(position)
                    part.Parent = parent

                    local tweenInfo = TweenInfo.new(duracao, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

                    local tween =
                        TweenService:Create(
                        part,
                        tweenInfo,
                        {Size = Vector3.new(tamanhoFinal, tamanhoFinal, tamanhoFinal), Transparency = 1}
                    )
                    tween:Play()
                    tween.Completed:Connect(
                        function()
                            part:Destroy()
                        end
                    )
                end

                function criarExplosao(position, quantidade, parent, cor)
                    for i = 1, quantidade do
                        local offset = Vector3.new(math.random(-8, 8), math.random(-8, 8), math.random(-8, 8))
                        criarParticula(position + offset, parent, 1, cor, 0.5, math.random(3, 5))
                    end
                end

                -- AtivaÃ§Ã£o do poder
                local function ativarPoder()
                    -- Flash inicial
                    local flash = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
                    flash.IgnoreGuiInset = true
                    local frame = Instance.new("Frame", flash)
                    frame.Size = UDim2.new(1, 0, 1, 0)
                    frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    frame.BackgroundTransparency = 0.5

                    local tweenFlash =
                        TweenService:Create(
                        frame,
                        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    )
                    tweenFlash:Play()
                    tweenFlash.Completed:Connect(
                        function()
                            flash:Destroy()
                        end
                    )

                    local function disableAuraEffect()
                        local humanoidRootPart = Character:WaitForChild("HumanoidRootPart")

                        -- Verifica e remove todos os ParticleEmitters da HumanoidRootPart
                        for _, child in ipairs(humanoidRootPart:GetChildren()) do
                            if child:IsA("ParticleEmitter") then
                                child:Destroy()
                            end
                        end
                    end

                    -- VariÃ¡vel global para controle do FOV
                    _G.FOVSpeed = 75 -- Valor inicial, pode ser ajustado dinamicamente

                    -- ConfiguraÃ§Ãµes do FOV
                    local minFOV = 70 -- Valor mÃ­nimo do FOV
                    local maxFOV = 2000 -- Valor mÃ¡ximo do FOV
                    local smoothness = 0.01 -- Suavidade das transiÃ§Ãµes (quanto menor, mais suave)

                    -- ReferÃªncia Ã  cÃ¢mera
                    local camera = workspace.CurrentCamera

                    function UpdateFov()
                        -- ObtÃ©m o valor-alvo do FOV
                        local targetFOV = math.clamp(_G.FOVSpeed, minFOV, maxFOV)

                        -- Ajusta o FOV suavemente para o valor desejado
                        camera.FieldOfView = camera.FieldOfView + (targetFOV - camera.FieldOfView) * smoothness
                    end
                    -- AtualizaÃ§Ã£o constante do FOV com base na variÃ¡vel global
                    game:GetService("RunService").RenderStepped:Connect(
                        function()
                            UpdateFov()
                        end
                    )

                    _G.FOVSpeed = 100 -- Valor inicial, pode ser ajustado dinamicamente

                    local Player = game.Players.LocalPlayer
                    local Character = Player.Character or Player.CharacterAdded:Wait()

                    local function createAuraEffect()
                        local Player = game.Players.LocalPlayer
                        local Character = Player.Character or Player.CharacterAdded:Wait()
                        local humanoidRootPart = Character:WaitForChild("HumanoidRootPart")

                        -- FunÃ§Ã£o auxiliar para criar partÃ­culas com propriedades especÃ­ficas
                        local function createParticle(properties)
                            local particle = Instance.new("ParticleEmitter")
                            for prop, value in pairs(properties) do
                                particle[prop] = value
                            end
                            particle.Parent = humanoidRootPart
                            return particle
                        end

                        -- PartÃ­culas amarelo-vermelho vibrante
                        createParticle(
                            {
                                Color = ColorSequence.new {
                                    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 0)),
                                    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
                                },
                                LightEmission = 2,
                                Rate = 5000,
                                Speed = NumberRange.new(1, 2),
                                Lifetime = NumberRange.new(0.5, 1.5),
                                Size = NumberSequence.new {
                                    NumberSequenceKeypoint.new(0, 1),
                                    NumberSequenceKeypoint.new(1, 0)
                                },
                                Transparency = NumberSequence.new {
                                    NumberSequenceKeypoint.new(0, 0),
                                    NumberSequenceKeypoint.new(1, 1)
                                }
                            }
                        )

                        -- PartÃ­culas azul-branco com brilho intenso
                        createParticle(
                            {
                                Color = ColorSequence.new {
                                    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 170, 255)),
                                    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
                                },
                                LightEmission = 3,
                                Rate = 3000,
                                Speed = NumberRange.new(2, 4),
                                Lifetime = NumberRange.new(0.5, 1.5),
                                Size = NumberSequence.new {
                                    NumberSequenceKeypoint.new(0, 2),
                                    NumberSequenceKeypoint.new(1, 0.5)
                                },
                                Transparency = NumberSequence.new {
                                    NumberSequenceKeypoint.new(0, 0),
                                    NumberSequenceKeypoint.new(1, 0.7)
                                },
                                Rotation = NumberRange.new(0, 360),
                                RotSpeed = NumberRange.new(50, 100)
                            }
                        )

                        -- PartÃ­culas de faÃ­scas multicoloridas com movimento randÃ´mico
                        createParticle(
                            {
                                Color = ColorSequence.new {
                                    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 255)),
                                    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
                                    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 0))
                                },
                                LightEmission = 1,
                                Rate = 6000,
                                Speed = NumberRange.new(3, 5),
                                Lifetime = NumberRange.new(0.5, 1.5),
                                Size = NumberSequence.new(0.7),
                                Transparency = NumberSequence.new {
                                    NumberSequenceKeypoint.new(0, 0),
                                    NumberSequenceKeypoint.new(1, 1)
                                },
                                VelocitySpread = 180
                            }
                        )

                        -- PartÃ­culas de anÃ©is multicoloridos
                        createParticle(
                            {
                                Color = ColorSequence.new {
                                    ColorSequenceKeypoint.new(0, Color3.fromRGB(128, 0, 255)),
                                    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 215, 0))
                                },
                                LightEmission = 2,
                                Rate = 1000,
                                Speed = NumberRange.new(0, 1),
                                Lifetime = NumberRange.new(0.5, 1.5),
                                Size = NumberSequence.new {
                                    NumberSequenceKeypoint.new(0, 5),
                                    NumberSequenceKeypoint.new(1, 0)
                                },
                                Transparency = NumberSequence.new {
                                    NumberSequenceKeypoint.new(0, 0.5),
                                    NumberSequenceKeypoint.new(1, 1)
                                },
                                Rotation = NumberRange.new(0, 360),
                                RotSpeed = NumberRange.new(-50, 50)
                            }
                        )
                    end

                    createAuraEffect()

                    spawn(
                        function()
                            -- ConfiguraÃ§Ãµes iniciais
                            local player = game.Players.LocalPlayer
                            local character = player.Character or player.CharacterAdded:Wait()
                            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

                            -- ServiÃ§o de efeitos visuais
                            local tweenService = game:GetService("TweenService")
                            local debris = game:GetService("Debris")

                            -- FunÃ§Ã£o para criar partÃ­culas animadas
                            local function criarParticulas2(parent, quantidade, cor, velocidade, tamanho)
                                for i = 1, quantidade do
                                    local part = Instance.new("Part")
                                    part.Size = Vector3.new(tamanho, tamanho, tamanho)
                                    part.Shape = Enum.PartType.Ball
                                    part.Color = cor
                                    part.Material = Enum.Material.Neon
                                    part.CanCollide = false
                                    part.Anchored = true
                                    part.CFrame =
                                        humanoidRootPart.CFrame *
                                        CFrame.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10))

                                    local bodyVelocity = Instance.new("BodyVelocity")
                                    bodyVelocity.Velocity =
                                        Vector3.new(
                                        math.random(-velocidade, velocidade),
                                        math.random(-velocidade, velocidade),
                                        math.random(-velocidade, velocidade)
                                    )
                                    bodyVelocity.MaxForce = Vector3.new(1e6, 1e6, 1e6)
                                    bodyVelocity.Parent = part

                                    local tween =
                                        tweenService:Create(
                                        part,
                                        TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                                        {Transparency = 1, Size = Vector3.new(0, 0, 0)}
                                    )
                                    tween:Play()
                                    tween.Completed:Connect(
                                        function()
                                            part:Destroy()
                                        end
                                    )

                                    part.Parent = parent
                                    debris:AddItem(part, 3) -- Remove a partÃ­cula apÃ³s 3 segundos
                                end
                            end

                            -- FunÃ§Ã£o para criar formas geomÃ©tricas animadas
                            PowerExplosion = 15
                            PowerExplosionMultiplication = 1
                            if _G.Gear > 5 then
                                PowerExplosion = 20
                                PowerExplosionMultiplication = 3
                            end

                            function criarFormas(parent, quantidade, cor, velocidade, tamanho)
                                for i = 1, quantidade do
                                    local part = Instance.new("Part")
                                    part.Size = Vector3.new(tamanho, tamanho, tamanho)
                                    part.Shape = Enum.PartType.Block
                                    part.Color = cor
                                    part.Material = Enum.Material.Neon
                                    part.CanCollide = false
                                    part.Anchored = true
                            
                                    if _G.EffectsPosition then
                                        part.CFrame = _G.EffectsPosition *
                                        CFrame.new(
                                            math.random(PowerExplosion * (-1), PowerExplosion),
                                            math.random(PowerExplosion * (-1), PowerExplosion),
                                            math.random(PowerExplosion * (-1), PowerExplosion)
                                        ) *
                                        CFrame.Angles(math.random(), math.random(), math.random())
                                    else
                                        part.CFrame =
                                            humanoidRootPart.CFrame *
                                            CFrame.new(
                                                math.random(PowerExplosion * (-1), PowerExplosion),
                                                math.random(PowerExplosion * (-1), PowerExplosion),
                                                math.random(PowerExplosion * (-1), PowerExplosion)
                                            ) *
                                            CFrame.Angles(math.random(), math.random(), math.random())
                                    end
                            
                                    local bodyVelocity = Instance.new("BodyVelocity")
                                    bodyVelocity.Velocity =
                                        Vector3.new(
                                        math.random(-velocidade, velocidade),
                                        math.random(-velocidade, velocidade),
                                        math.random(-velocidade, velocidade)
                                    )
                                    bodyVelocity.MaxForce = Vector3.new(1e6, 1e6, 1e6)
                                    bodyVelocity.Parent = part
                            
                                    local tween =
                                        tweenService:Create(
                                        part,
                                        TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out),
                                        {Transparency = 1, Size = Vector3.new(0, 0, 0)}
                                    )
                                    tween:Play()
                                    tween.Completed:Connect(
                                        function()
                                            part:Destroy()
                                        end
                                    )
                            
                                    part.Parent = parent
                                    debris:AddItem(part, 5) -- Remove a forma apÃ³s 5 segundos
                                end
                            end
                            

                            -- FunÃ§Ã£o para criar brilho de tela
                            local function criarBrilho()
                                local bloom = Instance.new("BloomEffect")
                                bloom.Intensity = 2
                                bloom.Threshold = 2.5
                                bloom.Size = 24
                                bloom.Parent = game.Lighting
                                bloomEffect = bloom
                                return bloom
                            end

                            -- FunÃ§Ã£o para criar um piscar de tela
                            local function piscarTela(cor, duracao)
                                local flash = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
                                local frame = Instance.new("Frame")
                                frame.Size = UDim2.new(1, 0, 1, 0)
                                frame.BackgroundColor3 = cor
                                frame.BorderSizePixel = 0
                                frame.Parent = flash

                                local tween =
                                    tweenService:Create(
                                    frame,
                                    TweenInfo.new(duracao, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                                    {BackgroundTransparency = 1}
                                )
                                tween:Play()
                                tween.Completed:Connect(
                                    function()
                                        flash:Destroy()
                                    end
                                )
                            end

                            -- FunÃ§Ã£o de ativaÃ§Ã£o
                            local function ativarPoder()
                                -- Piscar de tela inicial

                                -- Brilho inicial
                                local brilho = criarBrilho()
                                -- ExplosÃ£o inicial massiva
                                criarParticulas2(workspace, 250, Color3.fromRGB(255, 0, 0), 40, 3)
                                criarFormas(
                                    workspace,
                                    80 * EO * PowerExplosionMultiplication,
                                    Color3.fromRGB(0, 0, 255),
                                    15,
                                    2
                                )
                                criarFormas(
                                    workspace,
                                    70 * EO * PowerExplosionMultiplication,
                                    Color3.fromRGB(255, 255, 255),
                                    1,
                                    4
                                )
                                criarFormas(
                                    workspace,
                                    50 * EO * PowerExplosionMultiplication,
                                    Color3.fromRGB(255, 50, 50),
                                    1,
                                    4
                                )
                                criarFormas(
                                    workspace,
                                    50 * EO * PowerExplosionMultiplication,
                                    Color3.fromRGB(50, 50, 255),
                                    1,
                                    4
                                )
                                -- PartÃ­culas contÃ­nuas ao redor do jogador
                                local particulasLoop = true
                                spawn(
                                    function()
                                        while particulasLoop do
                                            criarParticulas2(workspace, 20 * EO, Color3.fromRGB(0, 255, 255), 10, 1)
                                            criarFormas(workspace, 8 * EO, Color3.fromRGB(255, 0, 0), 15, 2)
                                            criarFormas(workspace, 8 * EO, Color3.fromRGB(0, 0, 255), 15, 2)
                                            if _G.Gear == 5 then
                                                criarFormas(workspace, 10 * EO, Color3.fromRGB(40, 40, 250), 1, 2)
                                                criarFormas(workspace, 10 * EO, Color3.fromRGB(40, 40, 255), 1, 2)
                                                criarFormas(workspace, 5 * EO, Color3.fromRGB(40, 250, 0), 1, 2)
                                                criarFormas(workspace, 5 * EO, Color3.fromRGB(250, 130, 0), 1, 2)
                                            end

                                            if _G.Gear == 6 then
                                                criarFormas(workspace, 10 * EO, Color3.fromRGB(200, 0, 200), 1, 2)
                                                criarFormas(workspace, 10 * EO, Color3.fromRGB(250, 0, 250), 1, 2)
                                            end

                                            task.wait(0.2)
                                        end
                                    end
                                )

                                -- ApÃ³s 10 segundos, finalizar o poder
                                while _G.ACT do
                                    task.wait()
                                end
                                task.wait(0.3)
                                particulasLoop = false

                                -- ExplosÃ£o final
                                criarParticulas2(workspace, 60 * EO, Color3.fromRGB(255, 0, 0), 75, 3)
                                criarFormas(workspace, 90 * EO, Color3.fromRGB(255, 255, 255), 30, 4)
                                criarFormas(workspace, 90 * EO, Color3.fromRGB(255, 50, 50), 30, 4)
                                criarFormas(workspace, 90 * EO, Color3.fromRGB(50, 50, 255), 30, 4)
                                criarFormas(workspace, 90 * EO, Color3.fromRGB(50, 250, 255), 30, 4)
                                task.wait(3)
                                brilho:Destroy()
                            end

                            -- Ativar automaticamente ao carregar
                            ativarPoder()
                        end
                    )

                    -- ModificaÃ§Ãµes visuais
                    local blurEffect = Instance.new("BlurEffect", Camera)
                    blurEffect.Size = 1

                    -- ExplosÃ£o inicial
                    criarExplosao(
                        LocalPlayer.Character.HumanoidRootPart.Position,
                        100 * EO,
                        workspace,
                        Color3.fromRGB(85, 255, 85)
                    )
                    task.wait(0.01)
                    criarExplosao(
                        LocalPlayer.Character.HumanoidRootPart.Position,
                        100 * EO,
                        workspace,
                        Color3.fromRGB(255, 85, 85)
                    )
                    task.wait(0.01)
                    criarExplosao(
                        LocalPlayer.Character.HumanoidRootPart.Position,
                        100 * EO,
                        workspace,
                        Color3.fromRGB(85, 85, 255)
                    )

                    local particulasFolder = Instance.new("Folder", workspace)

                    -- PartÃ­culas contÃ­nuas
                    X1 = 1
                    function ConstParticles()
                        if (X1 < EO2) then
                            X1 = X1 + 1
                            return
                        end

                        X1 = 1
                        criarParticula(
                            LocalPlayer.Character.HumanoidRootPart.Position +
                                Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
                            particulasFolder,
                            1,
                            Color3.fromRGB(85, 170, 255),
                            0.2,
                            math.random(1, 2)
                        )

                        criarParticula(
                            LocalPlayer.Character.HumanoidRootPart.Position +
                                Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
                            particulasFolder,
                            1,
                            Color3.fromRGB(85, 255, 85),
                            0.2,
                            math.random(1, 2)
                        )

                        criarParticula(
                            LocalPlayer.Character.HumanoidRootPart.Position +
                                Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
                            particulasFolder,
                            1,
                            Color3.fromRGB(255, 85, 85),
                            0.2,
                            math.random(1, 2)
                        )

                        criarParticula(
                            LocalPlayer.Character.HumanoidRootPart.Position +
                                Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
                            particulasFolder,
                            1,
                            Color3.fromRGB(85, 85, 255),
                            0.2,
                            math.random(1, 2)
                        )

                        criarParticula(
                            LocalPlayer.Character.HumanoidRootPart.Position +
                                Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
                            particulasFolder,
                            1,
                            Color3.fromRGB(255, 255, 85),
                            0.2,
                            math.random(1, 2)
                        )

                        criarParticula(
                            LocalPlayer.Character.HumanoidRootPart.Position +
                                Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
                            particulasFolder,
                            1,
                            Color3.fromRGB(255, 85, 255),
                            0.2,
                            math.random(1, 2)
                        )

                        criarParticula(
                            LocalPlayer.Character.HumanoidRootPart.Position +
                                Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
                            particulasFolder,
                            1,
                            Color3.fromRGB(124, 50, 252),
                            0.2,
                            math.random(1, 2)
                        )
                    end

                    local conexao =
                        RunService.RenderStepped:Connect(
                        function()
                            ConstParticles()
                        end
                    )

                    while _G.ACT do
                        task.wait()
                    end

                    spawn(
                        function()
                            -- FunÃ§Ã£o para tocar o som
                            sound3:Play()
                            task.wait(0.5)
                            if sound2 and sound2.SoundId == "rbxassetid://9125898975" then
                                sound2:Stop()
                                sound2:Destroy() -- Remove o objeto de som para liberar recursos
                            end
                        end
                    )
                    task.wait(0.5)
                    -- Flash final
                    local flashFinal = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
                    flashFinal.IgnoreGuiInset = true
                    local frameFinal = Instance.new("Frame", flashFinal)
                    frameFinal.Size = UDim2.new(1, 0, 1, 0)
                    frameFinal.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
                    frameFinal.BackgroundTransparency = 0.5

                    local tweenFlashFinal =
                        TweenService:Create(
                        frameFinal,
                        TweenInfo.new(0.7, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundTransparency = 1}
                    )
                    tweenFlashFinal:Play()
                    tweenFlashFinal.Completed:Connect(
                        function()
                            flashFinal:Destroy()
                        end
                    )

                    -- ExplosÃ£o final
                    criarExplosao(
                        LocalPlayer.Character.HumanoidRootPart.Position,
                        90 * EO,
                        workspace,
                        Color3.fromRGB(85, 255, 85)
                    )
                    task.wait(0.01)
                    criarExplosao(
                        LocalPlayer.Character.HumanoidRootPart.Position,
                        90 * EO,
                        workspace,
                        Color3.fromRGB(255, 85, 85)
                    )
                    task.wait(0.01)
                    criarExplosao(
                        LocalPlayer.Character.HumanoidRootPart.Position,
                        90 * EO,
                        workspace,
                        Color3.fromRGB(85, 85, 255)
                    )
                    task.wait(0.01)
                    criarExplosao(
                        LocalPlayer.Character.HumanoidRootPart.Position,
                        90 * EO,
                        workspace,
                        Color3.fromRGB(85, 255, 85)
                    )
                    task.wait(0.01)
                    criarExplosao(
                        LocalPlayer.Character.HumanoidRootPart.Position,
                        90 * EO,
                        workspace,
                        Color3.fromRGB(255, 85, 85)
                    )
                    task.wait(0.01)
                    criarExplosao(
                        LocalPlayer.Character.HumanoidRootPart.Position,
                        90 * EO,
                        workspace,
                        Color3.fromRGB(85, 85, 255)
                    )

                    -- Remover efeitos
                    particulasLoop = false
                    blurEffect:Destroy()
                    particulasFolder:Destroy()
                    conexao:Disconnect()
                    disableAuraEffect()
                    _G.jumpPower = 50
                    _G.FOVSpeed = 70 -- Valor inicial, pode ser ajustado dinamicamente
                    task.wait(1.5)
                    bloomEffect:Destroy()
                end

                -- AtivaÃ§Ã£o do poder
                ativarPoder()
            end

            function ActiveTP()
                -- VariÃ¡veis
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local camera = workspace.CurrentCamera
                local mouse = player:GetMouse()

                -- Criar a esfera
                sphere = Instance.new("Part")
                sphere.Shape = Enum.PartType.Ball
                sphere.Size = Vector3.new(17, 17, 17) -- Tamanho original
                sphere.Material = Enum.Material.Neon
                sphere.Color = Color3.new(0, 0, 1) -- Cor inicial azul
                sphere.Transparency = 0.8 -- Deixar mais transparente
                sphere.Anchored = true
                sphere.CanCollide = false
                sphere.Parent = workspace

                -- Criar a iluminaÃ§Ã£o da esfera
                local light = Instance.new("PointLight")
                light.Brightness = 0 -- Luz mais suave
                light.Range = 50 -- Aumentar o alcance da luz
                light.Color = Color3.new(0, 0, 1) -- Cor inicial azul
                light.Parent = sphere

                -- FunÃ§Ã£o para ajustar a posiÃ§Ã£o da esfera
                local function adjustSpherePosition(forwardPosition)
                    if _G.Gear > 1 then
                        LineLine = -2500
                        LineLine2 = 500
                    else
                        LineLine = -100
                        LineLine2 = 50
                    end

                    local raycastParams = RaycastParams.new()
                    raycastParams.FilterDescendantsInstances = {character, sphere}
                    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

                    local rayOrigin = Vector3.new(forwardPosition.X, forwardPosition.Y + LineLine2, forwardPosition.Z)
                    local rayDirection = Vector3.new(0, LineLine, 0)
                    local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

                    if raycastResult then
                        local groundPosition = raycastResult.Position
                        -- Ajusta para que metade da esfera fique no chÃ£o
                        return Vector3.new(
                            forwardPosition.X,
                            groundPosition.Y + (sphere.Size.Y / 2) + 5,
                            forwardPosition.Z
                        )
                    else
                        return forwardPosition
                    end
                end

                -- FunÃ§Ã£o para mover a esfera suavemente
                local function moveSphereToPosition(targetPosition)
                    local speed = 2000 -- Velocidade reduzida para mais fluidez
                    local currentPosition = sphere.Position
                    local direction = (targetPosition - currentPosition).Unit
                    local distance = (targetPosition - currentPosition).Magnitude

                    sphere.Position = targetPosition
                end

                -- FunÃ§Ã£o para fazer a esfera mudar de cor gradualmente
                local lastColorChangeTime = tick()
                local colorChangeSpeed = 2 -- Controlar a velocidade de mudanÃ§a de cor
                local currentColor = sphere.Color
                local targetColor = Color3.fromHSV(1, 1, 1) -- Cor alvo aleatÃ³ria para a mudanÃ§a

                local function changeColorGradually()
                    sphere.Color = targetColor
                    light.Color = targetColor
                end

                spawn(
                    function()
                        while true do
                            for i = 0, 1, 0.01 do -- Incremento suave para criar a transiÃ§Ã£o
                                targetColor = Color3.fromHSV(i, 1, 1) -- Gradualmente alterando a tonalidade
                                task.wait(0.02) -- Tempo entre cada passo da transiÃ§Ã£o
                            end
                        end
                    end
                )

                if _G.Gear > 1 then
                    BollDistance = 160
                    if _G.Gear > 4 then
                        BollDistance = _G.SettingTable2.Power_TP_Distance or 160
                    end
                else
                    BollDistance = 140
                end
                -- Atualizar posiÃ§Ã£o da esfera constantemente
                game:GetService("RunService").Heartbeat:Connect(
                    function()
                        if character and character.PrimaryPart and camera then
                            local rootPart = character.PrimaryPart
                            local cameraDirection =
                                Vector3.new(camera.CFrame.LookVector.X, 0, camera.CFrame.LookVector.Z).Unit

                            local forwardPosition =
                                Vector3.new(
                                rootPart.Position.X + (cameraDirection.X * BollDistance), -- DistÃ¢ncia aumentada para 70 unidades
                                rootPart.Position.Y,
                                rootPart.Position.Z + (cameraDirection.Z * BollDistance) -- DistÃ¢ncia aumentada para 70 unidades
                            )

                            -- Ajustar a posiÃ§Ã£o da esfera com base no terreno
                            local adjustedPosition = adjustSpherePosition(forwardPosition)

                            -- Mover a esfera para a nova posiÃ§Ã£o suavemente
                            moveSphereToPosition(adjustedPosition)

                            if _G.Gear > 1 then
                                -- Mudar a cor da esfera gradualmente
                                changeColorGradually()
                            end
                        end
                    end
                )

                if not toggleButton then
                    local screenGui = game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
                    _G.Gear = _G.Gear or 0
                    -- Criar o Frame para simular a borda
                    borderFrame = Instance.new("Frame")
                    borderFrame.Size = UDim2.new(0, 60, 0, 60) -- Um pouco maior que o botÃ£o
                    borderFrame.Position = UDim2.new(1, -125, 0, 90)
                    borderFrame.AnchorPoint = Vector2.new(1, 0)
                    borderFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Cor inicial da borda
                    borderFrame.BackgroundTransparency = 0.85
                    borderFrame.BorderSizePixel = 0 -- Sem borda prÃ³pria
                    borderFrame.Parent = screenGui

                    -- Tornar o Frame circular
                    local borderCorner = Instance.new("UICorner")
                    borderCorner.CornerRadius = UDim.new(1, 0)
                    borderCorner.Parent = borderFrame

                    -- Criar o botÃ£o dentro do Frame
                    toggleButton = Instance.new("TextButton")
                    toggleButton.Text = "ð" -- Emoji
                    toggleButton.Size = UDim2.new(0, 50, 0, 50) -- Menor que o Frame
                    toggleButton.Position = UDim2.new(0.5, 0, 0.5, 0) -- Centralizado no Frame
                    toggleButton.AnchorPoint = Vector2.new(0.5, 0.5)
                    toggleButton.BackgroundTransparency = 0.75
                    toggleButton.BackgroundColor3 = Color3.fromRGB(22, 22, 23) -- Cor de fundo
                    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                    toggleButton.TextSize = 20
                    toggleButton.Font = Enum.Font.GothamBold
                    toggleButton.Parent = borderFrame

                    -- Tornar o botÃ£o circular
                    local buttonCorner = Instance.new("UICorner")
                    buttonCorner.CornerRadius = UDim.new(1, 0)
                    buttonCorner.Parent = toggleButton

                    if _G.Gear > 1 then
                        -- ServiÃ§o de animaÃ§Ã£o para a borda
                        local tweenService = game:GetService("TweenService")
                        local tweenInfo =
                            TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true)

                        local goal = {BackgroundColor3 = Color3.fromRGB(0, 255, 0)} -- Cor verde
                        local tween = tweenService:Create(borderFrame, tweenInfo, goal)
                        tween:Play()
                    end

                    -- AnimaÃ§Ãµes no botÃ£o
                    toggleButton.MouseEnter:Connect(
                        function()
                            toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                        end
                    )

                    toggleButton.MouseLeave:Connect(
                        function()
                            toggleButton.BackgroundColor3 = Color3.fromRGB(22, 22, 23)
                        end
                    )

                    toggleButton.MouseButton1Click:Connect(
                        function()
                            if character and character.PrimaryPart and not _G.PowerTP then
                                _G.PowerTP = (_G.Gear < 5 or _G.Gear == 5)
                                toggleButton.TextSize = 25
                                toggleButton.Text = "ð" -- Emoji
                                toggleButton.Active = false
                                borderFrame.BackgroundTransparency = 0.92
                                toggleButton.BackgroundTransparency = 0.87
                                if _G.Gear > 1 then
                                    sound4:Play()
                                else
                                    sound5:Play()
                                end
                                character:SetPrimaryPartCFrame(CFrame.new(sphere.Position))
                                criarFormas(workspace, 50 * EO, Color3.fromRGB(0, 0, 255), 15, 2)
                                criarFormas(workspace, 50 * EO, Color3.fromRGB(255, 50, 50), 1, 4)
                                criarFormas(workspace, 50 * EO, Color3.fromRGB(50, 50, 255), 1, 4)
                                criarFormas(workspace, 50 * EO, Color3.fromRGB(50, 250, 50), 1, 4)

                                task.wait(math.max(4.2 - _G.Gear, 0.05))
                                _G.PowerTP = false
                                toggleButton.Text = "ð" -- Emoji
                                borderFrame.BackgroundTransparency = 0.75
                                toggleButton.Active = true
                                toggleButton.BackgroundTransparency = 0.65
                                toggleButton.TextSize = 20
                            end
                        end
                    )
                end
            end

            function FendaDimensional()
                NotificationMenuGame(" ")
                NotificationMenuGame("{color1_Purple}<Universal Dimensional Rift>{color1_/}")

                -- Adiciona os efeitos na Lighting
                local Lighting = game:GetService("Lighting")

                -- Criando os efeitos
                local fendaColor = Instance.new("ColorCorrectionEffect")
                fendaColor.Name = "FendaColor"
                fendaColor.TintColor = Color3.fromRGB(180, 120, 255) -- Cor roxa mais clara
                fendaColor.Saturation = 0 -- SaturaÃ§Ã£o moderada
                fendaColor.Contrast = 0 -- Contraste leve

                local fendaBlur = Instance.new("BlurEffect")
                fendaBlur.Name = "FendaBlur"
                fendaBlur.Size = 0 -- Desfoque moderado

                -- Adiciona os efeitos Ã  Lighting
                fendaColor.Parent = Lighting
                fendaBlur.Parent = Lighting

                -- Efeito pulsante leve
                FendaDimensionalValue = true
                function animateTintColor(effect, targetColor, duration)
                    local TweenService = game:GetService("TweenService")

                    local tweenInfo =
                        TweenInfo.new(
                        duration, -- DuraÃ§Ã£o da animaÃ§Ã£o em segundos
                        Enum.EasingStyle.Quad, -- Tipo de suavizaÃ§Ã£o
                        Enum.EasingDirection.Out -- DireÃ§Ã£o da animaÃ§Ã£o
                    )

                    local goal = {
                        TintColor = targetColor -- Alvo do TintColor
                    }

                    local tween = TweenService:Create(effect, tweenInfo, goal)
                    tween:Play()

                    return tween
                end

                spawn(
                    function()
                        fendaColor.Saturation = 1 -- SaturaÃ§Ã£o moderada

                        while FendaDimensionalValue do
                            fendaColor.Saturation = 1.2
                            fendaBlur.Size = 2.5
                            for i, k in pairs(game.Players.LocalPlayer.PlayerGui.Notifications:GetDescendants()) do
                                if k:IsA("TextLabel") then
                                    if string.find(k.Text, "Mar") or string.find(k.Text, "Sea") then
                                        k:Destroy()
                                    end
                                end
                            end
                            task.wait(0.1)
                        end

                        -- Remove os efeitos apÃ³s o tempo
                        fendaColor.Saturation = 0
                        fendaColor.Contrast = 0
                        NotificationMenuGame(" ")
                        NotificationMenuGame("{color1_Green}<Moments Ago>{color1_/}")
                        fendaBlur:Destroy()
                        animateTintColor(fendaColor, Color3.fromRGB(255, 255, 255), 1)
                        task.wait(0.5)
                        fendaColor:Destroy()
                    end
                )
            end
            -- ===================== Invisile ====================
            if true then
                -- ConfiguraÃ§Ãµes do clone
                local Transparency = true
                -- VariÃ¡veis globais
                local Player = game.Players.LocalPlayer
                RealCharacter = Player.Character or Player.CharacterAdded:Wait()
                IsInvisible = false
                IsInvisible2 = false
                local player = game.Players.LocalPlayer
                local character = player.Character
                local humanoid = character:FindFirstChildOfClass("Humanoid")

                local FakeCharacter

                -- FunÃ§Ã£o para criar o clone
                function CreateClone()
                    local Player = game.Players.LocalPlayer
                    RealCharacter = Player.Character or Player.CharacterAdded:Wait()
                    local x = RealCharacter.HumanoidRootPart.CFrame + Vector3.new(0, 2e5, 0)
                            _G.EffectsPosition = RealCharacter.HumanoidRootPart.CFrame
                            y = _G.EffectsPosition
                            RealCharacter.HumanoidRootPart.CFrame = x
                            -- Certifique-se de estar no Studio com "Explorer" e "Properties" abertos.

                            spawn(
                        function()
                            for i = 1, 180 do
                                if IsInvisible then
                                    RealCharacter.HumanoidRootPart.CFrame = x
                                    task.wait(0.1)
                                end
                            end
                        end
                    )

                    RealCharacter.Archivable = true
                    local b =
                        game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild(
                        "BodyVelocity"
                    )

                    if b then
                        b.P = 0
                        b.MaxForce = Vector3.new(0, 0, 0)
                    end

                    FakeCharacter = RealCharacter:Clone()
                    print(RealCharacter)
                    print(RealCharacter:Clone())

                    -- Remover propriedades indesejadas do clone
                    for _, v in pairs(FakeCharacter:GetDescendants()) do
                        if
                            v:IsA("BodyVelocity") or v:IsA("BodyGyro") or v:IsA("BodyPosition") or
                                v:IsA("ParticleEmitter")
                         then
                            v:Destroy() -- Remove as propriedades indesejadas
                        end
                    end

                    bodyVelocity2 = Instance.new("BodyVelocity")
                    bodyVelocity2.MaxForce = Vector3.new(500000, 500000, 500000) -- ForÃ§a para impedir a gravidade
                    bodyVelocity2.Velocity = Vector3.new(0, 0, 0) -- Sem movimento inicial
                    bodyVelocity2.Parent = FakeCharacter.HumanoidRootPart

                    -- Posiciona o clone no mesmo lugar que o personagem real
                    FakeCharacter.Parent = workspace
                    FakeCharacter.HumanoidRootPart.CFrame = y
                    FakeCharacter.HumanoidRootPart.Velocity = RealCharacter.HumanoidRootPart.Velocity.Unit * 4

                    spawn(
                        function()
                            criarFormas(workspace, 60, Color3.fromRGB(0, 0, 255), 15, 2)
                            criarFormas(workspace, 60, Color3.fromRGB(255, 50, 50), 1, 4)
                            FendaDimensional()
                        end
                    )
                    -- Leva o personagem real para uma posiÃ§Ã£o muito distante
                    IsInvisible = true
                    spawn(
                        function()
                            for i = 1, 90 do
                                if IsInvisible then
                                    RealCharacter.HumanoidRootPart.CFrame = x
                                    task.wait(0.1)
                                end
                            end
                        end
                    )

                    sound5:Play()

                    -- Define a velocidade do clone para ser o dobro da velocidade do personagem real
                    FakeCharacter.Humanoid.WalkSpeed = RealCharacter.Humanoid.WalkSpeed * 2

                    -- Aplica a transparÃªncia ao clone
                    if Transparency then
                        for _, v in pairs(FakeCharacter:GetDescendants()) do
                            if v:IsA("BasePart") and v.Transparency < 1 then
                                v.Transparency = 0.9
                            end
                        end
                    end

                    -- Copia o Animator do personagem real para o clone
                    local RealAnimator = RealCharacter:FindFirstChildOfClass("Animator")
                    if RealAnimator then
                        local CloneAnimator = RealAnimator:Clone()
                        CloneAnimator.Parent = FakeCharacter
                    end

                    -- Desativa scripts locais no clone
                    for _, v in pairs(RealCharacter:GetChildren()) do
                        if v:IsA("LocalScript") then
                            local clone = v:Clone()
                            clone.Disabled = true
                            clone.Parent = FakeCharacter
                        end
                    end

                    -- Sincroniza a cÃ¢mera com o clone
                    workspace.CurrentCamera.CameraSubject = FakeCharacter.Humanoid

                    -- Sincroniza o movimento e o voo do clone com a direÃ§Ã£o da cÃ¢mera
                    DD =
                        game:GetService("RunService").RenderStepped:Connect(
                        function()
                            local moveDirection2 = humanoid.MoveDirection

                            if IsInvisible and moveDirection2.Magnitude > 0 then
                                bodyVelocity2.Parent = nil

                                -- Move o clone na direÃ§Ã£o da cÃ¢mera
                                local camera = workspace.CurrentCamera
                                local moveDirection = camera.CFrame.LookVector

                                -- Determinar se estÃ¡ indo para trÃ¡s
                                local isMovingBackward = moveDirection:Dot(moveDirection2) < 0

                                -- Ajustar o valor de y
                                local adjustedY =
                                    isMovingBackward and (moveDirection.Y * -1.2) or (moveDirection.Y * 1.4)
                                local adjustedV = isMovingBackward and (1.6) or (1.8)

                                FakeCharacter.HumanoidRootPart.Velocity =
                                    Vector3.new(moveDirection2.X, adjustedY + 0.35, moveDirection2.Z).Unit *
                                    (FakeCharacter.Humanoid.WalkSpeed * adjustedV)
                            elseif (moveDirection2.Magnitude == 0) and IsInvisible and IsInvisible2 then
                                bodyVelocity2.Parent = FakeCharacter.HumanoidRootPart
                            end
                        end
                    )
                    task.wait(0.2)
                    IsInvisible2 = true
                end

                -- FunÃ§Ã£o para teleportar o personagem real para a posiÃ§Ã£o do clone e apagar o clone
                function TeleportAndRemoveClone()
                    if IsInvisible then
                        DD:Disconnect()
                        _G.EffectsPosition = nil
                        spawn(
                            function()
                                task.wait()
                                InvisibilityCloak:Destroy()
                            end
                        )

                        RealCharacter.HumanoidRootPart.Velocity = FakeCharacter.HumanoidRootPart.Velocity.Unit * 5

                        for _, v in pairs(FakeCharacter:GetDescendants()) do
                            if v:IsA("BasePart") and v.Transparency < 1 then
                                v.Transparency = 1
                            end
                        end

                        IsInvisible = false
                        IsInvisible2 = false
                        FendaDimensionalValue = false

                        sound6:Play()

                        for i = 1, 15 do
                            if not IsInvisible then
                                RealCharacter.HumanoidRootPart.CFrame = FakeCharacter.HumanoidRootPart.CFrame
                                task.wait()
                            end
                        end

                        -- Remove o clone e foca a cÃ¢mera de volta no personagem real
                        FakeCharacter:Destroy()
                        FakeCharacter = nil
                        workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
                    end
                end
            end

            function invisibleByMidnigth()
                local player = game.Players.LocalPlayer

                CreateClone()

                -- Adiciona o item no inventÃ¡rio e configura a ativaÃ§Ã£o do script
                InvisibilityCloak = Instance.new("Tool")
                InvisibilityCloak.Name = "Invisibility Cloak"
                InvisibilityCloak.RequiresHandle = false
                InvisibilityCloak.Parent = player.Backpack

                InvisibilityCloak.Unequipped:Connect(
                    function()
                        if IsInvisible then
                            TeleportAndRemoveClone()
                        end
                    end
                )

                task.wait(0.05)
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(InvisibilityCloak)
            end

            function GodCombatPower()
                if not toggleButton2 then
                    local screenGui = game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
                    _G.Gear = _G.Gear or 0
                    -- Criar o Frame para simular a borda
                    borderFrame2 = Instance.new("Frame")
                    borderFrame2.Size = UDim2.new(0, 60, 0, 60) -- Um pouco maior que o botÃ£o
                    borderFrame2.Position = UDim2.new(1, -100, 0, 30)
                    borderFrame2.AnchorPoint = Vector2.new(1, 0)
                    borderFrame2.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Cor inicial da borda
                    borderFrame2.BackgroundTransparency = 0.865
                    borderFrame2.BorderSizePixel = 0 -- Sem borda prÃ³pria
                    borderFrame2.Parent = screenGui

                    -- Tornar o Frame circular
                    local borderCorner2 = Instance.new("UICorner")
                    borderCorner2.CornerRadius = UDim.new(1, 0)
                    borderCorner2.Parent = borderFrame2

                    -- Criar o botÃ£o dentro do Frame
                    toggleButton2 = Instance.new("TextButton")
                    toggleButton2.Text = "ðª" -- Emoji
                    toggleButton2.Size = UDim2.new(0, 50, 0, 50) -- Menor que o Frame
                    toggleButton2.Position = UDim2.new(0.5, 0, 0.5, 0) -- Centralizado no Frame
                    toggleButton2.AnchorPoint = Vector2.new(0.5, 0.5)
                    toggleButton2.BackgroundTransparency = 0.9
                    toggleButton2.BackgroundColor3 = Color3.fromRGB(22, 22, 23) -- Cor de fundo
                    toggleButton2.TextColor3 = Color3.fromRGB(255, 255, 255)
                    toggleButton2.TextSize = 20
                    toggleButton2.Font = Enum.Font.GothamBold
                    toggleButton2.Parent = borderFrame2

                    -- Tornar o botÃ£o circular
                    local buttonCorner2 = Instance.new("UICorner")
                    buttonCorner2.CornerRadius = UDim.new(1, 0)
                    buttonCorner2.Parent = toggleButton2

                    -- ServiÃ§o de animaÃ§Ã£o para a borda
                    local tweenService = game:GetService("TweenService")
                    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true)

                    local goal = {BackgroundColor3 = Color3.fromRGB(0, 255, 0)} -- Cor verde
                    local tween = tweenService:Create(borderFrame2, tweenInfo, goal)
                    tween:Play()

                    -- AnimaÃ§Ãµes no botÃ£o
                    toggleButton2.MouseEnter:Connect(
                        function()
                            toggleButton2.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                        end
                    )

                    toggleButton2.MouseLeave:Connect(
                        function()
                            toggleButton2.BackgroundColor3 = Color3.fromRGB(22, 22, 23)
                        end
                    )


                    -- Detectar quando o botÃ£o Ã© pressionado
                    toggleButton2.MouseButton1Click:Connect(
                        function()
                            if not IsInvisible then
                                invisibleByMidnigth()
                            else
                                local player = game.Players.LocalPlayer
                                local character = player.Character or player.CharacterAdded:Wait()
                                local humanoid = character:WaitForChild("Humanoid")
    
                                -- Desequipar o item atual
                                humanoid:UnequipTools()
                            end
                        end
                    )

                end
            end

            function JumpBoostPower()
                local UserInputService = game:GetService("UserInputService")
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()

                -- Aguarda pelo Humanoid e HumanoidRootPart do personagem
                local humanoid = character:WaitForChild("Humanoid")
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

                -- ConfiguraÃ§Ãµes de forÃ§a e cooldown
                local forwardBoostForce = 400 -- ForÃ§a para frente
                local upwardBoostForce = 200 -- ForÃ§a para cima
                local boostCooldown = 0.2 -- Tempo de cooldown em segundos
                local lastBoostTime = 0 -- Marca o tempo do Ãºltimo boost

                -- FunÃ§Ã£o para verificar se o jogador estÃ¡ no chÃ£o
                local function isOnGround()
                    return humanoid:GetState() == Enum.HumanoidStateType.Running or
                        humanoid:GetState() == Enum.HumanoidStateType.Idle
                end

                -- FunÃ§Ã£o que realiza o boost
                local function applyBoost()
                    local currentTime = tick()
                    if currentTime - lastBoostTime < boostCooldown then
                        return
                    end -- Respeita o cooldown
                    if not isOnGround() then
                        return
                    end -- Apenas no chÃ£o

                    local camera = workspace.CurrentCamera
                    if camera and humanoidRootPart then
                        -- Calcula a direÃ§Ã£o do boost
                        local moveDirection = humanoid.MoveDirection
                        local boostDirection

                        if moveDirection.Magnitude > 0 then
                            -- Usa a direÃ§Ã£o do movimento se o jogador estiver andando
                            boostDirection = moveDirection.Unit
                        else
                            -- Usa a direÃ§Ã£o da cÃ¢mera caso o jogador nÃ£o esteja andando
                            boostDirection = camera.CFrame.LookVector
                        end

                        -- Aplica o impulso combinando as forÃ§as
                        local boostVelocity = (boostDirection * forwardBoostForce) + Vector3.new(0, upwardBoostForce, 0)
                        humanoidRootPart.Velocity = humanoidRootPart.Velocity + boostVelocity

                        -- Atualiza o tempo do Ãºltimo boost
                        lastBoostTime = currentTime
                    end
                end

                -- Conecta a funÃ§Ã£o ao evento de pulo
                JumpBoost =
                    UserInputService.JumpRequest:Connect(
                    function()
                        applyBoost()
                    end
                )
            end

            function CreateBar()
                _G.PowerBarY = -120
                local player = game.Players.LocalPlayer
                local screenGui = Instance.new("ScreenGui")
                local playerGui = player:WaitForChild("PlayerGui")
                screenGui.Name = "HealthBarGUI"
                screenGui.Parent = player:WaitForChild("PlayerGui")

                local barFrame = Instance.new("Frame")
                barFrame.Name = "BarFrame"
                barFrame.Parent = screenGui
                barFrame.AnchorPoint = Vector2.new(0.5, 0)
                barFrame.Position = UDim2.new(0.5, 0, 0, -120)
                barFrame.Size = UDim2.new(0, 300, 0, 40)
                barFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                barFrame.BackgroundTransparency = 0.32
                barFrame.BorderSizePixel = 0

                local barCorner = Instance.new("UICorner")
                barCorner.CornerRadius = UDim.new(0, 15)
                barCorner.Parent = barFrame

                uiScale = Instance.new("UIScale")
                uiScale.Parent = barFrame
                uiScale.Scale = 0.8

                local healthBar = Instance.new("Frame")
                healthBar.Name = "HealthBar"
                healthBar.Parent = barFrame
                healthBar.Size = UDim2.new(0, 0, 1, -10)
                healthBar.Position = UDim2.new(0, 5, 0, 5)
                healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                healthBar.BorderSizePixel = 0

                local healthCorner = Instance.new("UICorner")
                healthCorner.CornerRadius = UDim.new(0, 10)
                healthCorner.Parent = healthBar

                local percentText = Instance.new("TextButton")
                percentText.Name = "PercentText"
                percentText.Parent = barFrame
                percentText.Size = UDim2.new(1, 0, 1, 0)
                percentText.Position = UDim2.new(0, 0, 0, 0)
                percentText.BackgroundTransparency = 1
                percentText.Font = Enum.Font.GothamBold
                percentText.Text = "0%"
                percentText.TextColor3 = Color3.fromRGB(255, 255, 255)
                percentText.TextScaled = true
                percentText.TextSize = 16.5
                percentText.TextStrokeTransparency = 0.9
                percentText.Active = true

                -- CriaÃ§Ã£o do texto na tela do jogador local
                local player = game.Players.LocalPlayer
                local playerGui = player:WaitForChild("PlayerGui") -- Garante que o PlayerGui estÃ¡ carregado

                -- Criar um ScreenGui
                local screenGui = Instance.new("ScreenGui")
                screenGui.Name = "CuteTextGui"
                screenGui.Parent = playerGui

                -- Criar um TextLabel
                textLabel = Instance.new("TextLabel")
                textLabel.Parent = screenGui
                textLabel.Size = UDim2.new(0.3, 0, 0.1, 0) -- Tamanho da caixa de texto
                textLabel.Position = UDim2.new(0.35, 0, 0, -120) -- PosiÃ§Ã£o central no topo da tela
                textLabel.BackgroundTransparency = 1 -- Sem fundo
                textLabel.TextColor3 = Color3.new(0, 1, 0) -- Texto verde
                textLabel.TextStrokeTransparency = 0 -- Contorno no texto
                textLabel.Text = "GEAR FIVE" -- Texto exibido
                textLabel.Font = Enum.Font.FredokaOne -- Fonte fofinha
                textLabel.TextSize = 18 -- Tamanho fixo da fonte

                textLabel2 = Instance.new("TextLabel")
                textLabel2.Parent = screenGui
                textLabel2.Size = UDim2.new(0.3, 0, 0.1, 0) -- Tamanho da caixa de texto
                textLabel2.Position = UDim2.new(0.35, -10000, 0, 8) -- PosiÃ§Ã£o central no topo da tela
                textLabel2.BackgroundTransparency = 1 -- Sem fundo
                textLabel2.TextColor3 = Color3.new(1, 0, 0) -- Texto verde
                textLabel2.TextStrokeTransparency = 0 -- Contorno no texto
                textLabel2.Text = "+0" -- Texto exibido
                textLabel2.Font = Enum.Font.FredokaOne -- Fonte fofinha
                textLabel2.TextSize = 12 -- Tamanho fixo da fonte
                textLabel2.Transparency = 1

                -- Criar um TextLabel
                textLabel3 = Instance.new("TextLabel")
                textLabel3.Parent = screenGui
                textLabel3.Size = UDim2.new(0.3, 0, 0.1, 0) -- Tamanho da caixa de texto
                textLabel3.Position = UDim2.new(0.35, 10000, 0, 8) -- PosiÃ§Ã£o central no topo da tela
                textLabel3.BackgroundTransparency = 1 -- Sem fundo
                textLabel3.TextColor3 = Color3.new(1, 1, 0) -- Texto verde
                textLabel3.TextStrokeTransparency = 0 -- Contorno no texto
                textLabel3.Text = "+0" -- Texto exibido
                textLabel3.Font = Enum.Font.FredokaOne -- Fonte fofinha
                textLabel3.TextSize = 12 -- Tamanho fixo da fonte
                textLabel3.Transparency = 1

                if _G.Gear == 6 then
                    textLabel.Text = "SUPERIOR GEAR"
                    textLabel.TextColor3 = Color3.new(1, 0, 1)
                end

                if _G.Gear == 5 then
                    textLabel.Text = "ULTRA GEAR"
                    textLabel.TextColor3 = Color3.new(0, 1, 1)
                end

                if _G.Gear == 4 then
                    textLabel.Text = "SUPER GEAR"
                end

                if _G.Gear == 3 then
                    textLabel.Text = "THIRD GEAR"
                end

                if _G.Gear == 2 then
                    textLabel.Text = "SECOND GEAR"
                end

                if _G.Gear == 1 then
                    textLabel.Text = "BEGINNER"
                end

                percentText.MouseButton1Click:Connect(
                    function()
                        if _G.Race then
                            Reset = false
                            progress = 100
                            maxTime = 60
                            _G.ActiveRace = true
                            _G.Race = false
                            _G.ACT = true
                            X = 0.01
                            _G.PowerPogress = 0
                            _G.BarCountdown = false
                            ActiveTP()

                            if _G.Gear > 1 and _G.Gear < 4 then
                                JumpBoostPower()
                            end

                            if _G.Gear > 5 then
                                FastAttackOn()
                                _G.NoStunPower = true
                            end

                            textLabel2.Position = UDim2.new(0.35, -100, 0, 8) -- PosiÃ§Ã£o central no topo da tela
                            textLabel3.Position = UDim2.new(0.35, 100, 0, 8) -- PosiÃ§Ã£o central no topo da tela

                            spawn(
                                function()
                                    for i = 1, 0, -0.1 do
                                        textLabel2.Transparency = i
                                        textLabel2.BackgroundTransparency = 1
                                        textLabel3.Transparency = i
                                        textLabel3.BackgroundTransparency = 1
                                        task.wait()
                                    end
                                end
                            )

                            if _G.Gear > 4 then
                                GodCombatPower()
                                spawn(
                                    function()
                                        while _G.ActiveRace do
                                            for i = 0, 1, 0.01 do -- Incremento suave para criar a transiÃ§Ã£o
                                                if not _G.ActiveRace then
                                                    textLabel.TextColor3 = Color3.fromHSV(i, 1, 1) -- Gradualmente alterando a tonalidade
                                                end
                                                task.wait(0.05) -- Tempo entre cada passo da transiÃ§Ã£o
                                            end
                                        end
                                        if not _G.ActiveRace then

                                         textLabel.TextColor3 = Color3.new(1, 0, 1)
                                        end
                                    end
                                )
                            end

                            ActivePower()
                        elseif _G.ActiveRace and _G.Gear > 4 then
                            if _G.SPLY then
                            sound4:Play()
                            for i = 1, 30 do
                                TPTBP()
                                task.wait(0.05)
                            end
                        else
                            NotificationMenuGame("{color1_Red}Skill unavailable.{color2_/}")
                        end

                        
                        end

                    end
                )

                local textAlignment = Instance.new("UITextSizeConstraint")
                textAlignment.MaxTextSize = 22
                textAlignment.Parent = percentText

                local progress = 0
                local maxProgress = 100
                NoMax = true
                X = 1
                Reset = true
                local resetDelay = 15

                function ChecksJump(x)
                    local alvoX = 10000
                    local alvoY = 400
                    local minimoY = 100
                    local distancia = math.abs(x - alvoX)
                    local fator = math.min(distancia / alvoX, 1)

                    if x > alvoY then
                        x = alvoY
                    else
                        x = minimoY + (alvoY - minimoY) * (1 - fator)
                    end

                    return x
                end

                function ChecksVelocity(x)
                    local baseX = 0
                    local baseY = 280
                    local taxa = 0.02

                    if x > baseX then
                        return baseY + (x - baseX) * taxa
                    else
                        return baseY
                    end
                end
                spawn(
                    function()
                        function CheckVelocityY()
                            if not _G.ActiveRace then
                                return
                            end

                            _G.MyDamage = _G.MyDamage or 1

                            V = 4.5
                            if _G.Gear > 3 then
                                V = 3
                                if _G.Gear > 4 then
                                    V = 2
                                    if _G.Gear > 5 then
                                        V = 1
                                        if ADM_Boost_0 then
                                            V = 0.7
                                        end
                                    end
                                end
                            end

                            if _G.Gear > 2 then
                                _G.VelcityPower = math.floor(math.min(ChecksVelocity(_G.MyDamage), 450) / V)

                                if _G.VelcityPower and _G.SettingTable.SafeMode_Speed then
                                    XX = (_G.VelcityPower / 2) + _G.SettingTable.SafeMode_Speed
                                else
                                    XX = _G.VelcityPower or _G.SettingTable.SafeMode_Speed
                                end

                                _G.FOVSpeed = XX / 2
                                textLabel2.Text = "+" .. math.floor(XX) .. " â"
                            else
                                textLabel2.Text = ""
                                _G.VelcityPower = nil
                            end

                            H = 1
                            if _G.Gear < 4 then
                                H = 2
                            end

                            if _G.Gear > 4 then
                                H = 1
                                if ADM_Boost_0 then
                                    H = 0.7
                                end
                            end

                            _G.JumpPowerPower = math.floor(ChecksJump(_G.MyDamage) / H)

                            if _G.JumpPowerPower and _G.SettingTable.Jump then
                                YY = (_G.JumpPowerPower / H) + _G.SettingTable.Jump
                            else
                                YY = _G.JumpPowerPower or _G.SettingTable.Jump
                            end

                            textLabel3.Text = "+" .. math.floor(math.min(YY, 300)) .. " â"
                        end

                        while true do
                            task.wait()
                            CheckVelocityY()
                        end
                    end
                )

                local function getBarColor(percentage)
                    local r, g, b
                    if percentage <= 50 then
                        r = math.floor(255 * (percentage / 50))
                        g = 255
                        b = 0
                    else
                        r = 255
                        g = math.floor(255 * ((100 - percentage) / 50))
                        b = math.floor(255 * ((percentage - 50) / 50))
                    end
                    return Color3.fromRGB(r, g, b)
                end
                function InCombatDetect(parent, depth)
                    depth = depth or 0
                    local indent = string.rep("  ", depth)

                    if depth < 1 then
                        _G.InCombat = true
                    end

                    for _, child in ipairs(parent:GetChildren()) do
                        if string.find(child.Name, "InCombat") then
                            if (child.Visible) then
                                _G.InCombat = true
                            end
                        end
                        InCombatDetect(child, depth + 1)
                    end
                end

                local function mudarCorLevemente(corAtual)
                    local r = math.clamp(corAtual.R + math.random(-10, 10) / 255, 0, 1)
                    local g = math.clamp(corAtual.G + math.random(-10, 10) / 255, 0, 1)
                    local b = math.clamp(corAtual.B + math.random(-10, 10) / 255, 0, 1)

                    return Color3.fromRGB(r * 255, g * 255, b * 255)
                end

                local function shakeBar(intensity)
                    local randomOffsetX = math.random(-intensity, intensity)
                    local randomOffsetY = math.random(-intensity, intensity)
                    barFrame.Position = UDim2.new(0.5, randomOffsetX, 0, _G.PowerBarY + randomOffsetY)
                end


                function resetBarTwo()
                    if Reset then
                        _G.ACT = false
                        _G.ActiveRace = false
                        _G.Race = false
                        progress = 0
                        percentText.Text = "0%"
                        healthBar.Size = UDim2.new(0, 0, 1, -10)
                        healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                        NoMax = true
                        numberToIncrease = 0
                        maxTime = 0
                        X = 1
                        damageLog = {}
                        _G.CombatTimer = 0
                        task.wait(2)
                        maxTime = 180
                        damageLog = {}

                    end

                end
                function resetBar()
                    if Reset then
                        _G.ACT = false
                        _G.ActiveRace = false
                        _G.Race = false
                        progress = 0
                        percentText.Text = "0%"
                        healthBar.Size = UDim2.new(0, 0, 1, -10)
                        healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                        NoMax = true
                        maxTime = 0
                        X = 1
                        _G.VelcityPower = nil
                        _G.VelcityPower = nil
                        _G.JumpPowerPower = nil
                        task.wait()
                        _G.PowerPogress = 0
                        toggleButton:Destroy()
                        toggleButton = nil
                        borderFrame:Destroy()

                        sphere:Destroy()
                        if _G.Gear > 1 and _G.Gear < 4 then
                            JumpBoost:Disconnect()
                        end
                        if _G.Gear > 4 then
                            _G.NoStunPower = false
                            toggleButton2:Destroy()
                            toggleButton2 = nil
                            borderFrame2:Destroy()
                        end
                        if _G.Gear > 5 then
                            FastAttackOff()
                        end
                        spawn(
                            function()
                                for i = 0, 1, 0.1 do
                                    textLabel3.Transparency = i
                                    textLabel3.BackgroundTransparency = 1
                                    textLabel2.Transparency = i
                                    textLabel2.BackgroundTransparency = 1

                                    task.wait()
                                end

                                textLabel3.Position = UDim2.new(0.35, 10000, 0, 8) -- PosiÃ§Ã£o central no topo da tela
                                textLabel2.Position = UDim2.new(0.35, 10000, 0, 8) -- PosiÃ§Ã£o central no topo da tela
                            end
                        )

                       _G.CountUnDisponile = true
                        task.wait(2)
                        _G.CountUnDisponile = false
                        maxTime = 180

                    end
                end

                function BarCountedX()
                    if _G.PlayerDeth then
                        X = 4
                    end

                    if _G.PowerPogress < 50 and AnimPowerBar and not _G.ActiveRace then
                        AnimPowerBar = false
                        local TweenService = game:GetService("TweenService")

                        local tweenInfo = TweenInfo.new(3.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)

                        TweenService:Create(barFrame, tweenInfo, {Position = UDim2.new(0.5, 0, 0, -140)}):Play()
                        TweenService:Create(textLabel, tweenInfo, {Position = UDim2.new(0.35, 0, 0, -120)}):Play()
                        task.wait(3.45)
                        _G.PowerBarY = -120
                    end

                    if (_G.PlayerDeth and not _G.ActiveRace) or _G.CountUnDisponile then
                        if progress < 0 then
                            progress = 0
                        end
                        return
                    end

                    if (_G.PowerPogress > progress) then
                        progress = progress + X
                    end

                    if (_G.PowerPogress < progress) then
                        progress = progress - X
                    end

                    if _G.PowerPogress > 50 and not AnimPowerBar then
                        AnimPowerBar = true
                        local TweenService = game:GetService("TweenService")

                        local tweenInfo = TweenInfo.new(4.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)

                        TweenService:Create(barFrame, tweenInfo, {Position = UDim2.new(0.5, 0, 0, -20)}):Play()
                        TweenService:Create(textLabel, tweenInfo, {Position = UDim2.new(0.35, 0, 0, 8)}):Play()
                        task.wait(4.45)
                        
                        _G.PowerBarY = -20
                    end

                    

                    progress = tonumber(string.format("%.3f", progress))
                    if progress > maxProgress then
                        progress = maxProgress
                    end

                    local progressPercent = math.clamp(progress / maxProgress, 0, 1)

                    healthBar.Size = UDim2.new(math.max(progressPercent, 0.065), -10, 1, -10)
                    healthBar.BackgroundColor3 = getBarColor(progress)

                    if progress == maxProgress then
                        _G.Race = true

                        if NoMax then
                        percentText.Text = "Click para ativar!! - 15"
                        NoMax = false
                            if _G.Gear > 5 then
                                spawn(
                                    function()
                                        while _G.Race do
                                            for i = 0, 1, 0.005 do -- Incremento suave para criar a transiÃ§Ã£o
                                                textLabel.TextColor3 = Color3.fromHSV(i, 1, 1) -- Gradualmente alterando a tonalidade
                                                task.wait() -- Tempo entre cada passo da transiÃ§Ã£o
                                            end
                                        end
                                        textLabel.TextColor3 = Color3.new(1, 0, 1)
                                    end
                                )
                            end

                            T = 15
                            _G.BarCountdown = true
                            spawn(function()
                                        while not _G.ActiveRace and _G.BarCountdown do task.wait(0.9)
                                    if (not _G.ActiveRace) and _G.BarCountdown then
                                    T = T -1
                                    percentText.Text = "Click para ativar!! - " .. T
                                    if T < 1 then
                            _G.BarCountdown = false
                            _G.Race = false
                                    percentText.Text = "Click para ativar!! - 0"
                                    task.wait(0.5)
                                    percentText.Text = "Reseting..."
                                    task.wait(1)
                                    resetBarTwo()
                                    _G.CountUnDisponile = true
                                    task.wait(2)
                                    _G.CountUnDisponile = false
                        print(NameMelee())

                                end
                                    end
                                end
                            end)

                        end
                    else
                        percentText.Text = string.format("%.1f%%", progress)
                    end

                    if _G.ActiveRace and progress < 1 then
                        _G.ActiveRace = false
                        damageLog = {}
                        _G.CombatTimer = 0
                        X = 0
                        Reset = true
                        resetBar()
                        _G.ACT = false
                        numberToIncrease = 0
                        progress = 0
                    end

                    if progress >= 70 and not _G.ActiveRace then
                        local intensity = 1
                        if progress >= 85 then
                            intensity = 1.5
                            if progress >= 99 then
                                intensity = 1.8
                            end
                        end

                        shakeBar(intensity)
                    elseif _G.ActiveRace then
                        if _G.PowerPogress < 50 then
                            shakeBar(0.75)
                        else
                            shakeBar(1)
                        end
                    else
                        barFrame.Position = UDim2.new(0.5, 0, 0, _G.PowerBarY)
                    end
                    local g = _G.Gear
                    if g > 0 then
                        p = 10
                        if g > 2 then
                            p = 30
                            if g > 4 then
                                p = 60
                            end
                        end
                    end
                    if progress <= p and _G.ActiveRace and ADM_Boost_0 then
                        X = 0.003
                    end
                end

                game:GetService("RunService").RenderStepped:Connect(
                    function()
                        BarCountedX()
                    end
                )
                local Players = game:GetService("Players")
                local RunService = game:GetService("RunService")

                local player = Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local humanoid = character:WaitForChild("Humanoid")

                damageLog = {}
                local checkInterval = 0.1
                maxTime = 180
                local lastHealth = humanoid.Health

                local function cleanUpDamageLog()
                    local currentTime = os.clock()
                    for i = #damageLog, 1, -1 do
                        if currentTime - damageLog[i].timestamp > maxTime then
                            table.remove(damageLog, i)
                        end
                    end
                end

                local function getTotalDamage()
                    local total = 0
                    for _, entry in ipairs(damageLog) do
                        total = total + entry.damage
                    end
                    return total
                end

                humanoid.HealthChanged:Connect(
                    function(newHealth)
                        if newHealth < lastHealth and not _G.PlayerDeth then
                            local damage = lastHealth - newHealth
                            table.insert(damageLog, {damage = damage, timestamp = os.clock()})
                        end
                        lastHealth = newHealth
                    end
                )

                local maxDistance = 20
                numberToIncrease = 0
                local playersInArea = {}

                local function getDistance(player1, player2)
                    return (player1.Character.HumanoidRootPart.Position - player2.Character.HumanoidRootPart.Position).Magnitude
                end

                local function checkPlayersInArea()
                    local currentPlayersInArea = {}

                    for _, player in ipairs(game.Players:GetPlayers()) do
                        if
                            player ~= game.Players.LocalPlayer and player.Character and
                                player.Character:FindFirstChild("HumanoidRootPart")
                         then
                            local distance = getDistance(game.Players.LocalPlayer, player)

                            if distance <= maxDistance and not _G.PlayerDeth then
                                table.insert(currentPlayersInArea, player)
                            end
                        end
                    end

                    playersInArea = currentPlayersInArea
                    numberToIncrease = numberToIncrease + math.min(#playersInArea, 2)
                    _G.Players = numberToIncrease / 2
                end

                spawn(
                    function()
                        while true do
                            checkPlayersInArea()
                            task.wait(0.05)
                        end
                    end
                )

                _G.CombatTimer = 0
                _G.MyDamage = 0
                spawn(
                    function()
                        function Counter1Y()
                            cleanUpDamageLog()
                            local totalDamage = getTotalDamage()
                            _G.MyDamage = totalDamage

                            InCombatDetect(playerGui)
                            if (_G.InCombat) and not _G.PlayerDeth then
                                _G.CombatTimer = _G.CombatTimer + 20
                            else
                                _G.CombatTimer = _G.CombatTimer - 2.5
                            end
                        end

                        while true do
                            task.wait(0.5)
                            Counter1Y()
                        end
                    end
                )

                spawn(
                    function()
                        function DamageY()
                            _G.MyDamage = _G.MyDamage or 1
                if not _G.ActiveRace and not _G.PlayerDeth then
                                _G.PowerPogress = math.min((_G.MyDamage / 120) + (_G.CombatTimer / 2) + _G.Players, 100)
                            end
                        end

                        while true do
                            task.wait()
                            DamageY()
                        end
                    end
                )
            end

            function EquipWeapon(ToolSe)
                if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
                    Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
                    task.wait(.1)
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(Tool)
                end
            end

            function containsItem(table, item)
                for _, value in ipairs(table) do
                    if value == item then
                        return true
                    end
                end
                return false
            end

            function CheckSafeZone(p)
                -- Verifica se 'p' possui 'HumanoidRootPart' e 'Humanoid' para evitar erros
                if not p:FindFirstChild("HumanoidRootPart") or not p:FindFirstChild("Humanoid") then
                    return false
                end

                for i, v in pairs(game:GetService("Workspace")["_WorldOrigin"].SafeZones:GetChildren()) do
                    if v:IsA("Part") then
                        local distance = (v.Position - p.HumanoidRootPart.Position).magnitude
                        local healthPercentage = p.Humanoid.Health / p.Humanoid.MaxHealth
                        if distance <= 200 and healthPercentage >= 0.95 then
                            return true
                        end
                    end
                end
                return false
            end
            _G.ActionList = {
                ICE_COMBO = {
                    {item = "Dragon Trident", key = "X", delay = 0.7, M = _G.MaxTPDistance or 250, T = 1},
                    {item = "Skull Guitar", key = "X", delay = 1.2, M = 55, T = 1},
                    {item = "Ice-Ice", key = "V", delay = 0, M = 40, T = 1}
                },
                DragonGuitar = {
                    {item = "Dragon Trident", key = "X", delay = 0.7, M = _G.MaxTPDistance or 250, T = 1},
                    {item = "Skull Guitar", key = "X", delay = 1.2, M = 55, T = 1}
                },
                ICE = {
                    {item = "Ice-Ice", key = "V", delay = 0, M = _G.MaxTPDistance or 250, T = 1}
                },
                SoulGuitar = {
                    {item = "Skull Guitar", key = "X", delay = 1.2, M = _G.MaxTPDistance or 250, T = 1}
                },
                Z_CDK = {
                    {item = "Cursed Dual Katana", key = "Z", delay = 0, M = _G.MaxTPDistance or 250, T = 1, S = 1}
                },
                V_DOUGH = {
                    {item = "Dough-Dough", key = "V", delay = 0, M = _G.MaxTPDistance or 250, T = 1, S = 3}
                },
                DragonTrident = {
                    {item = "Dragon Trident", key = "X", delay = 0, M = _G.MaxTPDistance or 250, T = 1}
                }
            }
            -- Tabelas para armazenar os itens e suas aÃ§Ãµes
            local playerItems = {}
            local playerItemActions = {}
            local player = game:GetService("Players").LocalPlayer

            -- FunÃ§Ã£o para adicionar um item e sua aÃ§Ã£o Ã  mochila do jogador
            function addItemToInventory(player, item, action)
                player = player or game:GetService("Players").LocalPlayer
                local clonedItem = item:Clone() -- Clona o item original
                table.insert(playerItems, item) -- Adiciona o item Ã  tabela
                table.insert(playerItemActions, action) -- Adiciona a aÃ§Ã£o Ã  tabela de aÃ§Ãµes
            end

            -- FunÃ§Ã£o para remover um item e sua aÃ§Ã£o
            function removeItemFromInventory(itemName)
                local inventory = player:WaitForChild("Backpack")

                for i, item in ipairs(playerItems) do
                    if item.Name == itemName then
                        table.remove(playerItems, i) -- Remove o item da tabela de itens
                        table.remove(playerItemActions, i) -- Remove a aÃ§Ã£o correspondente
                        if not (not inventory or not itemName) then
                            local item = inventory:FindFirstChild(itemName)
                            if item then
                                item:Destroy()
                            end
                        end
                        break
                    end
                end
            end

            -- FunÃ§Ã£o que restaura os itens e aplica suas aÃ§Ãµes
            function restoreInventory(player)
                player = player or game:GetService("Players").LocalPlayer
                for i, item in ipairs(playerItems) do
                    local clonedItem = item:Clone() -- Clona o item

                    -- AÃ§Ã£o correspondente ao item restaurado
                    local action = playerItemActions[i]
                    if action then
                        clonedItem.Activated:Connect(action)
                    end
                    clonedItem.Parent = player.Backpack -- Reinsere o item na mochila do jogador
                end
            end

            -- FunÃ§Ã£o para carregar o JSON e pegar a aÃ§Ã£o especÃ­fica
            function getActionFromJson(actionName)
                -- Supondo que o JSON jÃ¡ estÃ¡ carregado como _G.ActionList
                if _G.ActionList[actionName] then
                    return _G.ActionList[actionName]
                else
                    -- Chama uma funÃ§Ã£o alternativa caso a aÃ§Ã£o nÃ£o seja encontrada
                    NotificationMenuGame("AÃ§Ã£o " .. actionName .. " nÃ£o encontrada no JSON!")
                    return nil
                end
            end

            function addTeleportTool(actionName)
                l = game.Players.LocalPlayer

                local plr = game:GetService("Players").LocalPlayer
                local tool = Instance.new("Tool")
                tool.RequiresHandle = false
                tool.Name = actionName

                -- FunÃ§Ã£o principal a ser chamada quando a ferramenta Ã© ativada
                local function A()
                    local success, result =
                        pcall(
                        function()
                            if not (_G.V1 or _G.V2) then
                                NotificationMenuGame("Habilite o Teleporte V1 ou V2.")
                                return
                            end
                            local actions = getActionFromJson(actionName)
                            if not actions then
                                return
                            end -- Se a aÃ§Ã£o nÃ£o for encontrada, sai da funÃ§Ã£o

                            for _, action in ipairs(actions) do
                                local weaponName = action.item
                                local key = action.key
                                local t = action.delay or 0.7
                                local d = action.M or 400
                                local T = action.T or 0
                                local S = action.S or 0

                                local distance =
                                    round(
                                    (game:GetService("Players").LocalPlayer.Character.Head.Position -
                                        _G.SPLY.Character.Head.Position).Magnitude / 3
                                )

                                local root = plr.Character.HumanoidRootPart

                                if (distance > d) then
                                    NotificationMenuGame("Jogador muito distante...")
                                    return
                                end

                                -- Posiciona o player (conforme seu cÃ³digo) e equipa a arma
                                if
                                    _G.SPLY and _G.SPLY.Character and
                                        _G.SPLY.Character:FindFirstChild("HumanoidRootPart") and
                                        (T == 1)
                                 then
                                    if (_G.SelectedPosition and _G.SelectedBall and _G.IsScriptRunning) then
                                        root.CFrame = _G.SelectedPosition2
                                    else
                                        currentPosition = _G.SPLY.Character.HumanoidRootPart.CFrame
                                        newPosition = currentPosition + Vector3.new(0, 2.5, 0)
                                        root.CFrame = newPosition
                                    end
                                else
                                    if (T == 1) then
                                        NotificationMenuGame("Jogador nÃ£o encontrado para a posiÃ§Ã£o!")
                                        return
                                    end
                                end

                                if (distance > d) then
                                    root.CFrame = root.CFrame + Vector3.new(2, 25, 0)
                                    NotificationMenuGame("Jogador muito distante...")
                                    return
                                end

                                -- Equipar e pressionar a tecla da aÃ§Ã£o
                                if containsItem(_G.WeaponList, weaponName) then
                                    EquipWeapon(weaponName)
                                    while not (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name ==
                                        weaponName) or
                                        not (game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main").Skills.Visible) do
                                        task.wait()
                                    end
                                    -- Pressiona a tecla especificada
                                    game:GetService("VirtualInputManager"):SendKeyEvent(true, key, false, game)
                                    task.wait(S)
                                    game:GetService("VirtualInputManager"):SendKeyEvent(false, key, false, game)

                                    task.wait(t)
                                else
                                    NotificationMenuGame("Arma " .. weaponName .. " nÃ£o encontrada!")
                                    return
                                end
                            end
                        end
                    )

                    if not success then
                        NotificationMenuGame("error: " .. result)
                    end
                end

                tool.Activated:Connect(A)
                addItemToInventory(nil, tool, A)
                tool.Parent = plr.Backpack
            end

            spawn(
                function()
                    pcall(
                        function()
                            game:GetService("RunService").Stepped:Connect(
                                function()
                                    pcall(
                                        function()
                                            if _G.SettingTable.NoClip or _G.Clip then
                                                for _, v in pairs(
                                                    game:GetService("Players").LocalPlayer.Character:GetDescendants()
                                                ) do
                                                    if v:IsA("BasePart") then
                                                        v.CanCollide = false
                                                    end
                                                end
                                            end
                                        end
                                    )
                                end
                            )
                        end
                    )
                end
            )
            function StopTween(target)
                if not target then
                    _G.StopTween = true
                    task.wait()
                    topos(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame)
                    task.wait()
                    if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy(

                        )
                    end
                    _G.StopTween = false
                    _G.Clip = false
                end
            end

            function findIndex(item, list)
                for i, v in ipairs(list) do
                    if v == item then
                        return i
                    end
                end
                return nil
            end

            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

            function topos(Pos)
                Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                _G.Distanec = Distance
                if Distance > 2000 then
                    X = 500
                else
                    X = 0
                end
                if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
                    game.Players.LocalPlayer.Character.Humanoid.Sit = false
                end
                pcall(
                    function()
                        tween =
                            game:GetService("TweenService"):Create(
                            game.Players.LocalPlayer.Character.HumanoidRootPart,
                            TweenInfo.new(Distance / 280, Enum.EasingStyle.Linear),
                            {CFrame = Pos + Vector3.new(0, X, 0)}
                        )
                    end
                )

                tween:Play()
                if Distance <= 150 then
                    tween:Cancel()
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
                    _G.TeleportToIslandToggle:Set(false)
                end
                if _G.StopTween == true then
                    tween:Cancel()
                    _G.Clip = false
                else
                end
            end

            local function F_Number(numero)
                -- Define a lista de sufixos e seus valores, incluindo bilhÃµes
                local sufixos = {
                    {valor = 1e9, sufixo = "B"},
                    {valor = 1e6, sufixo = "M"},
                    {valor = 1e3, sufixo = "K"}
                }

                -- Verifica o sufixo apropriado para o nÃºmero
                for _, sufixoInfo in ipairs(sufixos) do
                    if numero >= sufixoInfo.valor then
                        -- Calcula o valor formatado com precisÃ£o de duas casas decimais
                        local valorFormatado = numero / sufixoInfo.valor
                        if valorFormatado >= 100 then
                            return string.format("%.0f%s", valorFormatado, sufixoInfo.sufixo) -- Sem casas decimais para valores grandes
                        elseif valorFormatado >= 10 then
                            return string.format("%.1f%s", valorFormatado, sufixoInfo.sufixo) -- Uma casa decimal para valores mÃ©dios
                        else
                            return string.format("%.2f%s", valorFormatado, sufixoInfo.sufixo) -- Duas casas decimais para valores pequenos
                        end
                    end
                end

                -- Caso nÃ£o se aplique nenhum sufixo, retorna o nÃºmero original
                return tostring(numero)
            end

            function RemoveHighlightV1()
                pcall(
                    function()
                        local Players = game:GetService("Players")
                        _G.HighlightV1 = false

                        for _, player in ipairs(Players:GetPlayers()) do
                            local indicator = _G.IndicatorInstanceList[player.Name]
                            if indicator then
                                indicator:Destroy()
                            end
                        end
                    end
                )
            end

            function ReloadHighlightV1()
                RemoveHighlightV1()
                CreateHighlightV1()
            end

            function CreateHighlightV1()
                local Players = game:GetService("Players")
                local PlayersIndicatorList = {}
                _G.IndicatorInstanceList = {}
                _G.HighlightV1 = true

                _G.Highlight_L = true

                -- FunÃ§Ã£o para criar um indicador acima da cabeÃ§a do jogador
                local function createIndicator(player)
                    local character = player.Character
                    if character and not character:FindFirstChild("Indicator") then
                        local head = character:FindFirstChild("Head")
                        if head and not table.find(PlayersIndicatorList, player.Name) then
                            table.insert(PlayersIndicatorList, player.Name)

                            -- Definir a cor principal com base no time e valores
                            MainColor = Color3.fromRGB(255, 0, 0) -- PadrÃ£o vermelho
                            if (CheckSafeZone(character)) then
                                MainColor = Color3.fromRGB(0, 255, 50) -- PadrÃ£o Verde
                            end

                            if
                                tostring(game.Players.LocalPlayer.Team) == "Marines" and
                                    game.Players.LocalPlayer.Team == player.Team
                             then
                                MainColor = Color3.fromRGB(255, 0, 255) -- Verde para time igual
                            elseif game:GetService("Players")[player.Name].leaderstats["Bounty/Honor"].Value > 10000000 then
                                MainColor = Color3.fromRGB(153, 0, 255)
                            elseif game:GetService("Players")[player.Name].leaderstats["Bounty/Honor"].Value > 3000000 then
                                MainColor = Color3.fromRGB(255, 255, 0) -- Amarelo para alta pontuaÃ§Ã£o
                            end

                            -- Criar o indicador visual
                            local billboardGui = Instance.new("BillboardGui")
                            billboardGui.Name = "Indicator"
                            billboardGui.Parent = head
                            billboardGui.Size = UDim2.new(5.2, 0, 7, 0)
                            billboardGui.StudsOffset = Vector3.new(-0.15, -2.5, 0)
                            billboardGui.AlwaysOnTop = true

                            local frame = Instance.new("Frame")
                            frame.Parent = billboardGui
                            frame.Size = UDim2.new(1, 0, 1, 0)
                            frame.BackgroundTransparency = _G.SettingTable2.OBS_Transparency or 0.6
                            frame.BackgroundColor3 = MainColor
                            _G.IndicatorInstanceList[player.Name] = billboardGui
                        end
                    end
                end

                -- Aplicar o indicador para os jogadores existentes
                for _, player in ipairs(Players:GetPlayers()) do
                    player.CharacterAdded:Connect(
                        function()
                            createIndicator(player)
                        end
                    )
                    if player.Character then
                        createIndicator(player)
                    end
                end
            end

            function CreateHighlightV2()
                local Players = game:GetService("Players")
                local RunService = game:GetService("RunService")
                _G.highlightEnabled = _G.highlightEnabled or false -- Inicializa o sistema como habilitado

                local function createHighlight(player)
                    if not player.Character then
                        return
                    end

                    local success, result =
                        pcall(
                        function()
                            local bountyValue =
                                player:FindFirstChild("leaderstats") and
                                player.leaderstats:FindFirstChild("Bounty/Honor") and
                                player.leaderstats["Bounty/Honor"].Value or
                                0
                            local mainColor = Color3.fromRGB(255, 0, 0) -- Vermelho padrÃ£o

                            if player == Players.LocalPlayer then
                                mainColor = Color3.fromRGB(0, 255, 0) -- Verde para o prÃ³prio jogador
                            elseif bountyValue > 3000000 then
                                mainColor = Color3.fromRGB(255, 255, 0) -- Amarelo para alta pontuaÃ§Ã£o
                            elseif Players.LocalPlayer.Team == player.Team then
                                mainColor = Color3.fromRGB(0, 255, 255) -- Azul para mesmo time
                            end

                            local highlight = Instance.new("Highlight")
                            highlight.Name = "PlayerHighlight"
                            highlight.Adornee = player.Character
                            highlight.Parent = player.Character
                            highlight.OutlineTransparency = 10
                            highlight.FillTransparency = _G.SettingTable2.OBS_Transparency or 0.6
                            highlight.FillColor = mainColor
                        end
                    )

                    if not success then
                        warn("Failed to create highlight for " .. player.Name .. ": " .. tostring(result))
                    end
                end

                local function removeHighlight(player)
                    if player.Character then
                        local highlight = player.Character:FindFirstChild("PlayerHighlight")
                        if highlight then
                            highlight:Destroy()
                        end
                    end
                end

                local function toggleHighlight()
                    _G.highlightEnabled = _G.highlightEnabled

                    if _G.highlightEnabled then
                        spawn(
                            function()
                                function HiGH()
                                    for _, player in ipairs(Players:GetPlayers()) do
                                        removeHighlight(player)
                                        createHighlight(player)
                                    end
                                end

                                while _G.highlightEnabled do
                                    task.wait(0.5)
                                    HiGHY()
                                end
                                task.wait(1)
                                for _, player in ipairs(Players:GetPlayers()) do
                                    removeHighlight(player)
                                end
                            end
                        )
                    else
                        for _, player in ipairs(Players:GetPlayers()) do
                            removeHighlight(player)
                        end
                    end
                end

                Players.PlayerAdded:Connect(
                    function(player)
                        player.CharacterAdded:Connect(
                            function()
                                if _G.highlightEnabled then
                                    createHighlight(player)
                                end
                            end
                        )
                    end
                )

                Players.PlayerRemoving:Connect(removeHighlight)

                for _, player in ipairs(Players:GetPlayers()) do
                    player.CharacterAdded:Connect(
                        function()
                            if _G.highlightEnabled then
                                createHighlight(player)
                            end
                        end
                    )
                end

                toggleHighlight()
            end

            _G.OJO_SV = {}
            function SuperView()
                -- VariÃ¡veis globais para controlar o script
                _G.IsScriptRunning = true
                _G.MonitoringTime = 70
                _G.SelectedPosition = nil
                _G.SelectedBall = nil
                _G.SensitivitySpeed = 0.7
                _G.SensitivityDistance = 0.5

                -- VariÃ¡veis internas
                local sphere = nil
                local velocityHistory = {}
                local directionHistory = {}
                local maxHistorySize = 350
                _G.SelectedPlayer = game.Players.LocalPlayer -- Inicia monitorando o local player por padrÃ£o
                local targetCharacter, humanoid, rootPart

                -- FunÃ§Ã£o para criar a esfera
                local function createSphere()
                    local part = Instance.new("Part")
                    part.Shape = Enum.PartType.Ball
                    part.Size = Vector3.new(3, 3, 3)
                    part.Anchored = true
                    part.CanCollide = false
                    part.Transparency = 0.3
                    return part
                end

                -- FunÃ§Ã£o para mudar a cor dinamicamente
                function ChangeColorX()
                    if sphere then
                        local time = tick() % 5
                        local r = math.abs(math.sin(time * math.pi / 5))
                        local g = math.abs(math.sin((time + 1) * math.pi / 5))
                        local b = math.abs(math.sin((time + 2) * math.pi / 5))
                        sphere.BrickColor = BrickColor.new(Color3.new(r, g, b))
                    end
                end

                local function updateSphereColor(sphere)
                    game:GetService("RunService").RenderStepped:Connect(
                        function()
                            ChangeColorX()
                        end
                    )
                end

                -- FunÃ§Ã£o para calcular a mÃ©dia de um histÃ³rico de valores
                local function calculateAverage(history, count)
                    local sum = Vector3.new(0, 0, 0)
                    for i = #history - count + 1, #history do
                        sum = sum + history[i]
                    end
                    return sum / count
                end

                -- FunÃ§Ã£o principal de monitoramento
                local function monitor()
                    if not targetCharacter then
                        return
                    end

                    function MonitorX()
                        if _G.IsScriptRunning and humanoid and humanoid.Health > 0 then
                            -- Armazena no histÃ³rico
                            table.insert(velocityHistory, rootPart.Velocity)
                            table.insert(directionHistory, humanoid.MoveDirection)

                            -- Limita o tamanho do histÃ³rico
                            if #velocityHistory > maxHistorySize then
                                table.remove(velocityHistory, 1)
                            end
                            if #directionHistory > maxHistorySize then
                                table.remove(directionHistory, 1)
                            end

                            -- Calcula a mÃ©dia de velocidade e direÃ§Ã£o
                            local monitoringTime = math.min(#velocityHistory, _G.MonitoringTime)
                            local avgVelocity = calculateAverage(velocityHistory, monitoringTime)
                            local avgDirection = calculateAverage(directionHistory, monitoringTime)

                            -- Ajusta com base nas variÃ¡veis globais
                            local sensitivityFactor = _G.SensitivitySpeed
                            local deltaTime = _G.SensitivityDistance

                            -- Calcula a posiÃ§Ã£o prevista
                            local predictedPosition =
                                rootPart.Position +
                                (avgVelocity.Magnitude * avgDirection * deltaTime * sensitivityFactor)

                            -- Atualiza a posiÃ§Ã£o da esfera
                            if not sphere then
                                sphere = createSphere()
                                sphere.Parent = workspace
                                updateSphereColor(sphere)
                            end

                            sphere.Position = predictedPosition
                            _G.SelectedPosition = predictedPosition
                            _G.SelectedPosition2 = CFrame.new(predictedPosition)
                            _G.SelectedBall = sphere
                        else
                            -- Reseta se o jogador sair do jogo ou perder a vida
                            if sphere then
                                sphere:Destroy()
                                sphere = nil
                            end
                            _G.SelectedPosition = nil
                        end
                    end

                    game:GetService("RunService").RenderStepped:Connect(
                        function()
                            MonitorX()
                        end
                    )
                end

                -- FunÃ§Ã£o para atualizar o jogador monitorado
                local function updateTargetPlayer(player)
                    if player and player.Character then
                        _G.SelectedPlayer = player
                        targetCharacter = player.Character
                        humanoid = targetCharacter:WaitForChild("Humanoid")
                        rootPart = targetCharacter:WaitForChild("HumanoidRootPart")

                        if not sphere then
                            sphere = createSphere()
                            sphere.Parent = workspace
                            updateSphereColor(sphere)
                        end
                    end
                end

                -- FunÃ§Ã£o para mudar o jogador monitorado
                function MudarPlayerMonitorado(newPlayerName)
                    local targetPlayer = game.Players:FindFirstChild(newPlayerName)

                    if targetPlayer then
                        updateTargetPlayer(targetPlayer)
                    else
                        -- Volta para o local player se o jogador nÃ£o for encontrado
                        updateTargetPlayer(game.Players.LocalPlayer)
                    end
                end

                -- Inicializa monitorando o local player
                updateTargetPlayer(_G.SelectedPlayer)
                monitor()
            end

            function ChangeTargetPlayer(newPlayerName)
                local targetPlayer = game.Players:FindFirstChild(newPlayerName)
                if targetPlayer then
                    MudarPlayerMonitorado(newPlayerName)
                end
            end

            spawn(
                function()
                    function OJOY()
                        if (next(_G.OJO_SV) == nil) then
                            _G.IsScriptRunning = false
                            _G.SelectedBall = nil
                        end
                    end

                    while true do
                        task.wait(0.5)
                        OJOY()
                    end
                end
            )

            _G.OJO_VS = {}
            function OJO()
                local Players = game:GetService("Players")
                local LocalPlayer = Players.LocalPlayer
                local RunService = game:GetService("RunService")
                local maxDistance = 500
                local lookStartTime = 0 -- Tempo de inÃ­cio da observaÃ§Ã£o
                local lookDuration = _G.SettingTable2.SelectPlayer_Timer or 1 -- Tempo de observaÃ§Ã£o necessÃ¡rio para selecionar
                local selectedLine = nil
                local selectedPlayer = nil
                local lookingAtPlayer = nil
                local observationArea = _G.SettingTable2.SelectPlayer_ObservationArea or 0.96 -- Ãrea de observaÃ§Ã£o (quanto mais alto, mais perto do ponto de foco)

                -- Global variables
                _G.SPLY = nil -- Jogador selecionado
                _G.VPO = true -- Controla se o script continua

                local function isPlayerAlive(player)
                    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
                    return humanoid and humanoid.Health > 0
                end

                -- FunÃ§Ã£o para pegar o jogador mais prÃ³ximo do ponto de foco (com compatibilidade para Shift Lock)
                local function getNearestPlayerInView()
                    local camera = workspace.CurrentCamera
                    local closestPlayer = nil
                    local bestDotProduct = -1 -- Melhor jogador no centro da tela

                    for _, player in pairs(Players:GetPlayers()) do
                        if
                            player ~= LocalPlayer and player.Character and
                                player.Character:FindFirstChild("HumanoidRootPart")
                         then
                            local character = player.Character
                            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

                            local adjustedCameraPosition =
                                humanoidRootPart.Position - Vector3.new(0, _G.SettingTable2.SelectPlayer_Cam or 40, 0) -- PosiÃ§Ã£o ajustada da cÃ¢mera
                            local direction = (adjustedCameraPosition - camera.CFrame.Position).unit

                            -- Usa um ponto 0.5 unidades acima do centro da tela para compatibilidade com Shift Lock
                            local dotProduct = direction:Dot(camera.CFrame.LookVector)

                            -- Verifica se o jogador estÃ¡ dentro da Ã¡rea de observaÃ§Ã£o
                            if dotProduct > observationArea then
                                -- Verifica se este jogador estÃ¡ mais centralizado (mais prÃ³ximo do ponto de foco) que o anterior
                                if dotProduct > bestDotProduct then
                                    if _G.LockPlayer then
                                        closestPlayer = _G.LockPlayerX
                                    else
                                        bestDotProduct = dotProduct
                                        closestPlayer = player
                                    end
                                end
                            end
                        end
                    end

                    _G.LockPlayerX = closestPlayer
                    return closestPlayer
                end

                -- FunÃ§Ã£o para criar/atualizar a linha de seleÃ§Ã£o
                local function createOrUpdateSelectionLine(player)
                    -- Identifica o alvo com base em `_G.IsScriptRunning`
                    local targetPart =
                        _G.IsScriptRunning and _G.SelectedBall or
                        (player and player.Character and player.Character:FindFirstChild("HumanoidRootPart"))

                    -- Verifica se o alvo atual existe
                    if targetPart then
                        -- Se nÃ£o existe uma linha selecionada, cria uma nova linha com Attachments
                        if not selectedLine then
                            local attachment0 = Instance.new("Attachment")
                            attachment0.Position = Vector3.new(0, 0, 0)
                            attachment0.Parent = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

                            local attachment1 = Instance.new("Attachment")
                            attachment1.Position = Vector3.new(0, 0, 0)
                            attachment1.Parent = targetPart

                            selectedLine = Instance.new("Beam")
                            selectedLine.Attachment0 = attachment0
                            selectedLine.Attachment1 = attachment1
                            selectedLine.FaceCamera = true
                            selectedLine.Width0 = _G.SettingTable2.SelectPlayer_Line_Width0 or 1
                            selectedLine.Width1 = _G.SettingTable2.SelectPlayer_Line_Width1 or 2
                            selectedLine.LightEmission = 20000
                            selectedLine.LightInfluence = 0
                            selectedLine.Parent = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                        else
                            -- Se o alvo mudou, recria a linha para o novo alvo
                            if selectedLine.Attachment1.Parent ~= targetPart then
                                selectedLine:Destroy()
                                selectedLine = nil
                                createOrUpdateSelectionLine(player) -- Recria a linha com o novo alvo
                            end
                        end
                    else
                        -- Se o alvo sumiu, destrÃ³i a linha de seleÃ§Ã£o
                        if selectedLine then
                            selectedLine:Destroy()
                            selectedLine = nil
                        end
                    end
                end

                -- FunÃ§Ã£o para atualizar a cor da linha de seleÃ§Ã£o
                local function updateLineColor()
                    if selectedLine then
                        local time = tick()
                        local r = math.abs(math.sin(time))
                        local g = math.abs(math.sin(time + 2))
                        local b = math.abs(math.sin(time + 4))
                        selectedLine.Color = ColorSequence.new(Color3.new(r, g, b))
                    end
                end

                -- Limpa a seleÃ§Ã£o quando _G.VPO Ã© falso
                local function clearSelection()
                    _G.SPLY = nil
                    if selectedLine then
                        selectedLine:Destroy()
                        selectedLine = nil
                    end
                end

                -- Verifica o jogador mais prÃ³ximo ao ponto de foco e aplica a lÃ³gica
                function CheckPlayerX()
                    if not _G.VPO then
                        clearSelection()
                        return
                    end

                    -- Verifica se o LocalPlayer estÃ¡ vivo
                    if not isPlayerAlive(LocalPlayer) then
                        clearSelection()
                        
                        -- Aguarda atÃ© o jogador reaparecer
                        repeat
                            task.wait()
                        until isPlayerAlive(LocalPlayer)
                    end

                    local closestPlayerInView = getNearestPlayerInView()

                    if closestPlayerInView then
                        -- Se um novo jogador estÃ¡ sendo observado, reinicia o temporizador de observaÃ§Ã£o
                        if closestPlayerInView ~= lookingAtPlayer then
                            lookingAtPlayer = closestPlayerInView
                            lookStartTime = tick() -- Inicia o tempo de observaÃ§Ã£o
                        elseif tick() - lookStartTime >= lookDuration then
                            -- Se o tempo de observaÃ§Ã£o for atingido, seleciona o jogador
                            if not (closestPlayerInView == _G.SPLY) then
                                NotificationMenuGame("{color1_Green}" .. tostring(_G.LockPlayerX.Name) .. "{color1_/} has been selected.")
                            end

                            selectedPlayer = closestPlayerInView
                            _G.SPLY = selectedPlayer
                        end
                    else
                        -- Reseta o temporizador de observaÃ§Ã£o caso nÃ£o esteja observando ninguÃ©m
                        lookingAtPlayer = nil
                        lookStartTime = 0
                    end

                    -- Atualiza a linha de seleÃ§Ã£o ou a destrÃ³i se nÃ£o houver jogador selecionado
                    if selectedPlayer then
                        if (selectedPlayer.Character and selectedPlayer.Character:WaitForChild("HumanoidRootPart")) then
                            createOrUpdateSelectionLine(selectedPlayer)
                            updateLineColor()
                        else
                            createOrUpdateSelectionLine(game.Players.LocalPlayer)
                            updateLineColor()
                        end
                    elseif selectedLine then
                        selectedLine:Destroy()
                        selectedLine = nil
                    end
                end

                RunService.RenderStepped:Connect(
                    function()
                        CheckPlayerX()
                    end
                )
            end

            spawn(
                function()
                    function OJOVSY()
                        if (next(_G.OJO_VS) == nil) then
                            _G.VPO = false
                        end
                    end

                    while true do
                        task.wait(0.5)
                        OJOVSY()
                    end
                end
            )

            -- FunÃ§Ã£o para arredondar nÃºmeros

            function AutoHaki()
                if not game:GetService("Players").LocalPlayer.Character:FindFirstChild("HasBuso") then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
                end
            end

            function AutoSuperHaki()
                -- Verifica se a variÃ¡vel global SafeRepeatLFV estÃ¡ ativa
                spawn(
                    function()
                        while true do
                            if (_G.SettingTable.Haki) then
                                AutoHaki()
                            end
                            task.wait(1)
                        end
                    end
                )
            end
            AutoSuperHaki()

            _G.EspFruitsName = {}
            function UpdateBfEsp()
                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                    pcall(
                        function()
                            if DevilFruitESP then
                                if string.find(v.Name, "Fruit") then
                                    if not v.Handle:FindFirstChild("NameEsp" .. Number) then
                                        local bill = Instance.new("BillboardGui", v.Handle)
                                        bill.Name = "NameEsp" .. Number
                                        bill.ExtentsOffset = Vector3.new(0, 1, 0)
                                        bill.Size = UDim2.new(1, 200, 1, 30)
                                        bill.Adornee = v.Handle
                                        bill.AlwaysOnTop = true
                                        local name = Instance.new("TextLabel", bill)
                                        name.Font = "GothamBold"
                                        name.FontSize = "Size14"
                                        name.TextWrapped = true
                                        name.Size = UDim2.new(1, 0, 1, 0)
                                        name.TextYAlignment = "Top"
                                        name.BackgroundTransparency = 1
                                        name.TextStrokeTransparency = 0.5
                                        name.TextSize = _G.SettingTable2.Esp_Player_SizeText or 12.5
                                        name.TextColor3 = Color3.fromRGB(255, 0, 0)
                                        name.Text =
                                            (v.Name ..
                                            " \n" ..
                                                round(
                                                    (game:GetService("Players").LocalPlayer.Character.Head.Position -
                                                        v.Handle.Position).Magnitude / 3
                                                ) ..
                                                    " M")
                                        _G.EspFruitsName[i] = v.Name
                                    else
                                        v.Handle["NameEsp" .. Number].TextLabel.Text =
                                            (_G.EspFruitsName[i] ..
                                            "   \n" ..
                                                (round(
                                                    (game:GetService("Players").LocalPlayer.Character.Head.Position -
                                                        v.Handle.Position).Magnitude / 3
                                                ) *
                                                    2) ..
                                                    " M")

                                        if (_G.EspFruitsName[i] == "") then
                                            _G.EspFruitsName[i] = v.Name
                                        end

                                        if true then
                                            local clone = v:Clone()
                                            clone.Parent = workspace

                                            local modelInfo = {}
                                            for _, part in ipairs(clone:GetDescendants()) do
                                                if part:IsA("BasePart") then
                                                    table.insert(
                                                        modelInfo,
                                                        {
                                                            Name = part.Name,
                                                            Material = tostring(part.Material),
                                                            Size = tostring(part.Size),
                                                            Color = tostring(part.Color),
                                                            MeshId = part:IsA("MeshPart") and part.MeshId or "N/A"
                                                        }
                                                    )
                                                end
                                            end

                                            local infoStr = ""
                                            for _, info in ipairs(modelInfo) do
                                                if info.Name == "Fruit" then
                                                    infoStr =
                                                        '"Name": "' ..
                                                        info.Name ..
                                                            '",\n' ..
                                                                '"Size": "' ..
                                                                    info.Size ..
                                                                        '",\n' ..
                                                                            '"Material": "' ..
                                                                                info.Material ..
                                                                                    '",\n' ..
                                                                                        '"Color": "' ..
                                                                                            info.Color ..
                                                                                                '",\n' ..
                                                                                                    '"MeshId": "' ..
                                                                                                        info.MeshId ..
                                                                                                            '",\n'
                                                end
                                            end

                                            clone:Destroy()

                                            local jsonData =
                                                _G.jsonDataFruits or
                                                game:HttpGet(
                                                    "https://raw.githubusercontent.com/MyMidnightOFC/TheBloxxy/refs/heads/main/fruitsList.json"
                                                )
                                            _G.jsonDataFruits = jsonData

                                            local HttpService = game:GetService("HttpService")
                                            local data = HttpService:JSONDecode(jsonData)

                                            for key, value in pairs(data) do
                                                local infoStr2 =
                                                    '"Name": "' ..
                                                    data[key].Name ..
                                                        '",\n' ..
                                                            '"Size": "' ..
                                                                data[key].Size ..
                                                                    '",\n' ..
                                                                        '"Material": "' ..
                                                                            data[key].Material ..
                                                                                '",\n' ..
                                                                                    '"Color": "' ..
                                                                                        data[key].Color ..
                                                                                            '",\n' ..
                                                                                                '"MeshId": "' ..
                                                                                                    data[key].MeshId ..
                                                                                                        '",\n'

                                                if infoStr2 == infoStr then
                                                    local Text = v.Handle.FruitEsp.TextLabel
                                                    if (#(v.Name) < 7) then
                                                        _G.EspFruitsName[i] = key .. "-" .. key .. " ( Spawned )"
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            else
                                if v.Handle:FindFirstChild("NameEsp" .. Number) then
                                    v.Handle:FindFirstChild("NameEsp" .. Number):Destroy()
                                end
                            end
                        end
                    )
                end
            end

            function UpdateIslandESP()
                for i, v in pairs(game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren()) do
                    pcall(
                        function()
                            if IslandESP then
                                if v.Name ~= "Sea" then
                                    if not v:FindFirstChild("NameEsp") then
                                        local bill = Instance.new("BillboardGui", v)
                                        bill.Name = "NameEsp"
                                        bill.ExtentsOffset = Vector3.new(0, 1, 0)
                                        bill.Size = UDim2.new(1, 200, 1, 30)
                                        bill.Adornee = v
                                        bill.AlwaysOnTop = true
                                        local name = Instance.new("TextLabel", bill)
                                        name.Font = "GothamBold"
                                        name.FontSize = "Size14"
                                        name.TextWrapped = true
                                        name.Size = UDim2.new(1, 0, 1, 0)
                                        name.TextYAlignment = "Top"
                                        name.BackgroundTransparency = 1
                                        name.TextStrokeTransparency = 0.5
                                        name.TextColor3 = Color3.fromRGB(80, 245, 245)
                                        name.TextSize = _G.SettingTable2.Esp_Player_SizeText or 12.5
                                    else
                                        v["NameEsp"].TextLabel.Text =
                                            (v.Name ..
                                            "   \n" ..
                                                round(
                                                    (game:GetService("Players").LocalPlayer.Character.Head.Position -
                                                        v.Position).Magnitude / 3
                                                ) ..
                                                    " M")
                                    end
                                end
                            else
                                if v:FindFirstChild("NameEsp") then
                                    v:FindFirstChild("NameEsp"):Destroy()
                                end
                            end
                        end
                    )
                end
            end

            -- VariÃ¡vel global para nÃºmero Ãºnico (evita conflito de nomes)
            local Number = math.random(1, 1000000)

            -- FunÃ§Ã£o principal para atualizar o ESP dos jogadores
            function UpdateEspPlayer()
                ESPPlayerViewDistance = ESPPlayerViewDistance or 10000
                local Players = game:GetService("Players")
                local LocalPlayer = Players.LocalPlayer

                for _, player in pairs(Players:GetPlayers()) do
                    if player ~= LocalPlayer or true then
                        pcall(
                            function()
                                local character = player.Character
                                if character and character:FindFirstChild("Head") then
                                    local head = character.Head
                                    local existingEsp = head:FindFirstChild("NameEsp" .. Number)

                                    if _G.SettingTable.Esp_Player then
                                        local distance =
                                            round((LocalPlayer.Character.Head.Position - head.Position).Magnitude / 3)

                                        -- Verifica distÃ¢ncia de visualizaÃ§Ã£o
                                        if (distance - ESPPlayerViewDistance) < 0 or ESPPlayerViewDistance == 0 then
                                            if not existingEsp then
                                                -- Cria o BillboardGui para o ESP
                                                local bill = Instance.new("BillboardGui")
                                                bill.Name = "NameEsp" .. Number
                                                bill.ExtentsOffset =
                                                    Vector3.new(-1, _G.SettingTable2.Esp_Player_HeightText or 3, 0)
                                                bill.Size = UDim2.new(1, 210, 1, 90)
                                                bill.Adornee = head
                                                bill.AlwaysOnTop = true
                                                bill.Parent = head

                                                -- Cria o TextLabel dentro do BillboardGui
                                                local name = Instance.new("TextLabel")
                                                name.Font = Enum.Font.GothamBold
                                                name.TextWrapped = true
                                                name.Size = UDim2.new(1, 0, 1, 0)
                                                name.TextYAlignment = Enum.TextYAlignment.Top
                                                name.BackgroundTransparency = 1
                                                name.TextStrokeTransparency = 0.5
                                                name.Parent = bill
                                                name.TextSize = _G.SettingTable2.Esp_Player_SizeText or 12.5

                                                -- Define a cor do texto baseado na equipe
                                                if player.Team == LocalPlayer.Team then
                                                    name.TextColor3 = Color3.new(0, 1, 0) -- Verde
                                                else
                                                    name.TextColor3 = Color3.new(1, 0, 0) -- Vermelho
                                                end
                                            end

                                            -- Atualiza informaÃ§Ãµes no ESP
                                            local bount = F_Number(player.leaderstats["Bounty/Honor"].Value)
                                            local level = round(player.Data.Level.Value)
                                            local levelText =
                                                level == 2600 and tostring(level) .. " (MAX)" or tostring(level)
                                            local healthPercent =
                                                round((character.Humanoid.Health / character.Humanoid.MaxHealth) * 100)
                                            local extraInfo =
                                                (_G.ESPPlayerViewExtra or true) and "[ " .. bount .. " ]" or ""

                                            if CheckSafeZone(character) then
                                                extraInfo = extraInfo .. " - SAFE\n"
                                            else
                                                extraInfo = extraInfo .. "\n"
                                            end

                                            head["NameEsp" .. Number].TextLabel.Text =
                                                extraInfo ..
                                                player.Name ..
                                                    " | " ..
                                                        distance ..
                                                            " M\n" ..
                                                                "Health: " .. healthPercent .. "% Lv. " .. levelText
                                        else
                                            if existingEsp then
                                                existingEsp:Destroy()
                                            end
                                        end
                                    else
                                        if existingEsp then
                                            existingEsp:Destroy()
                                        end
                                    end
                                end
                            end
                        )
                    end
                end
            end

            _G.ForceImpulse = _G.ForceImpulse or 1.8
            local player = game.Players.LocalPlayer
            local camera = game.Workspace.CurrentCamera
            local userInputService = game:GetService("UserInputService")
            local runService = game:GetService("RunService")

            local launchForceHorizontal = 200 -- ForÃ§a do impulso horizontal
            local launchForceUp = 70 -- ForÃ§a do impulso vertical
            local impulseDuration = 0.15 -- DuraÃ§Ã£o do impulso em segundos

            -- VariÃ¡vel para armazenar o personagem atual
            local character = player.Character or player.CharacterAdded:Wait()

            -- FunÃ§Ã£o que atualiza o personagem sempre que ele reaparece
            local function onCharacterAdded(newCharacter)
                character = newCharacter
            end

            -- Conecta o evento CharacterAdded para atualizar o personagem
            player.CharacterAdded:Connect(onCharacterAdded)

            -- FunÃ§Ã£o para lanÃ§ar o personagem
            function launchPlayer()
                -- Certifica-se de que o personagem e o HumanoidRootPart existem
                local rootPart = character:FindFirstChild("HumanoidRootPart")
                if rootPart then
                    -- Captura apenas o eixo X da direÃ§Ã£o da cÃ¢mera
                    local horizontalDirection =
                        Vector3.new(camera.CFrame.LookVector.X, 0, camera.CFrame.LookVector.Z).Unit
                    -- Calcula a forÃ§a final do impulso, aplicando o multiplicador
                    local launchDirection =
                        (horizontalDirection * launchForceHorizontal + Vector3.new(0, launchForceUp, 0)) *
                        _G.ForceImpulse

                    -- Define o tempo inicial e ativa o impulso atÃ© o fim do tempo definido
                    local startTime = tick()
                    local connection
                    connection =
                        runService.Heartbeat:Connect(
                        function()
                            if tick() - startTime < impulseDuration then
                                rootPart.Velocity = launchDirection
                            else
                                connection:Disconnect() -- Termina o impulso apÃ³s o tempo de duraÃ§Ã£o
                            end
                        end
                    )
                end
            end

            function NotificationMenuGame(M, M2, T)
                T = T or 7
                M2 = M2 or "Information returning from the script in compatibility mode!!"
                if (_G.CompatibilitySolara) then
                    _G.OrionLib:MakeNotification(
                        {
                            Name = M,
                            Content = M2,
                            Image = "rbxassetid://4483345998",
                            Time = T
                        }
                    )
                    return
                end
                local games = {
                    [game.PlaceId] = {
                        Title = "Blox Fruits",
                        Icons = "rbxassetid://7607745682",
                        Welcome = function()
                            return tostring(M)
                        end
                    }
                }

                if games[game.PlaceId] then
                    if games[game.PlaceId].Title == "Blox Fruits" then
                        local function notify(types, ...)
                            if types == "Notify" then
                                require(game.ReplicatedStorage.Notification).new(...):Display()
                            end
                        end
                        notify("Notify", games[game.PlaceId].Welcome())
                    end
                end

                local function Text(...)
                    require(game.ReplicatedStorage.Notification).new(...):Display()
                end
            end

            local player = game.Players.LocalPlayer
            local distanceBehind = 20 -- DistÃ¢ncia atrÃ¡s do jogador selecionado
            local minHeightFromGround = 4500 -- Altura mÃ­nima para ajuste de posiÃ§Ã£o

            -- FunÃ§Ã£o para calcular a distÃ¢ncia ao chÃ£o
            function getDistanceToGround(position)
                local rayOrigin = position
                local rayDirection = Vector3.new(0, -500, 0) -- DireÃ§Ã£o para baixo
                local rayParams = RaycastParams.new()
                rayParams.FilterType = Enum.RaycastFilterType.Blacklist
                rayParams.FilterDescendantsInstances = {player.Character} -- Ignora o prÃ³prio personagem do LocalPlayer

                -- Executa o Raycast
                local raycastResult = game.Workspace:Raycast(rayOrigin, rayDirection, rayParams)
                if raycastResult then
                    return raycastResult.Position.Y, (position.Y - raycastResult.Position.Y) -- Retorna altura do chÃ£o e distÃ¢ncia atÃ© ele
                else
                    return nil, math.huge -- Retorna "muito grande" se nÃ£o encontrar o chÃ£o
                end
            end

            -- FunÃ§Ã£o para teleportar o LocalPlayer para trÃ¡s da cÃ¢mera de outro jogador
            function TPTBP(distanceBehind)
                distanceBehind = distanceBehind or 20
                if _G.SPLY and _G.SPLY:IsA("Player") and _G.SPLY.Character then
                    local selectedPlayer = _G.SPLY
                    local selectedCharacter = selectedPlayer.Character
                    local selectedRootPart = selectedCharacter:FindFirstChild("HumanoidRootPart")
                    local localRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

                    -- Verifica se o personagem selecionado e o LocalPlayer tÃªm as partes necessÃ¡rias
                    if selectedRootPart and localRootPart then
                        -- Calcula a direÃ§Ã£o atrÃ¡s do personagem selecionado
                        local backDirection = -selectedRootPart.CFrame.LookVector
                        local newPosition = selectedRootPart.Position + (backDirection * distanceBehind)

                        -- Calcula a altura do chÃ£o e ajusta a posiÃ§Ã£o
                        local groundHeight, distanceToGround = getDistanceToGround(newPosition)
                        if groundHeight and distanceToGround >= minHeightFromGround then
                            newPosition = Vector3.new(newPosition.X, groundHeight + 10, newPosition.Z) -- Eleva 10 unidades acima do chÃ£o
                        else
                            newPosition = Vector3.new(newPosition.X, newPosition.Y, newPosition.Z)
                        end

                        -- Move o LocalPlayer para a nova posiÃ§Ã£o
                        localRootPart.CFrame = CFrame.new(newPosition)
                    end
                end
            end

            function NameMelee()
                for i, v in next, game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
                    if v:IsA("Tool") and v.ToolTip == "Melee" then
                        return v.Name
                    end
                end
                for i, v in next, game:GetService("Players").LocalPlayer.Character:GetChildren() do
                    if v:IsA("Tool") and v.ToolTip == "Melee" then
                        return v.Name
                    end
                end

                return false
            end

            function NameSword()
                for i, v in next, game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
                    if v:IsA("Tool") and v.ToolTip == "Sword" then
                        return v.Name
                    end
                end
                for i, v in next, game:GetService("Players").LocalPlayer.Character:GetChildren() do
                    if v:IsA("Tool") and v.ToolTip == "Sword" then
                        return v.Name
                    end
                end
                return false
            end

            function NameGun()
                dick = game.Players.LocalPlayer.Backpack or game.Players.LocalPlayer.Character
                for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v:IsA("Tool") and v.ToolTip == "Gun" then
                        return v.Name
                    end
                end
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v:IsA("Tool") and v.ToolTip == "Gun" then
                        return v.Name
                    end
                end
                return false
            end

            while not NameMelee() do
                task.wait(1)
            end

            ReloadList = function()
                spawn(
                    function()
                        if (NameGun()) then
                            EquipWeapon(NameGun())
                        end
                        task.wait(0.01)
                        if (NameSword()) then
                            EquipWeapon(NameSword())
                        end
                        task.wait(0.01)
                        if (NameMelee()) then
                            EquipWeapon(NameMelee())
                        end
                        task.wait(0.01)
                        if (game:GetService("Players").LocalPlayer.Data.DevilFruit.Value) then
                            EquipWeapon(game:GetService("Players").LocalPlayer.Data.DevilFruit.Value)
                        end
                        task.wait(0.01)
                        local player = game.Players.LocalPlayer
                        local character = player.Character or player.CharacterAdded:Wait()
                        local humanoid = character:WaitForChild("Humanoid")

                        -- Desequipar o item atual
                        humanoid:UnequipTools()
                    end
                )
            end
            ReloadList()
        end

        -- ========================== Save System ===========================
        if 1 then
            -- Global configuration
            local HttpService = game:GetService("HttpService")
            local SaveFolder = "MidnigthPvP Saves"
            local DefaultSaveName = "DefaultSettings"

            _G.SettingTable = _G.SettingTable or {A = 1} -- Initializes the global settings table
            _G.SettingTable2 =
                _G.SettingTable2 or
                {
                    UISize = {550, 380},
                    Esp_Player_SizeText = 12.5,
                    Esp_Player_HeightText = 3,
                    OBS_Transparency = 0.6,
                    UIScale = 435,
                    BorderColorDefault = 0,
                    SelectPlayer_Cam = 40,
                    SelectPlayer_ObservationArea = 0.96,
                    SelectPlayer_Timer = 1,
                    SelectPlayer_Line_Width0 = 1,
                    SelectPlayer_Line_Width1 = 2,
                    ForceImpulse = 1.8,
                    Gear = 1,
                    AbsoluteNoStun = 0,
                    Power_TP_Distance = 250
                } -- Initializes the global settings table

            -- Utility functions for JSON
            local function JsonEncode(data)
                return HttpService:JSONEncode(data)
            end

            local function JsonDecode(data)
                return HttpService:JSONDecode(data)
            end

            local function IsValidJSON(jsonString)
                local success =
                    pcall(
                    function()
                        JsonDecode(jsonString)
                    end
                )
                return success
            end

            -- File management functions
            local function EnsureSaveFolderExists()
                if not isfolder(SaveFolder) then
                    makefolder(SaveFolder)
                end
            end

            local function GetFilePath(name)
                return SaveFolder .. "/" .. name .. ".json"
            end

            local function CheckSetting(name)
                EnsureSaveFolderExists()
                local filePath = GetFilePath(name)
                if not isfile(filePath) then
                    writefile(filePath, JsonEncode(_G.SettingTable))
                    print("[Save System] Saves Configuration file created:", filePath)
                end
            end

            local function CheckSettingTwo(name)
                EnsureSaveFolderExists()
                local filePath = GetFilePath(name)
                if not isfile(filePath) then
                    writefile(filePath, JsonEncode(_G.SettingTable2))
                    print("[Save System] Configuration file created:", filePath)
                end
            end

            local function ReloadSetting(name)
                EnsureSaveFolderExists()
                local filePath = GetFilePath(name)
                if isfile(filePath) and IsValidJSON(readfile(filePath)) then
                    _G.SettingTable = JsonDecode(readfile(filePath))
                    print("[Save System] Settings successfully reloaded:", name)
                else
                    print("[Save System] Invalid or missing settings file. Creating a new one:", name)
                    CheckSetting(name)
                end
            end

            local function ReloadSettingTwo(name)
                EnsureSaveFolderExists()
                local filePath = GetFilePath(name)
                if isfile(filePath) and IsValidJSON(readfile(filePath)) then
                    _G.SettingTable2 = JsonDecode(readfile(filePath))
                    print("[Save System] Settings successfully reloaded:", name)
                else
                    print("[Save System] Invalid or missing settings file. Creating a new one:", name)
                    CheckSettingTwo(name)
                end
            end

            local function UpdateSetting(name)
                EnsureSaveFolderExists()
                local filePath = GetFilePath(name)
                writefile(filePath, JsonEncode(_G.SettingTable))
            end

            -- Automatic settings initialization
            CheckSetting(DefaultSaveName)
            CheckSettingTwo("BloxxyUIConfig")
            ReloadSetting(DefaultSaveName)
            ReloadSettingTwo("BloxxyUIConfig")

            if not IsValidJSON(_G.SettingTable2) then
                _G.SettingTable2 = {
                    UISize = {550, 380},
                    UIScale = 435,
                    IconSize = 40,
                    IconPosition = 0.122,
                    BorderColorDefault = 0,
                    StartMessage = false,
                    BlooxyADM = false
                }
            end
            -- Periodic auto-save
            spawn(
                function()
                    while true do
                        task.wait(1) -- Automatically saves every second
                        UpdateSetting(DefaultSaveName)
                    end
                end
            )

            _G.Gear = _G.SettingTable.Gear or _G.SettingTable2.Gear or 1
            print("[Save System] Save system initialized successfully!")
        end

        -- =========================== MenuSystem =====================

        if 1 then
            local redzlib =
                loadstring(
                game:HttpGet("https://raw.githubusercontent.com/MyMidnightOFC/TheBloxxy/refs/heads/main/REDzHubV4")
            )()

            local Window =
                redzlib:MakeWindow(
                {
                    Title = "MyMidnight Team",
                    SubTitle = "BloxFruits Super Script!",
                    SaveFolder = "Nothing.lua"
                }
            )

            Window:AddMinimizeButton(
                {
                    Button = {
                        Image = "rbxassetid://15298567397"
                    }
                }
            )

            if (_G.SettingTable.AutoMinimize) then
                Window:Minimize()
            end

            Players = Window:MakeTab({"Players", "swords"})
            Secure = Window:MakeTab({"Security", "lock"})
            Teleport = Window:MakeTab({"Teleport", "locate-fixed"})
            Shop = Window:MakeTab({"SuperShop", "shopping-cart"})
            Utilities = Window:MakeTab({"Utilities", "wrench"})
            Script = Window:MakeTab({"Script", "hammer"})
            -- Save = Window:MakeTab({"Savedata", "database"})
            Extra = Window:MakeTab({"Plus / Extra", "plus-circle"})
        -- Play = Window:MakeTab({"PlayMusic", "play-circle"})
        end

        -- ========================== Players-Menu =====================

        if 1 then
            Players:AddSection({"Visual - Players"})

            Players:AddToggle(
                {
                    Name = "Auto Minimize",
                    Default = _G.SettingTable.AutoMinimize or false,
                    Callback = function(Value)
                        _G.SettingTable.AutoMinimize = Value
                    end
                }
            )

            Players:AddToggle(
                {
                    Name = "ESP Players <font color='rgb(250, 50, 250)'>( Visual Pollution )</font>",
                    Description = "See the position of the players.",
                    Default = _G.SettingTable.Esp_Player or false,
                    Callback = function(Value)
                        _G.SettingTable.Esp_Player = Value

                        while _G.SettingTable.Esp_Player do
                            task.wait()
                            UpdateEspPlayer()
                        end
                    end
                }
            )

            Players:AddToggle(
                {
                    Name = "Observation V1 <font color='rgb(50, 250, 50)'>( Recommended )</font>",
                    Description = "See the position of the players.",
                    Default = _G.SettingTable.LigthV1 or false,
                    Callback = function(Value)
                        _G.SettingTable.LigthV1 = Value
                        _G.HighlightV1 = Value

                        if Value then
                            CreateHighlightV1()
                            spawn(
                                function()
                                    while _G.SettingTable.LigthV1 do
                                        task.wait(1)
                                        if (_G.HighlightV1) then
                                            ReloadHighlightV1()
                                        end
                                    end
                                end
                            )
                        else
                            RemoveHighlightV1()
                            _G.Highlight_L = false
                        end
                    end
                }
            )

            Players:AddToggle(
                {
                    Name = "Observation V2 <font color='rgb(230, 230, 50)'>( It depends on the graphics. )</font>",
                    Default = false,
                    Callback = function(Value)
                        _G.highlightEnabled = Value
                        _G.SettingTable.OBSV2 = Value
                        CreateHighlightV2()
                    end
                }
            )

            V2 =
                Players:AddToggle(
                {
                    Name = "Skill Aimbot XD <font color='rgb(30, 240, 30)'>( Majority Attacks )</font> <font color='rgb(250, 50, 250)'>( With V2 )</font>",
                    Description = "Directs the attack towards the front of the selected player.",
                    Default = _G.SettingTable.AimbotV2 or false,
                    Callback = function(Value)
                        _G.SettingTable.AimbotV2 = Value
                        if _G.SettingTable.AimbotV2 then
                            pcall(
                                function()
                                    V1:Set(false)
                                end
                            )
                        end
                        spawn(
                            function()
                                while _G.SettingTable.AimbotV2 do
                                    task.wait()
                                    if
                                        (_G.SPLY) and (_G.SPLY.Character) and
                                            (_G.SPLY.Character:FindFirstChild("Humanoid"))
                                     then
                                        _G.SelectedPlayer = _G.SPLY
                                        ChangeTargetPlayer(_G.SPLY.Name)
                                    else
                                        _G.SelectedPlayer = game.Players.LocalPlayer
                                    end
                                end
                            end
                        )
                        if Value then
                            _G.OJO_VS["AimbotV2"] = true
                        else
                            _G.OJO_VS["AimbotV2"] = nil
                        end

                        if Value and not _G.VPO then
                            OJO()
                        end

                        if Value then
                            _G.OJO_SV["AimbotV2"] = true
                        else
                            _G.OJO_SV["AimbotV2"] = nil
                        end

                        if Value and not _G.IsScriptRunning then
                            SuperView()
                        end
                    end
                }
            )

            V1 =
                Players:AddToggle(
                {
                    Name = "Skill Aimbot <font color='rgb(30, 240, 30)'>( Majority Attacks )</font> <font color='rgb(250, 30, 30)'>( NO V2 )</font>",
                    Description = "When active it moves the attacks to the target automatically.",
                    Default = _G.SettingTable.AimbotV1 or false,
                    Callback = function(Value)
                        _G.SettingTable.AimbotV1 = Value
                        if _G.SettingTable.AimbotV2 then
                            pcall(
                                function()
                                    V2:Set(false)
                                end
                            )
                        end
                        spawn(
                            function()
                                while _G.SettingTable.AimbotV1 do
                                    task.wait()
                                    if Value and _G.SPLY then
                                        _G.SP = _G.SPLY
                                    else
                                        _G.SP = nil
                                    end
                                end
                                _G.SP = nil
                            end
                        )

                        if Value then
                            _G.OJO_VS["AimbotV1"] = true
                        else
                            _G.OJO_VS["AimbotV1"] = nil
                        end

                        if Value and not _G.VPO then
                            OJO()
                        end
                    end
                }
            )

            Players:AddSection({"Script - Players"})

            PlayerTimer =
                Players:AddButton(
                {
                    Name = "Loading The Player List: <font color='rgb(50, 250, 50)'>(10 Seconds)</font>",
                    Callback = function()
                    end
                }
            )
            DropdownPlayers =
                Players:AddDropdown(
                {
                    Name = "Select Players",
                    Description = "Select your target to continue...",
                    Options = {""},
                    Default = "...",
                    Callback = function(Value)
                        if not (Value == "Nothing") then
                            _G.SelectPly = Value
                        else
                            _G.SelectPly = nil
                        end
                    end
                }
            )

            ReloadPlayersList()
            local ReloadInterval = 10
            local Timer = ReloadInterval + 1

            spawn(
                function()
                    function UpdateListY()
                        Timer = Timer - 1

                        if Timer <= ReloadInterval then
                            PlayerTimer:Set(
                                string.format(
                                    "Loading The Player List: <font color='rgb(50, 250, 50)'>(%d Seconds)</font>",
                                    Timer
                                )
                            )

                            if Timer < 1 then
                                Timer = ReloadInterval + 3
                                PlayerTimer:Set(
                                    "Loading The Player List: <font color='rgb(230, 230, 50)'>(Reloading...)</font>"
                                )
                                task.wait(0.5)
                                ReloadPlayersList()
                            end
                        end
                    end

                    while true do
                        task.wait(0.85)
                        UpdateListY()
                    end
                end
            )

            Players:AddToggle(
                {
                    Name = "Spectate",
                    Description = "Move the camera like the player.",
                    Default = false,
                    Callback = function(Value)
                        if _G.SelectPly then
                            SpectatePlys = Value
                            local plr1 = game:GetService("Players").LocalPlayer.Character.Humanoid
                            local plr2 = game:GetService("Players"):FindFirstChild(_G.SelectPly)
                            repeat
                                task.wait(0.5)
                                pcall(
                                    function()
                                        game:GetService("Workspace").Camera.CameraSubject =
                                            game:GetService("Players"):FindFirstChild(_G.SelectPly).Character.Humanoid
                                    end
                                )
                            until SpectatePlys == false
                            game:GetService("Workspace").Camera.CameraSubject =
                                game:GetService("Players").LocalPlayer.Character.Humanoid
                        else
                            game:GetService("Workspace").Camera.CameraSubject =
                                game:GetService("Players").LocalPlayer.Character.Humanoid
                        end
                    end
                }
            )

            Players:AddToggle(
                {
                    Name = "Teleport <font color='rgb(55, 250, 30)'>( SAFE )</font>",
                    Default = false,
                    Callback = function(Value)
                        if _G.SelectPly then
                            _G.TeleportPly = Value
                            pcall(
                                function()
                                    repeat
                                        topos(
                                            game:GetService("Players")[_G.SelectPly].Character.HumanoidRootPart.CFrame
                                        )
                                        task.wait()
                                    until _G.TeleportPly == false
                                    StopTween(_G.TeleportPly)
                                end
                            )
                        end
                    end
                }
            )

            Players:AddToggle(
                {
                    Name = "Teleport <font color='rgb(255, 50, 30)'>( BYPASS )</font>",
                    Default = false,
                    Callback = function(Value)
                        local RunService = game:GetService("RunService")

                        if _G.SelectPly then
                            _G.TeleportPly2 = Value

                            local function teleportToPlayer()
                                local target = game:GetService("Players")[_G.SelectPly]
                                if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                                    local localPlayer = game.Players.LocalPlayer
                                    if
                                        localPlayer.Character and
                                            localPlayer.Character:FindFirstChild("HumanoidRootPart")
                                     then
                                        localPlayer.Character.HumanoidRootPart.CFrame =
                                            target.Character.HumanoidRootPart.CFrame
                                    end
                                else
                                    _G.TeleportPly2 = false -- Para o loop se o alvo nÃ£o for vÃ¡lido
                                end
                            end

                            local connection

                            function TPX1()
                                if _G.TeleportPly2 then
                                    teleportToPlayer()
                                else
                                    connection:Disconnect() -- Desconecta o evento quando terminar
                                end
                            end

                            connection =
                                RunService.RenderStepped:Connect(
                                function()
                                    TPX1()
                                end
                            )
                        end
                    end
                }
            )
        end

        --================================== Secured-Menu ==============================
        if true then
            Secure:AddSlider(
                {
                    Name = "HP - SafeMode <font color='rgb(50, 250, 60)'>( >3500 )</font>",
                    Description = "When your life is less than this number, safe mode will be activated!!",
                    MinValue = 100,
                    MaxValue = 13000,
                    Default = _G.SettingTable.HP_SafeMode or 4500,
                    Increase = 100,
                    Callback = function(Value)
                        _G.SettingTable.HP_SafeMode = Value
                    end
                }
            )

            spawn(
                function()
                    pcall(
                        function()
                            local RunService = game:GetService("RunService")

                            function SafeModeX()
                                if _G.Safe_Mode_Value then
                                    pcall(
                                        function()
                                            local player = game.Players.LocalPlayer
                                            local character = player and player.Character
                                            if _G.Safe_Mode_Value then
                                                character.HumanoidRootPart.CFrame =
                                                    character.HumanoidRootPart.CFrame + Vector3.new(0, 1000, 0)
                                            end
                                        end
                                    )
                                end
                            end

                            RunService.RenderStepped:Connect(
                                function()
                                    SafeModeX()
                                end
                            )
                        end
                    )
                end
            )

            Secure:AddToggle(
                {
                    Name = "SafeMode <font color='rgb(50, 250, 60)'>( Recommended )</font>",
                    Default = _G.SettingTable.SafeMode or false,
                    Callback = function(Value)
                        _G.SettingTable.SafeMode = Value
                        _G.GlobalSafeMode = Value

                        if (Value) then
                            spawn(
                                function()
                                    function GlobalSafeModeY()
                                        if _G.GlobalSafeMode and not _G.PlayerDeth then
                                            local player = game.Players.LocalPlayer
                                            local character = player and player.Character
                                            if character and character:FindFirstChild("Humanoid") then
                                                local humanoid = character.Humanoid
                                                local health = humanoid.Health

                                                if (health > 10) and (health - _G.SettingTable.HP_SafeMode) < 0 then
                                                    _G.Safe_Mode_Value = true
                                                    game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(
                                                        "Ken",
                                                        true
                                                    )
                                                else
                                                    _G.Safe_Mode_Value = false
                                                end
                                            end
                                        elseif _G.PlayerDeth then
                                            _G.Safe_Mode_Value = false
                                        end
                                    end

                                    while _G.GlobalSafeMode do
                                        task.wait(0.001)
                                        GlobalSafeModeY()
                                    end
                                end
                            )
                        else
                            _G.Safe_Mode_Value = false
                        end
                    end
                }
            )

            Secure:AddSection({"Teleport"})

            if (SEA == "3") then
                Secure:AddButton(
                    {
                        Name = "Teleport To Safe! (<font color='rgb(250, 250, 60)'>TempleOfTime</font>)",
                        Description = "( IF YOU ARE PVP AGAINST ANOTHER SCRIPT )",
                        Callback = function()
                            if _G.Disabled then
                                return
                            end

                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                "requestEntrance",
                                Vector3.new(28286, 14897, 103)
                            )
                            task.wait(0.1)
                            local character = game:GetService("Players").LocalPlayer.Character
                            character.HumanoidRootPart.CFrame =
                                character.HumanoidRootPart.CFrame + Vector3.new(275, 100, -150)
                        end
                    }
                )

                Secure:AddButton(
                    {
                        Name = "Teleport To Temple of Time",
                        Callback = function()
                            if _G.Disabled then
                                return
                            end

                            for i = 1, 3 do
                                task.wait()
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                    "requestEntrance",
                                    Vector3.new(28286, 14897, 103)
                                )
                            end
                        end
                    }
                )

                Secure:AddButton(
                    {
                        Name = "Teleport To Mansion",
                        Callback = function()
                            if _G.Disabled then
                                return
                            end

                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                "requestEntrance",
                                Vector3.new(-12471.169921875, 374.94024658203, -7551.677734375)
                            )
                        end
                    }
                )

                Secure:AddButton(
                    {
                        Name = "Castle on the Sea",
                        Callback = function()
                            if _G.Disabled then
                                return
                            end

                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                "requestEntrance",
                                Vector3.new(-5092, 315, -3130)
                            )
                        end
                    }
                )
            end

            if (SEA == "2") then
                Secure:AddButton(
                    {
                        Name = "Teleport To Flamingo Mansion",
                        Callback = function()
                            if _G.Disabled then
                                return
                            end

                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                "requestEntrance",
                                Vector3.new(-317, 331, 597)
                            )
                        end
                    }
                )

                Secure:AddButton(
                    {
                        Name = "Teleport To Flamingo Room",
                        Callback = function()
                            if _G.Disabled then
                                return
                            end

                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                "requestEntrance",
                                Vector3.new(2283, 15, 867)
                            )
                        end
                    }
                )

                Secure:AddButton(
                    {
                        Name = "Teleport To Cursed Ship",
                        Callback = function()
                            if _G.Disabled then
                                return
                            end

                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                "requestEntrance",
                                Vector3.new(923, 125, 32853)
                            )
                        end
                    }
                )

                Secure:AddButton(
                    {
                        Name = "Teleport To Zombie Island",
                        Callback = function()
                            if _G.Disabled then
                                return
                            end

                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                "requestEntrance",
                                Vector3.new(-6509, 83, -133)
                            )
                        end
                    }
                )
            end

            if (SEA == "1") then
                Secure:AddButton(
                    {
                        Name = "Teleport To Sky Island 2",
                        Callback = function()
                            if _G.Disabled then
                                return
                            end

                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                "requestEntrance",
                                Vector3.new(-7895, 5547, -380)
                            )
                        end
                    }
                )

                Secure:AddButton(
                    {
                        Name = "Teleport To Under Water Island",
                        Callback = function()
                            if _G.Disabled then
                                return
                            end

                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                "requestEntrance",
                                Vector3.new(61164, 5, 1820)
                            )
                        end
                    }
                )
            end
        end

        --================================== Teleport-Menu ==============================
        if true then
            Teleport:AddSection({"Teleport"})

            _G.SelectIsland = ""
            local IslandsList = {}

            -- Definir lista de ilhas por SEA
            if SEA == "1" then
                IslandsList = {
                    "WindMill",
                    "Marine",
                    "Middle Town",
                    "Jungle",
                    "Pirate Village",
                    "Desert",
                    "Snow Island",
                    "MarineFord",
                    "Colosseum",
                    "Sky Island 1",
                    "Sky Island 2",
                    "Sky Island 3",
                    "Prison",
                    "Magma Village",
                    "Under Water Island",
                    "Fountain City"
                }
            elseif SEA == "2" then
                IslandsList = {
                    "The Cafe",
                    "Frist Spot",
                    "Dark Area",
                    "Flamingo Mansion",
                    "Flamingo Room",
                    "Green Zone",
                    "Zombie Island",
                    "Two Snow Mountain",
                    "Punk Hazard",
                    "Cursed Ship",
                    "Ice Castle",
                    "Forgotten Island",
                    "Ussop Island"
                }
            elseif SEA == "3" then
                IslandsList = {
                    "Mansion",
                    "Port Town",
                    "Great Tree",
                    "Castle On The Sea",
                    "Hydra Island",
                    "Floating Turtle",
                    "Haunted Castle",
                    "Ice Cream Island",
                    "Peanut Island",
                    "Cake Island",
                    "Candy Cane Island",
                    "Tiki Outpost"
                }
            end

            -- Dropdown de seleÃ§Ã£o de ilhas
            local LocationSelectDropdown =
                Teleport:AddDropdown(
                {
                    Name = "Select a Location",
                    Options = IslandsList,
                    Description = "(Average speed of 370 KM/h.)",
                    Default = {"..."},
                    MultSelect = false,
                    Callback = function(Value)
                        _G.SelectIsland = Value
                    end
                }
            )

            function TeleportToIsland(Island)
                teleportCoords = {}

                -- Definir as coordenadas de teleporte para o SEA 1
                if SEA == "1" then
                    -- Definir as coordenadas de teleporte para o SEA 2
                    teleportCoords = {
                        ["WindMill"] = CFrame.new(889, 17, 1434),
                        ["Marine"] = CFrame.new(-2728, 25, 2056),
                        ["Middle Town"] = CFrame.new(-688, 15, 1585),
                        ["Desert"] = CFrame.new(4849, 30, -1175),
                        ["Snow Island"] = CFrame.new(1298, 87, -1344),
                        ["Pirate Village"] = CFrame.new(-1173, 45, 3837),
                        ["Jungle"] = CFrame.new(-1614, 37, 146),
                        ["Prison"] = CFrame.new(4870, 6, 736),
                        ["MarineFord"] = CFrame.new(-4810, 21, 4359),
                        ["Colosseum"] = CFrame.new(-1535, 7, -3014),
                        ["Sky Island 1"] = CFrame.new(-4814, 718, -2551),
                        ["Sky Island 2"] = CFrame.new(-4652, 873, -1754),
                        ["Sky Island 3"] = CFrame.new(-7895, 5547, -380),
                        ["Magma Village"] = CFrame.new(-5290, 9, 8349),
                        ["Under Water Island"] = CFrame.new(61163.8515625, 11.6796875, 1819.7841796875),
                        ["Fountain City"] = CFrame.new(5048, 3.74, 4164)
                    }
                elseif SEA == "2" then
                    -- Definir as coordenadas de teleporte para o SEA 3
                    teleportCoords = {
                        ["The Cafe"] = CFrame.new(-382, 73, 290),
                        ["Frist Spot"] = CFrame.new(-11, 29, 2771),
                        ["Dark Area"] = CFrame.new(3494, 13, -3259),
                        ["Flamingo Mansion"] = CFrame.new(-317, 331, 597),
                        ["Flamingo Room"] = CFrame.new(2285, 15, 905),
                        ["Green Zone"] = CFrame.new(-2258, 73, -2696),
                        ["Zombie Island"] = CFrame.new(-5552, 194, -776),
                        ["Two Snow Mountain"] = CFrame.new(752, 408, -5277),
                        ["Punk Hazard"] = CFrame.new(-5897, 18, -5096),
                        ["Cursed Ship"] = CFrame.new(923.2125, 125.0852, 32852.8320),
                        ["Ice Castle"] = CFrame.new(5505, 40, -6178),
                        ["Forgotten Island"] = CFrame.new(-3050, 240, -10178),
                        ["Ussop Island"] = CFrame.new(4816, 8, 2863)
                    }
                elseif SEA == "3" then
                    teleportCoords = {
                        ["Mansion"] = CFrame.new(-12471.169921875, 374.94024658203, -7551.677734375),
                        ["Port Town"] = CFrame.new(-334, 7, 5300),
                        ["Castle On The Sea"] = CFrame.new(-5073, 315, -3153),
                        ["Hydra Island"] = CFrame.new(5749, 610, -254),
                        ["Great Tree"] = CFrame.new(2681, 1682, -7190),
                        ["Floating Turtle"] = CFrame.new(-12528, 332, -8658),
                        ["Haunted Castle"] = CFrame.new(-9517, 142, 5528),
                        ["Ice Cream Island"] = CFrame.new(-902, 79, -10988),
                        ["Peanut Island"] = CFrame.new(-2062, 50, -10232),
                        ["Cake Island"] = CFrame.new(-1897, 14, -11576),
                        ["Candy Cane Island"] = CFrame.new(-1038, 10, -14076),
                        ["Tiki Outpost"] = CFrame.new(-16224, 9, 439)
                    }
                end

                if SEA == "1" and teleportCoords[Island] then
                    topos(teleportCoords[Island])
                elseif SEA == "2" then
                    -- Adicionar teleporte para Sea 2
                    if Island == "The Cafe" then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                            "requestEntrance",
                            Vector3.new(-317, 331, 597)
                        )
                        task.wait(0.1)
                        topos(CFrame.new(-382, 73, 290))
                        return
                    end

                    if Island == "Cursed Ship" then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                            "requestEntrance",
                            Vector3.new(923, 125, 32853)
                        )
                        _G.TeleportToIslandToggle:Set(false)
                        return
                    end

                    if Island == "Flamingo Mansion" then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                            "requestEntrance",
                            Vector3.new(-317, 331, 597)
                        )
                        _G.TeleportToIslandToggle:Set(false)
                        return
                    end
                elseif SEA == "3" then
                -- Adicionar teleporte para Sea 3
                end

                -- Executa o teleporte
                if teleportCoords[Island] then
                    topos(teleportCoords[Island])
                    _G.SettingTable.NoClip = true
                else
                    warn("LocalizaÃ§Ã£o invÃ¡lida ou nÃ£o encontrada.")
                end
            end

            -- Toggle para teletransportar
            _G.TeleportToIslandToggle =
                Teleport:AddToggle(
                {
                    Name = "Teleport Now!!",
                    Default = false,
                    Callback = function(Value)
                        _G.TeleportIsland = Value
                        if Value and _G.SelectIsland ~= "" then
                            repeat
                                task.wait()
                                TeleportToIsland(_G.SelectIsland)
                            until not _G.TeleportIsland
                            StopTween(_G.TeleportIsland)
                            _G.SettingTable.NoClip = false
                        end
                    end
                }
            )
            Teleport:AddSection(
                {
                    Name = "Universe of the seas"
                }
            )

            Teleport:AddButton(
                {
                    Name = "Teleport To Old World!",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
                    end
                }
            )

            Teleport:AddButton(
                {
                    Name = "Teleport To Second Sea!",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
                    end
                }
            )

            Teleport:AddButton(
                {
                    Name = "Teleport To Third Sea!",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
                    end
                }
            )

            Teleport:AddButton(
                {
                    Name = "Rejoin Server!!",
                    Callback = function()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(
                            game.PlaceId,
                            game.JobId,
                            game.Players.LocalPlayer
                        )
                    end
                }
            )

            Teleport:AddButton(
                {
                    Name = "Server HOP",
                    Callback = function()
                        Hop()
                    end
                }
            )
        end

        --================================== Shop-Menu =====================
        if true then
            Shop:AddSection({"Fighting Style - V1"})

            Shop:AddButton(
                {
                    Name = "Buy Black Leg",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy Electro",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectro")
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy Fishman Karate",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate")
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy Dragon Claw",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                            "BlackbeardReward",
                            "DragonClaw",
                            "1"
                        )
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                            "BlackbeardReward",
                            "DragonClaw",
                            "2"
                        )
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy Superhuman",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman")
                    end
                }
            )

            local Section =
                Shop:AddSection(
                {
                    Name = "V2 Styles"
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy Death Step",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep")
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy Sharkman Karate",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate", true)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate")
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy Electric Claw",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectricClaw")
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy Dragon Talon",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDragonTalon")
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy GodHuman",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyGodhuman")
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy BuySanguineArt",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySanguineArt")
                    end
                }
            )
            Shop:AddSection(
                {
                    Name = "Other"
                }
            )

            Shop:AddButton(
                {
                    Name = "Reset Stats!",
                    Callback = function()
                        FireRemote("BlackbeardReward", "Refund", "1")
                        FireRemote("BlackbeardReward", "Refund", "2")
                    end
                }
            )

            Shop:AddSection(
                {
                    Name = "Races"
                }
            )

            Shop:AddButton(
                {
                    Name = "Race Rerol!",
                    Callback = function()
                        FireRemote("BlackbeardReward", "Reroll", "1")
                        FireRemote("BlackbeardReward", "Reroll", "2")
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy Ghoul Race!",
                    Callback = function()
                        local args = {
                            [1] = "Ectoplasm",
                            [2] = "BuyCheck",
                            [3] = 4
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                        local args = {
                            [1] = "Ectoplasm",
                            [2] = "Change",
                            [3] = 4
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    end
                }
            )

            Shop:AddButton(
                {
                    Name = "Buy Cyborg Race!",
                    Callback = function()
                        local args = {
                            [1] = "CyborgTrainer",
                            [2] = "Buy"
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    end
                }
            )
        end

        --================================== Script-Menu ==============================
        if true then
            Script:AddSection(
                {
                    Name = "Main"
                }
            )

            Script:AddSlider(
                {
                    Name = "Speed - Super Angel",
                    MinValue = 50,
                    MaxValue = 250,
                    Default = _G.SettingTable.SafeMode_Speed or 90,
                    Increase = 1,
                    Callback = function(Value)
                        _G.SettingTable.SafeMode_Speed = (Value)
                    end
                }
            )

            function JumpForceFunction(J)
                _G.Gear = _G.Gear or 0

                -- FunÃ§Ã£o para forÃ§ar o JumpPower do LocalPlayer
                local function forceJumpPower(humanoid)
                    humanoid.JumpPower = _G.jumpPower
                    humanoid:GetPropertyChangedSignal("JumpPower"):Connect(
                        function()
                            if humanoid.JumpPower ~= _G.jumpPower then
                                humanoid.JumpPower = _G.jumpPower
                            end
                        end
                    )
                end

                -- ReferÃªncia ao jogador local
                local player = game.Players.LocalPlayer

                -- Caso o personagem do jogador local jÃ¡ esteja carregado
                if player.Character then
                    local humanoid = player.Character:FindFirstChild("Humanoid")
                    if humanoid then
                        forceJumpPower(humanoid)
                    end
                end

                -- FunÃ§Ã£o para atualizar o JumpPower do LocalPlayer
                local function updateJumpPower()
                    _G.Gear = _G.Gear or 1
                    if player.Character then
                        local humanoid = player.Character:FindFirstChild("Humanoid")
                        if humanoid then
                            H = 1
                            if _G.Gear < 4 then
                                H = 2
                            end

                            if _G.Gear > 4 then
                                H = 1.2
                            end

                            if _G.JumpPowerPower and _G.SettingTable.Jump then
                                YY = (_G.JumpPowerPower / H) + _G.SettingTable.Jump
                            else
                                YY = _G.JumpPowerPower or _G.SettingTable.Jump or 50
                            end

                            humanoid.JumpPower = math.min(YY, 300)
                        end
                    end
                end

                -- Atualizar o JumpPower do LocalPlayer constantemente
                game:GetService("RunService").Stepped:Connect(
                    function()
                        updateJumpPower()
                    end
                )
            end

            Script:AddSlider(
                {
                    Name = "Super Jump - Height ( <font color='rgb(50, 250, 30)'>Recomended</font> )",
                    MinValue = 40,
                    MaxValue = 200,
                    Default = _G.SettingTable.Jump or 60,
                    Increase = 2,
                    Callback = function(Value)
                        _G.SettingTable.Jump = (Value)
                        _G.jumpPower = Value
                    end
                }
            )

            JumpForceFunction()
            if not (_G.Gear < 6) then
                Script:AddToggle(
                    {
                        Name = "King-King <font color='rgb(50, 250, 30)'>( FastAttack, Power )</font>",
                        Default = _G.SettingTable.KingKing or false,
                        Callback = function(Value)
                            _G.SettingTable.KingKing = Value
                            if Value then
                                FastAttackOn()
                            else
                                FastAttackOff()
                            end
                        end
                    }
                )

                Script:AddToggle(
                    {
                        Name = "Invisible Toll <font color='rgb(50, 250, 30)'>( Power )</font>",
                        Default = _G.SettingTable.Invisible or false,
                        Callback = function(Value)
                            _G.SettingTable.Invisible = Value
                            if Value then
                            else
                            end
                        end
                    }
                )
            end
            Script:AddToggle(
                {
                    Name = "Infinite Jumps",
                    Default = _G.SettingTable.Geppo or false,
                    Callback = function(Value)
                        _G.SettingTable.Geppo = (Value)

                        function onJumpRequest()
                            game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(
                                "Jumping"
                            )
                        end

                        if Value then
                            connection = game:GetService("UserInputService").JumpRequest:connect(onJumpRequest)
                        end

                        if not Value then
                            pcall(
                                function()
                                    connection:Disconnect()
                                end
                            )
                        end
                    end
                }
            )

            Script:AddToggle(
                {
                    Name = "Super Speed-Angel <font color='rgb(50, 250, 30)'>( ++ Speed )</font>",
                    Description = "Allows you to move in any direction, even in the air.",
                    Default = _G.SettingTable.Agility or false,
                    Callback = function(Value)
                        _G.SettingTable.Agility = (Value)
                        if (Value) then
                            -- Loop contÃ­nuo para controlar a movimentaÃ§Ã£o do jogador baseado no analÃ³gico
                            spawn(
                                function()
                                    _G.BoostY = false

                                    local RunService = game:GetService("RunService")
                                    function BoostAngelX()
                                        pcall(
                                            function()
                                                local player = game.Players.LocalPlayer
                                                local character = player.Character
                                                if character then
                                                    local humanoidRootPart =
                                                        character:FindFirstChild("HumanoidRootPart")
                                                    local humanoid = character:FindFirstChildOfClass("Humanoid")

                                                    if humanoidRootPart and humanoid then
                                                        local moveDirection = humanoid.MoveDirection

                                                        if (moveDirection.Magnitude > 0 and not _G.MinkV7) then
                                                            if _G.VelcityPower and _G.SettingTable.SafeMode_Speed then
                                                                XX =
                                                                    (_G.VelcityPower / 2) +
                                                                    _G.SettingTable.SafeMode_Speed
                                                            else
                                                                XX = _G.VelcityPower or _G.SettingTable.SafeMode_Speed
                                                            end

                                                            local newVelocity =
                                                                Vector3.new(
                                                                moveDirection.X * XX,
                                                                humanoidRootPart.Velocity.Y,
                                                                moveDirection.Z * XX
                                                            )

                                                            humanoidRootPart.Velocity = newVelocity
                                                        end
                                                    end
                                                end
                                            end
                                        )
                                    end
                                    SkyConnection =
                                        RunService.RenderStepped:Connect(
                                        function()
                                            BoostAngelX()
                                        end
                                    )

                                    while _G.SettingTable.Agility do
                                        task.wait()
                                    end
                                    SkyConnection:Disconnect()
                                end
                            )
                        end
                    end
                }
            )

            Script:AddToggle(
                {
                    Name = "Walk On Water",
                    Default = _G.SettingTable.WalkWater or false,
                    Description = "Prevents the user from touching the water and taking damage!!",
                    Callback = function(Value)
                        _G.SettingTable.WalkWater = Value
                        task.spawn(
                            function()
                                local Map = workspace:WaitForChild("Map", 9e9)

                                while _G.SettingTable.WalkWater do
                                    task.wait(0.1)
                                    Map:WaitForChild("WaterBase-Plane", 9e9).Size = Vector3.new(1000, 113, 1000)
                                end
                                Map:WaitForChild("WaterBase-Plane", 9e9).Size = Vector3.new(1000, 80, 1000)
                            end
                        )
                    end
                }
            )

            Script:AddToggle(
                {
                    Name = "NoStun ( <font color='rgb(30, 250, 30)'>Recommended</font> )",
                    Description = "The User can always move freely, but it can interfere when using combos.",
                    Default = _G.SettingTable.Stun or false,
                    Callback = function(Value)
                        _G.SettingTable.Stun = Value

                        spawn(
                            function()
                                local RunService = game:GetService("RunService")
                                function NoStunX()
                                    local player = game.Players.LocalPlayer
                                    player.Character.Stun.Value = 0
                                    player.Character.Humanoid.Sit = false
                                    player.Character.Busy.Value = false
                                    IsHundredNoStunVar2 = true

                                    local player = game.Players.LocalPlayer
                                    local character = player.Character
                                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

                                    bodyVelocity = humanoidRootPart:FindFirstChild("BodyVelocity")
                                    if bodyVelocity then
                                        if UsesSkills(NameMelee(), "Z") then
                                        else
                                            bodyVelocity.P = 0
                                            bodyVelocity.MaxForce = Vector3.new(0, 0, 0)
                                            if _G.SettingTable2.AbsoluteNoStun > 0 or _G.NoStunPower then
                                                bodyVelocity:Destroy()
                                            end
                                        end
                                    end
                                end
                                if _G.SettingTable2.AbsoluteNoStun > 1 then
                                    local Player = game.Players.LocalPlayer
                                    local Character = Player.Character or Player.CharacterAdded:Wait()
                                    local humanoidRootPart = Character:WaitForChild("HumanoidRootPart")

                                    humanoidRootPart.ChildAdded:Connect(
                                        function(child)
                                            if
                                                child:IsA("BodyVelocity") and _G.SettingTable.Stun and
                                                    IsHundredNoStunVar2
                                             then
                                                child:Destroy() -- DestrÃ³i imediatamente o BodyVelocity se for recriado
                                            end
                                        end
                                    )
                                end
                                NoStunConnection =
                                    RunService.RenderStepped:Connect(
                                    function()
                                        NoStunX()
                                    end
                                )

                                while _G.SettingTable.Stun do
                                    task.wait()
                                end

                                NoStunConnection:Disconnect()
                            end
                        )
                    end
                }
            )

            Script:AddToggle(
                {
                    Name = "NoClip!!",
                    Default = false,
                    Callback = function(Value)
                        _G.SettingTable.NoClip = Value
                    end
                }
            )

            Script:AddSection(
                {
                    Name = "Other"
                }
            )

            Script:AddToggle(
                {
                    Name = "ESP Islands <font color='rgb(250, 50, 250)'>( Good Navigation )</font>",
                    Description = "Displays all islands present in the game.",
                    Default = false,
                    Callback = function(Value)
                        IslandESP = Value
                        while IslandESP do
                            task.wait()
                            UpdateIslandESP()
                        end
                    end
                }
            )

            Script:AddToggle(
                {
                    Name = "ESP Fruits <font color='rgb(250, 50, 250)'>( Very useful )</font>",
                    Default = _G.SettingTable.Fruits or false,
                    Callback = function(Value)
                        DevilFruitESP = Value
                        _G.SettingTable.Fruits = Value
                        while DevilFruitESP do
                            task.wait(0.1)
                            UpdateBfEsp()
                        end
                    end
                }
            )

            Script:AddToggle(
                {
                    Name = "Super LiteMode ( <font color='rgb(50, 250, 60)'>+FPS</font> )",
                    Default = _G.SettingTable.FPS or false,
                    Callback = function(Value)
                        _G.SettingTable.FPS = Value
                        if Value then
                            pcall(
                                function()
                                    local g = game
                                    local w = g.Workspace
                                    local l = g.Lighting
                                    local t = w.Terrain

                                    -- ConfiguraÃ§Ãµes do terreno e iluminaÃ§Ã£o
                                    t.WaterWaveSize = 0
                                    t.WaterWaveSpeed = 0
                                    t.WaterReflectance = 0
                                    t.WaterTransparency = 0
                                    l.GlobalShadows = false
                                    l.FogEnd = 9e9
                                    l.Brightness = 0
                                    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
                                    wait(0.05)

                                    -- OtimizaÃ§Ãµes para performance
                                    for _, v in pairs(g:GetDescendants()) do
                                        if
                                            v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("CornerWedgePart") or
                                                v:IsA("TrussPart") or
                                                v:IsA("MeshPart")
                                         then
                                            v.Material = Enum.Material.Plastic
                                            v.Reflectance = 0
                                            v.CastShadow = false
                                        elseif v:IsA("Decal") or v:IsA("Texture") then
                                            v.Transparency = 0
                                        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                                            v.Lifetime = NumberRange.new(0, 0)
                                            v.Transparency = NumberSequence.new(0)
                                        end
                                    end

                                    -- Desativando efeitos visuais no Lighting
                                    for _, e in pairs(l:GetChildren()) do
                                        if
                                            e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or
                                                e:IsA("ColorCorrectionEffect") or
                                                e:IsA("BloomEffect") or
                                                e:IsA("DepthOfFieldEffect")
                                         then
                                            e.Enabled = false
                                        end
                                    end

                                    -- Removendo elementos de Ã¡gua na cÃ¢mera (se existirem)
                                    for _, v in pairs(w.Camera:GetDescendants()) do
                                        if v.Name == "Water" then
                                            v.Transparency = 1
                                            v.Material = Enum.Material.Plastic
                                        end
                                    end
                                end
                            )
                        end
                    end
                }
            )

            Script:AddToggle(
                {
                    Name = "Auto Remove Damage V2!! ( <font color='rgb(60, 250, 60)'>Fixed, Improved</font> )",
                    Default = _G.SettingTable.Dam or false,
                    Callback = function(Value)
                        _G.SettingTable.Dam = Value
                        game:GetService("ReplicatedStorage").Assets.GUI.DamageCounter.Enabled = not (Value)
                    end
                }
            )

            Script:AddToggle(
                {
                    Name = "Auto Remove Fog!",
                    Default = _G.SettingTable.Fog or false,
                    Callback = function(Value)
                        _G.SettingTable.Fog = (Value)

                        pcall(
                            function()
                                local lighting = game.Lighting
                                lighting.FogEnd = 100000
                                for _, v in pairs(lighting:GetDescendants()) do
                                    if v:IsA("Atmosphere") then
                                        v:Destroy()
                                    end
                                end
                            end
                        )
                    end
                }
            )

            Script:AddSection(
                {
                    Name = "More"
                }
            )

            Script:AddButton(
                {
                    Name = "Join Pirates Team",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam", "Pirates")
                    end
                }
            )

            Script:AddButton(
                {
                    Name = "Join Marine Team",
                    Callback = function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam", "Marines")
                    end
                }
            )

            Script:AddButton(
                {
                    Name = "Rejoin Server!!",
                    Callback = function()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(
                            game.PlaceId,
                            game.JobId,
                            game.Players.LocalPlayer
                        )
                    end
                }
            )
        end

        --================================== Utilities-Menu ==============================
        if true then
            Utilities:AddSection({"Super Button ( Mobile )"})

            function RemoveToggleButton()
                if toggleButton then
                    toggleButton:Destroy()
                    toggleButton = false
                end
            end

            function AddToggleButton()
                if not toggleButton then
                    toggleButton = Instance.new("TextButton")

                    toggleButton.Text = "Blox Tools"
                    toggleButton.Size = UDim2.new(0, 120, 0, 55) -- Tamanho maior e mais retangular
                    toggleButton.Position = UDim2.new(1, -125, 0, 100) -- Posicionamento mais visÃ­vel no canto superior direito
                    toggleButton.AnchorPoint = Vector2.new(1, 0)
                    toggleButton.BackgroundTransparency = 0.25 -- Leve transparÃªncia para um visual mais moderno
                    toggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 48) -- Cor de fundo mais escura para dar um estilo flat
                    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- Texto branco para contraste
                    toggleButton.TextSize = 18 -- Tamanho do texto maior para melhor visibilidade
                    toggleButton.Font = Enum.Font.GothamBold -- Fonte Gotham para um ar mais clean e moderno
                    toggleButton.BorderSizePixel = 0 -- Sem borda para um visual flat

                    local uiCorner = Instance.new("UICorner")
                    uiCorner.CornerRadius = UDim.new(0.1, 0) -- Bordas levemente arredondadas
                    uiCorner.Parent = toggleButton

                    local uiStroke = Instance.new("UIStroke")
                    uiStroke.Thickness = 1.5 -- Espessura fina para manter o visual elegante
                    uiStroke.Color = Color3.fromRGB(80, 80, 80) -- Borda em tom cinza escuro
                    uiStroke.Transparency = 0.35 -- Borda semi-transparente para suavidade
                    uiStroke.Parent = toggleButton

                    local lastTouchTime = 0
                    local touchCount = 0
                    local touchDelay = 0.2

                    toggleButton.MouseEnter:Connect(
                        function()
                            toggleButton:TweenSize(UDim2.new(0, 135, 0, 65), "Out", "Quad", 0.2, true) -- Aumenta ao passar o mouse
                            toggleButton.BackgroundColor3 = Color3.fromRGB(55, 55, 60) -- Leve alteraÃ§Ã£o de cor
                            uiStroke.Color = Color3.fromRGB(120, 120, 120) -- Clareia a borda ao passar o mouse
                        end
                    )

                    toggleButton.MouseLeave:Connect(
                        function()
                            toggleButton:TweenSize(UDim2.new(0, 120, 0, 55), "Out", "Quad", 0.2, true) -- Volta ao tamanho normal
                            toggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 48) -- Cor de fundo original
                            uiStroke.Color = Color3.fromRGB(80, 80, 80) -- Volta Ã  cor original da borda
                        end
                    )

                    toggleButton.MouseButton1Down:Connect(
                        function()
                            local currentTime = tick()

                            -- Verifica se o toque ocorreu dentro do tempo de 400ms
                            if currentTime - lastTouchTime <= touchDelay then
                                touchCount = touchCount + 1
                            else
                                touchCount = 1 -- Se o tempo entre toques for maior que 400ms, conta como um novo toque
                            end

                            lastTouchTime = currentTime

                            -- Se for o segundo ou mais toques dentro do tempo de 400ms, chama a funÃ§Ã£o X
                            if touchCount >= 2 then
                                ActionSuperButton(SuperButtonNumberAction2) -- FunÃ§Ã£o X
                                touchCount = 0 -- Reseta a contagem apÃ³s a execuÃ§Ã£o
                            end
                        end
                    )

                    toggleButton.MouseButton1Up:Connect(
                        function()
                            -- Se foi apenas um toque (nÃ£o teve mÃºltiplos toques dentro de 400ms)
                            if touchCount == 1 then
                                task.wait(touchDelay) -- Aguarda o tempo de 400ms para garantir que nÃ£o serÃ¡ considerado como toque mÃºltiplo
                                if touchCount == 1 then
                                    ActionSuperButton(SuperButtonNumberAction) -- FunÃ§Ã£o Y
                                end
                            end
                        end
                    )

                    toggleButton.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
                end
            end

            function PlayUseSong()
                local sound = Instance.new("Sound")
                sound.SoundId = "rbxassetid://9120139331"
                sound.Parent = game:GetService("SoundService")
                sound.Volume = 4
                sound:Play()
            end

            function ActionSuperButton(t)
                if t == 0 then
                    PlayUseSong()
                    launchPlayer()
                end

                if t == 1 then
                    TPTBP()
                end

                if t == 2 then
                    local player = game.Players.LocalPlayer
                    local character = player and player.Character
                    character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame + Vector3.new(0, 500, 0)
                end

                if t == 3 then
                    if (_G.SelectedItemButtom) then
                        if containsItem(_G.WeaponList, _G.SelectedItemButtom) then
                            EquipWeapon(_G.SelectedItemButtom)
                            PlayUseSong()
                            NotificationMenuGame("I'm ready!! ( XD )")
                        else
                            NotificationMenuGame("???")
                        end
                    else
                        NotificationMenuGame(
                            "First it is necessary to calibrate the item...",
                            "You can do this in the menu where you activated the button."
                        )
                    end
                end

                if t == 4 then
                    MinkV7Toggle:Set((not _G.MinkV7))
                end

                if t == 5 then
                    _G.LockPlayer = not _G.LockPlayer

                    if not _G.LockPlayer then
                        if _G.LockPlayerX and _G.LockPlayerX.Character then
                        NotificationMenuGame("{color1_Green}" .. tostring(_G.LockPlayerX.Name) .. "{color1_/} has been {color2_Green}Unlock{color2_/}.")
                        else
                            NotificationMenuGame("Target {color2_Green}Unlock{color2_/}")
                        end
                    else
                        if _G.LockPlayerX and _G.LockPlayerX.Character then

                        NotificationMenuGame("{color1_Green}" .. tostring(_G.LockPlayerX.Name) .. "{color1_/} has been {color2_Red}LOCKED{color2_/}.")
                    else
                        NotificationMenuGame("Target {color2_Red}LOCKED{color2_/}")
                    end
                    end
                end
            end

            _G.LockPlayer = false
            List = {
                "Super Boost",
                "Where is he? ( Player )",
                "Manual SafeMode",
                "Hold an Item",
                "Change MinkV7",
                "Lock Player"
            }

            A =
                Utilities:AddButton(
                {
                    Name = "Select Item. <font color='rgb(250, 250, 50)'>( Nothing )</font>",
                    Callback = function()
                        tool = tostring(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name)
                        _G.SelectedItemButtom = tool
                        _G.SettingTable.A =
                            tostring(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name)
                        A:Set("Select Item. <font color='rgb(60, 250, 60)'>( " .. _G.SelectedItemButtom .. " )</font>")
                        NotificationMenuGame((tool))
                    end
                }
            )

            if (_G.SettingTable.A) then
                _G.SelectedItemButtom = _G.SettingTable.A
                A:Set("Select Item. <font color='rgb(60, 250, 60)'>( " .. _G.SelectedItemButtom .. " )</font>")
            end

            Utilities:AddToggle(
                {
                    Name = "Insert Button <font color='rgb(50, 250, 0)'>( GUI )</font>",
                    Description = "A button is added to perform some action! with one click!",
                    Default = _G.SettingTable.InsertButtom or false,
                    Callback = function(Value)
                        _G.SettingTable.InsertButtom = Value
                        pcall(
                            function()
                                if Value then
                                    AddToggleButton()
                                else
                                    RemoveToggleButton()
                                end
                            end
                        )
                    end
                }
            )

            Utilities:AddDropdown(
                {
                    Name = "Primary Execution <font color='rgb(250, 30, 250)'>( 1 Click )</font>",
                    Options = List,
                    Default = _G.SettingTable.PrimaryExecution or {"Suprise"},
                    MultSelect = false,
                    Callback = function(Value)
                        _G.SettingTable.PrimaryExecution = Value
                        L = List
                        SuperButtonNumberAction = findIndex(Value, L) - 1
                    end
                }
            )

            Utilities:AddDropdown(
                {
                    Name = "Secondary Execution <font color='rgb(250, 30, 250)'>( 2 Click )</font>",
                    Options = List,
                    Default = _G.SettingTable.SecondaryExecution or {"Suprise"},
                    MultSelect = false,
                    Callback = function(Value)
                        _G.SettingTable.SecondaryExecution = Value
                        L = List
                        SuperButtonNumberAction2 = findIndex(Value, L) - 1
                    end
                }
            )

            Utilities:AddSection(
                {
                    Name = "Utilities"
                }
            )

            Utilities:AddButton(
                {
                    Name = "Invisible!",
                    Description = "( ALLOWS YOU TO BECOME <font color='rgb(50, 250, 30)'>INVISIBLE</font> WHILE IT IS NOT <font color='rgb(250, 50, 30)'>IN YOUR HANDS.</font> )",
                    Callback = function()
                        game:GetService("Players").LocalPlayer.Character.LowerTorso:Destroy()
                    end
                }
            )

            Utilities:AddToggle(
                {
                    Name = "Auto Haki!",
                    Description = "Activate Haki automatically when deactivated.",
                    Default = _G.SettingTable.Haki or false,
                    Callback = function(Value)
                        _G.SettingTable.Haki = (Value)
                        if Value then
                            AutoSuperHaki()
                        end
                    end
                }
            )

            Utilities:AddToggle(
                {
                    Name = "Bloxxy ADM",
                    Default = false,
                    Callback = function(Value)
                        ADM_Boost_0 = Value
                    end
                }
            )

            Utilities:AddToggle(
                {
                    Name = "Auto AwekiningV4! ( <font color='rgb(50, 250, 60)'>NEW</font> )",
                    Default = _G.SettingTable.AwekiningV4 or false,
                    Callback = function(Value)
                        _G.SettingTable.AwekiningV4 = Value

                        if Value then
                            function AwakeY()
                                local player = game.Players.LocalPlayer
                                local character = player.Character
                                if character.RaceEnergy.Value >= 1 and not character.RaceTransformed.Value then
                                    local virtualInput = game:GetService("VirtualInputManager")
                                    virtualInput:SendKeyEvent(true, "Y", false, game)
                                    virtualInput:SendKeyEvent(false, "Y", false, game)
                                end
                            end

                            while _G.SettingTable.AwekiningV4 do
                                task.wait(0.1)
                                AwakeY()
                            end
                        end
                    end
                }
            )

            function MinkV7Function()
                spawn(
                    function()
                        function MINKV7Y()
                            local player = game.Players.LocalPlayer
                            local character = player.Character
                            if character then
                                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                                local humanoid = character:FindFirstChildOfClass("Humanoid")

                                if humanoidRootPart and humanoid then
                                    -- ObtÃ©m a direÃ§Ã£o de movimento desejada pelo jogador
                                    local moveDirection = humanoid.MoveDirection

                                    if moveDirection.Magnitude > 0 then
                                        -- Aplica uma pequena velocidade na direÃ§Ã£o de movimento, preservando a velocidade no eixo Y
                                        local newVelocity =
                                            Vector3.new(
                                            moveDirection.X * 300,
                                            humanoidRootPart.Velocity.Y,
                                            moveDirection.Z * 300
                                        )
                                        humanoidRootPart.Velocity = newVelocity
                                    end
                                end
                            end
                        end

                        while _G.MinkV7 do
                            task.wait()
                            MINKV7Y()
                        end
                    end
                )
            end

            MinkV7Toggle =
                Utilities:AddToggle(
                {
                    Name = "<font color='rgb(50, 250, 30)'>Mink V7!</font>",
                    Description = "That's really, really fast...",
                    Default = false,
                    Callback = function(Value)
                        _G.MinkV7 = Value
                        if Value then
                            MinkV7Function()
                        end
                    end
                }
            )

            Utilities:AddToggle(
                {
                    Name = "Super LiteMode ( <font color='rgb(50, 250, 60)'>+FPS</font> )",
                    Default = _G.SettingTable.FPS or false,
                    Callback = function(Value)
                        _G.SettingTable.FPS = Value
                        if Value then
                            pcall(
                                function()
                                    local g = game
                                    local w = g.Workspace
                                    local l = g.Lighting
                                    local t = w.Terrain

                                    -- ConfiguraÃ§Ãµes do terreno e iluminaÃ§Ã£o
                                    t.WaterWaveSize = 0
                                    t.WaterWaveSpeed = 0
                                    t.WaterReflectance = 0
                                    t.WaterTransparency = 0
                                    l.GlobalShadows = false
                                    l.FogEnd = 9e9
                                    l.Brightness = 0
                                    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01

                                    -- OtimizaÃ§Ãµes para performance
                                    for _, v in pairs(g:GetDescendants()) do
                                        if
                                            v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("CornerWedgePart") or
                                                v:IsA("TrussPart") or
                                                v:IsA("MeshPart")
                                         then
                                            v.Material = Enum.Material.Plastic
                                            v.Reflectance = 0
                                            v.CastShadow = false
                                        elseif v:IsA("Decal") or v:IsA("Texture") then
                                            v.Transparency = 0
                                        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                                            v.Lifetime = NumberRange.new(0, 0)
                                            v.Transparency = NumberSequence.new(0)
                                        elseif v:IsA("Explosion") then
                                            v.BlastPressure = 1
                                            v.BlastRadius = 1
                                        elseif
                                            v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles")
                                         then
                                            v.Enabled = false
                                        end
                                    end

                                    -- Desativando efeitos visuais no Lighting
                                    for _, e in pairs(l:GetChildren()) do
                                        if
                                            e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or
                                                e:IsA("ColorCorrectionEffect") or
                                                e:IsA("BloomEffect") or
                                                e:IsA("DepthOfFieldEffect")
                                         then
                                            e.Enabled = false
                                        end
                                    end

                                    -- Removendo elementos de Ã¡gua na cÃ¢mera (se existirem)
                                    for _, v in pairs(w.Camera:GetDescendants()) do
                                        if v.Name == "Water" then
                                            v.Transparency = 1
                                            v.Material = Enum.Material.Plastic
                                        end
                                    end

                                    -- Removendo partÃ­culas e efeitos de ataques (pedaÃ§os do chÃ£o)
                                    for _, obj in pairs(w:GetDescendants()) do
                                        if
                                            obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Smoke") or
                                                obj:IsA("Fire")
                                         then
                                            obj:Destroy()
                                        elseif obj:IsA("Explosion") then
                                            obj.BlastPressure = 1
                                            obj.BlastRadius = 1
                                        end
                                    end
                                end
                            )
                        end
                    end
                }
            )

            Utilities:AddToggle(
                {
                    Name = "Auto Remove Damage V2!! ( <font color='rgb(60, 250, 60)'>Fixed, Improved</font> )",
                    Default = _G.SettingTable.Dam or false,
                    Callback = function(Value)
                        _G.SettingTable.Dam = Value
                        ReplicatedStorage = game:GetService("ReplicatedStorage")
                        ReplicatedStorage.Assets.GUI.DamageCounter.Enabled = not (Value)
                    end
                }
            )

            Utilities:AddToggle(
                {
                    Name = "Auto Remove Fog!",
                    Default = _G.SettingTable.Fog or false,
                    Callback = function(Value)
                        _G.SettingTable.Fog = (Value)

                        pcall(
                            function()
                                local lighting = game.Lighting
                                lighting.FogEnd = 100000
                                for _, v in pairs(lighting:GetDescendants()) do
                                    if v:IsA("Atmosphere") then
                                        v:Destroy()
                                    end
                                end
                            end
                        )
                    end
                }
            )

            Utilities:AddToggle(
                {
                    Name = "???",
                    Default =  _G.SettingTable.What or false,
                    Callback = function(Value)
                        _G.SettingTable.What = Value
                        if Value then
                            CreateBar()
                        end
                    end
                }
            )

            Utilities:AddSlider(
                {
                    Name = "Your Gear <font color='rgb(50, 250, 30)'>( Limited Timer )</font> ",
                    MinValue = 1,
                    MaxValue = 6,
                    Default = _G.SettingTable.Gear or 1,
                    Increase = 1,
                    Callback = function(Value)
                        _G.SettingTable.Gear = Value
                        if not (Value == _G.Gear) and not ReloadAlert and DDD then
                            ReloadAlert = true
                            NotificationMenuGame("{color1_Green}Need Reload Script{color1_/}")
                            task.wait(2)
                            ReloadAlert = false
                        end
                    end
                }
            )
            DDD = true

            Utilities:AddToggle(
                {
                    Name = "Super Graphics <font color='rgb(250, 50, 60)'>( Not Recommended... )</font>",
                    Default = _G.SettingTable.FPS3 or false,
                    Callback = function(Value)
                        _G.SettingTable.FPS2 = Value
                        if Value then
                            local Lighting = game:GetService("Lighting")
                            local player = game.Players.LocalPlayer
                            local camera = game.Workspace.CurrentCamera

                            -- Ajustes Iniciais de IluminaÃ§Ã£o
                            Lighting.Brightness = 1.6
                            Lighting.GlobalShadows = true
                            Lighting.EnvironmentDiffuseScale = 1
                            Lighting.EnvironmentSpecularScale = 0.7
                            Lighting.ClockTime = 14 -- HorÃ¡rio inicial

                            -- CorreÃ§Ã£o de Cor para MudanÃ§a de Hora
                            local colorCorrection = Instance.new("ColorCorrectionEffect")
                            colorCorrection.Parent = Lighting

                            -- ConfiguraÃ§Ãµes para Raios Solares
                            local sunRays = Instance.new("SunRaysEffect")
                            sunRays.Intensity = 1
                            sunRays.Spread = 1
                            sunRays.Parent = Lighting

                            -- Brilho suave para destaques
                            local bloom = Instance.new("BloomEffect")
                            bloom.Intensity = 0.15
                            bloom.Size = 20
                            bloom.Threshold = 1
                            bloom.Parent = Lighting

                            -- AlteraÃ§Ã£o gradual da cor ao longo do dia
                            function updateLightingColor(hour)
                                if hour >= 6 and hour < 12 then
                                    -- ManhÃ£: tons mais frios
                                    colorCorrection.TintColor =
                                        colorCorrection.TintColor:lerp(Color3.fromRGB(245, 245, 255), 0.02)
                                    sunRays.Intensity = 0.1
                                    Lighting.Brightness = 1.6
                                elseif hour >= 12 and hour < 17 then
                                    -- Meio-dia: luz neutra
                                    colorCorrection.TintColor =
                                        colorCorrection.TintColor:lerp(Color3.fromRGB(255, 250, 240), 0.02)
                                    sunRays.Intensity = 0.1
                                    Lighting.Brightness = 1.8
                                elseif hour >= 17 and hour < 18 then
                                    -- Entardecer: tons alaranjados
                                    colorCorrection.TintColor =
                                        colorCorrection.TintColor:lerp(Color3.fromRGB(255, 210, 160), 0.02)
                                    sunRays.Intensity = 0.05
                                    Lighting.Brightness = 1.4
                                else
                                    -- Noite: tom azulado e luz suave
                                    colorCorrection.TintColor =
                                        colorCorrection.TintColor:lerp(Color3.fromRGB(180, 200, 255), 0.02)
                                    sunRays.Intensity = 0.03
                                    Lighting.Brightness = 1.2
                                end
                            end

                            -- AtualizaÃ§Ã£o de IluminaÃ§Ã£o e Hora com TransiÃ§Ãµes Suaves
                            function UpdateColorDayX()
                                local hour = Lighting.ClockTime
                                updateLightingColor(hour)
                            end

                            game:GetService("RunService").RenderStepped:Connect(
                                function()
                                    UpdateColorDayX()
                                end
                            )

                            -- FunÃ§Ã£o para aplicar reflexo realista Ã  Ã¡gua
                            local function applyWaterEffects()
                                for _, waterPart in pairs(game.Workspace:GetDescendants()) do
                                    if waterPart:IsA("BasePart") and waterPart.Material == Enum.Material.Water then
                                        waterPart.Reflectance = 0.8
                                        waterPart.Transparency = 0.1
                                    end
                                end
                            end

                            applyWaterEffects()

                            -- BorrÃ£o de Movimento DinÃ¢mico para Todos os Movimentos, incluindo a CÃ¢mera
                            local motionBlur = Instance.new("BlurEffect")
                            motionBlur.Size = 0
                            motionBlur.Parent = Lighting

                            local lastCameraPosition = camera.CFrame.Position

                            function BlurX()
                                local speed =
                                    (player.Character and player.Character.HumanoidRootPart.Velocity.Magnitude) or 0
                                local cameraSpeed = (camera.CFrame.Position - lastCameraPosition).Magnitude

                                -- Aplicando o efeito de blur baseado em movimento do jogador e da cÃ¢mera
                                local blurAmount = math.clamp(((speed / 2) + (cameraSpeed * 2)) / 30, 0, 10)
                                motionBlur.Size = blurAmount

                                lastCameraPosition = camera.CFrame.Position
                            end

                            game:GetService("RunService").RenderStepped:Connect(
                                function()
                                    BlurX()
                                end
                            )

                            local g = game

                            for _, v in pairs(g:GetDescendants()) do
                                if v:IsA("ParticleEmitter") or v:IsA("Trail") then
                                    v.Lifetime = NumberRange.new(2.5, 2.5)
                                end
                            end
                        end
                    end
                }
            )
        end

        --================================== Extra-Menu ==============================
        if true then
            VV1 =
                Extra:AddToggle(
                {
                    Name = "Teleport for players. <font color='rgb(50, 250, 50)'>( Recommended )</font>",
                    Description = "Teleports the player <font color='rgb(30, 250, 0)'>exactly</font> where the other is.",
                    Default = _G.SettingTable.TPV1 or false,
                    Callback = function(Value)
                        _G.SettingTable.TPV1 = Value
                        if _G.SettingTable.TPV2 then
                            pcall(
                                function()
                                    VV2:Set(false)
                                end
                            )
                        end
                        _G.V1 = (Value)
                        if Value then
                            _G.OJO_VS["V1"] = true
                        else
                            _G.OJO_VS["V1"] = nil
                        end

                        if Value and not _G.VPO then
                            OJO()
                        end
                    end
                }
            )

            VV2 =
                Extra:AddToggle(
                {
                    Name = "V2 in all teleports <font color='rgb(50, 250, 250)'>( NEW )</font>",
                    Default = _G.SettingTable.TPV2 or false,
                    Description = "<font color='rgb(250, 250, 0)'>Makes small edits</font> to the <font color='rgb(30, 250, 0)'>teleport tools</font>, which make some <font color='rgb(250, 30, 0)'>difference</font>.",
                    Callback = function(Value)
                        _G.SettingTable.TPV2 = Value
                        if _G.SettingTable.TPV2 then
                            pcall(
                                function()
                                    VV1:Set(false)
                                end
                            )
                        end

                        _G.V2 = (Value)
                        if Value then
                            _G.OJO_VS["V2"] = true
                        else
                            _G.OJO_VS["V2"] = nil
                        end

                        if Value then
                            _G.OJO_SV["V2"] = true
                        else
                            _G.OJO_SV["V2"] = nil
                        end

                        if Value and not _G.VPO then
                            OJO()
                        end

                        if Value and not _G.IsScriptRunning then
                            SuperView()
                        end

                        while _G.SettingTable.TPV2 do
                            task.wait(0.1)

                            if (_G.SPLY) and (_G.SPLY.Character) and (_G.SPLY.Character:FindFirstChild("Humanoid")) then
                                _G.SelectedPlayer = _G.SPLY
                                ChangeTargetPlayer(_G.SPLY.Name)
                            else
                                _G.SelectedPlayer = game.Players.LocalPlayer
                            end
                        end
                    end
                }
            )

            Extra:AddSection(
                {
                    Name = "Teleport Toll"
                }
            )

            Extra:AddToggle(
                {
                    Name = "Auto Teleport Tool! <font color='rgb(50, 250, 30)'>( Hard )</font>",
                    Default = false,
                    Callback = function(Value)
                        if not Value then
                            if _G.TPTOLL then
                                _G.TPTOLL:Destroy()
                                _G.TPTOLL = nil
                            end
                            return
                        end

                        local plr = game:GetService("Players").LocalPlayer
                        local mouse = plr:GetMouse()
                        local tool = Instance.new("Tool")
                        tool.RequiresHandle = false
                        tool.Name = "Teleport"
                        tool.Activated:Connect(
                            function()
                                local root = plr.Character.HumanoidRootPart
                                local pos = mouse.Hit.Position + Vector3.new(0, 2.5, 0)
                                local offset = pos - root.Position
                                root.CFrame = root.CFrame + offset
                            end
                        )
                        tool.Parent = plr.Backpack
                        _G.TPTOLL = toll
                    end
                }
            )

            Extra:AddToggle(
                {
                    Name = "Auto Teleport Tool V2! <font color='rgb(250, 50, 50)'>( Medium )</font>",
                    Default = false,
                    Callback = function(Value)
                        if not Value then
                            return
                        end

                        local Players = game:GetService("Players")
                        local LocalPlayer = Players.LocalPlayer
                        local Mouse = LocalPlayer:GetMouse()
                        local UserInputService = game:GetService("UserInputService")

                        local ItemUsed = false
                        local IsDragging = false
                        local TeleportTool = Instance.new("Tool")

                        TeleportTool.RequiresHandle = false
                        TeleportTool.Name = "Teleport V2"

                        local function teleport()
                            local Character = LocalPlayer.Character
                            if Character then
                                local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
                                if HumanoidRootPart then
                                    local Hit = Mouse.Hit
                                    local NewPosition = Hit.Position + Vector3.new(0, 2.5, 0)
                                    local Offset = NewPosition - HumanoidRootPart.Position
                                    HumanoidRootPart.CFrame = HumanoidRootPart.CFrame + Offset
                                end
                            end
                        end

                        TeleportTool.Activated:Connect(
                            function()
                                ItemUsed = true
                                _G.OrionLib:MakeNotification(
                                    {
                                        Name = "Teleport V2 Ready!!",
                                        Content = "The item has been used, click on the teleport location!",
                                        Image = "rbxassetid://4483345998",
                                        Time = 3
                                    }
                                )
                            end
                        )

                        UserInputService.InputBegan:Connect(
                            function(input, gameProcessed)
                                if not gameProcessed then
                                    if input.UserInputType == Enum.UserInputType.Touch then
                                        IsDragging = false
                                    elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
                                        IsDragging = false
                                    end
                                end
                            end
                        )

                        UserInputService.InputChanged:Connect(
                            function(input, gameProcessed)
                                if not gameProcessed then
                                    if input.UserInputType == Enum.UserInputType.Touch then
                                        IsDragging = true
                                    elseif input.UserInputType == Enum.UserInputType.MouseMovement then
                                        IsDragging = true
                                    end
                                end
                            end
                        )

                        UserInputService.InputEnded:Connect(
                            function(input, gameProcessed)
                                if not gameProcessed then
                                    if
                                        (input.UserInputType == Enum.UserInputType.Touch) or
                                            (input.UserInputType == Enum.UserInputType.MouseButton1)
                                     then
                                        if not IsDragging and ItemUsed then
                                            -- Executar cÃ³digo de teletransporte
                                            teleport()
                                            -- Resetar a variÃ¡vel apÃ³s o uso
                                            ItemUsed = false
                                        end
                                    end
                                end
                            end
                        )

                        TeleportTool.Parent = LocalPlayer.Backpack
                    end
                }
            )

            Extra:AddSection(
                {
                    Name = "Teleport With Action"
                }
            )

            Extra:AddSection(
                {
                    Name = "Teleport With Action + Player"
                }
            )

            Extra:AddToggle(
                {
                    Name = "Teleport With X:Dragon Trident + Player! <font color='rgb(50, 250, 30)'>( Super EZ )</font>",
                    Default = _G.SettingTable.TP_DT_Player or false,
                    Callback = function(Value)
                        _G.SettingTable.TP_DT_Player = Value
                        if not Value then
                            removeItemFromInventory("DragonTrident")
                            return
                        end
                        if Value then
                            addTeleportTool("DragonTrident")
                        end
                    end
                }
            )

            Extra:AddToggle(
                {
                    Name = "Teleport With X:Skull Guitar + Player! <font color='rgb(50, 250, 30)'>( Super EZ )</font>",
                    Default = _G.SettingTable.TP_SG_Player or false,
                    Callback = function(Value)
                        _G.SettingTable.TP_SG_Player = Value
                        if not Value then
                            removeItemFromInventory("SoulGuitar")
                            return
                        end
                        addTeleportTool("SoulGuitar")
                    end
                }
            )

            Extra:AddToggle(
                {
                    Name = "Teleport With V:Ice + Player! <font color='rgb(50, 250, 30)'>( Super EZ )</font>",
                    Default = _G.SettingTable.TP_VI_Player or false,
                    Callback = function(Value)
                        _G.SettingTable.TP_VI_Player = Value
                        if not Value then
                            removeItemFromInventory("ICE")
                            return
                        end
                        addTeleportTool("ICE")
                    end
                }
            )

            Extra:AddToggle(
                {
                    Name = "Teleport With Z:CDK + Player! <font color='rgb(50, 250, 30)'>( Super EZ )</font>",
                    Default = _G.SettingTable.TP_ZCDK_Player or false,
                    Callback = function(Value)
                        _G.SettingTable.TP_ZCDK_Player = Value
                        if not Value then
                            removeItemFromInventory("Z_CDK")
                            return
                        end
                        addTeleportTool("Z_CDK")
                    end
                }
            )

            Extra:AddToggle(
                {
                    Name = "Teleport With V:Dough + Player! <font color='rgb(50, 250, 30)'>( Super EZ )</font>",
                    Default = _G.SettingTable.TP_VD_Player or false,
                    Callback = function(Value)
                        _G.SettingTable.TP_VD_Player = Value
                        if not Value then
                            removeItemFromInventory("V_DOUGH")
                            return
                        end
                        addTeleportTool("V_DOUGH")
                    end
                }
            )

            Extra:AddSection(
                {
                    Name = "Teleport With Action + Player ( Super )"
                }
            )

            Extra:AddToggle(
                {
                    Name = "Teleport <font color='rgb(250, 30, 250)'>DragonGuitar</font>! <font color='rgb(50, 250, 30)'>( It's a combo?? )</font>",
                    Default = _G.SettingTable.TP_VI_XS_Player or false,
                    Callback = function(Value)
                        _G.SettingTable.TP_VI_XS_Player = Value
                        if not Value then
                            removeItemFromInventory("DragonGuitar")
                            return
                        end
                        addTeleportTool("DragonGuitar")
                    end
                }
            )
        end

        --================================== Other System ==============================
        if true then
            _G.NoAim = {}
            Dough_V = false
            CDK_Z = 0
            startTime = tick()
            spawn(
                function()
                    local RunService = game:GetService("RunService")

                    function SkillFruitX()

                        if UsesSkills(NameMelee(), "Z") and NameMelee() == "Godhuman" and _G.SPLY then
                            if _G.ActiveRace and _G.Gear > 5 then
                                sound4:Play()
                                for i = 1, 10 do
                                    TPTBP(0)
                                    task.wait()
                                end
                            end
                        end

                        if UsesSkills(NameMelee(), "X") and NameMelee() == "Electric Claw" and _G.SPLY then
                            if _G.ActiveRace and _G.Gear > 5 then
                                sound4:Play()
                                for i = 1, 10 do
                                    TPTBP(0)
                                    task.wait()
                                end
                            end
                        end

                        if UsesSkills(NameMelee(), "C") and NameMelee() == "Electric Claw" and _G.SPLY then
                            if _G.ActiveRace and _G.Gear > 5 then
                                sound4:Play()
                                for i = 1, 10 do
                                    TPTBP(0)
                                    task.wait()
                                end
                            end
                        end

                        if UsesSkills(NameMelee(), "Z") and NameMelee() == "Electric Claw" and _G.SPLY then
                            if _G.ActiveRace and _G.Gear > 5 then
                                sound4:Play()
                                for i = 1, 10 do
                                    TPTBP(0)
                                    task.wait()
                                end
                            end
                        end

                        if UsesSkills(NameMelee(), "C") and NameMelee() == "Dough-Dough" and _G.SPLY then
                            if _G.ActiveRace and _G.Gear > 5 then
                                sound4:Play()
                                for i = 1, 10 do
                                    TPTBP(0)
                                    task.wait()
                                end
                            end
                        end

                        DF = game:GetService("Players").LocalPlayer.Data.DevilFruit.Value
                        if DF == "Dough-Dough" and UsesSkills(DF, "V") then
                            if not (Dough_V) then
                                Dough_V = true
                                startTime = tick()

                                while tick() - startTime < 0.8 do
                                    task.wait()
                                end

                                _G.NoAim["Dough"] = true
                            end
                        else
                            Dough_V = false
                            _G.NoAim["Dough"] = nil
                        end

                        if DF == "Dough-Dough" and UsesSkills(DF, "C") then
                            _G.CDOUGH = true
                        elseif _G.CDOUGH then
                            task.wait(5)
                            _G.BlockZGod = false
                        end

                        if NameSword() == "Cursed Dual Katana" and UsesSkills(NameSword(), "Z") then
                            CDK_Z = CDK_Z + 1
                            if CDK_Z > 5 then
                                _G.NoAim["CDK"] = true
                            end
                        else
                            _G.NoAim["CDK"] = nil
                            CDK_Z = 0
                        end
                    end

                    RunService.RenderStepped:Connect(
                        function()
                            spawn(function()
                            SkillFruitX()
                            end)
                        end
                    )
                end
            )

            local oldhook
            oldhook =
                hookmetamethod(
                game,
                "__namecall",
                function(self, ...)
                   
                    if self.Name == "RemoteEvent" and getnamecallmethod():lower() == "fireserver" then
                        local args = {...}
                        local Vector = args[1]
                        if typeof(Vector) == "Vector3" then
                            if _G.AimbotPos and (next(_G.NoAim) == nil) then
                                return oldhook(self, _G.AimbotPos, ...)
                            elseif
                                _G.SP and _G.SP.Character and _G.SP.Character.HumanoidRootPart and
                                    (next(_G.NoAim) == nil)
                             then
                                return oldhook(self, _G.SP.Character.HumanoidRootPart.Position, ...)
                            elseif
                                _G.SelectedBall and _G.SettingTable.AimbotV2 and _G.SelectedBall.Position and
                                    (next(_G.NoAim) == nil)
                             then
                                return oldhook(self, _G.SelectedBall.Position, ...)
                            end
                        end
                    end

                    return oldhook(self, ...)
                end
            )

            function UpdateWaponList()
                function TollsY()
                    WeaponList_0 = {}
                    for i, v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
                        if v:IsA("Tool") then
                            table.insert(WeaponList_0, v.Name)
                        end
                    end
                    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                        if v:IsA("Tool") then
                            table.insert(WeaponList_0, v.Name)
                        end
                    end
                    _G.WeaponList = WeaponList_0
                end

                while true do
                    task.wait(1)
                    TollsY()
                end
            end

            spawn(UpdateWaponList)
        end

        --================== Deth System =====================
        if true then
            local player = game.Players.LocalPlayer

            local function onPlayerDeath()
                _G.PlayerDeth = true
            end

            local function setupDeathDetection(character)
                local humanoid = character:WaitForChild("Humanoid")

                humanoid.Died:Connect(
                    function()
                        onPlayerDeath()
                    end
                )
            end

            if player.Character then
                setupDeathDetection(player.Character)
            end

            player.CharacterAdded:Connect(
                function(character)
                    setupDeathDetection(character)
                    task.wait(1)
                    _G.PlayerDeth = false
                    X = 0.5
                    task.wait(1)
                    restoreInventory()
                    ReloadList()
                end
            )
        end
